[
  {
    "__docId__": 0,
    "kind": "file",
    "name": "src/Entity.js",
    "content": "import {isInteger, isObject, entries, assign} from 'lodash-bound';\nimport assert from 'power-assert';\n\nimport {humanMsg, definePropertiesByValue, babelHelpers, ValueTracker, property} from 'utilities';\n\nconst $$allowInvokingConstructor = Symbol('$$allowInvokingConstructor');\n\n////////////////////////////////////////////////////////////////////////////////\n\n/** @wrapper */\nexport default (env) => {\n\t/**\n\t * The base-class of all entities described in the manifest.\n\t * @public\n\t */\n\tclass Entity extends ValueTracker {\n\t\t\n\t\t/** access to the `Entity` base class (to be used from any of its subclasses) */\n\t\tstatic get Entity() { return Entity }\n\t\t\n\t\t////////////////////////////////////////////////////////////\n\t\t////////// STATIC (building Entity-based classes) //////////\n\t\t////////////////////////////////////////////////////////////\n\t\t\n\t\t/**\n\t\t * Create a new `Entity` subclass with the given configuration.\n\t\t * @param {Object} config      - a set of static properties for the new class\n\t\t * @param {string} config.name - the name of the new class\n\t\t * @return {Class} a new subclass of `Entity`\n\t\t */\n\t\tstatic createClass(config): Class<Entity> {\n\t\t\t/* create the class with the right name, constructor and static content */\n\t\t\tconst {name, ...rest} = config;\n\t\t\t\n\t\t\t/* create the new class */\n\t\t\t// using Function constructor to give the class a dynamic name\n\t\t\t// http://stackoverflow.com/a/9947842/681588\n\t\t\t// (and using babel-technique to build it, rather than using class\n\t\t\t//  expression, so that it can be extended by babel-compiled code)\n\t\t\tconst EntitySubclass = new Function('Entity', `\n\t\t\t\t'use strict';\n\t\t\t\t${babelHelpers};\n\t\t\t\treturn function (_Entity) {\n\t\t\t\t\t_inherits(${name}, _Entity);\n\t\t\t\t\tfunction ${name}() {\n\t\t\t\t\t\t_classCallCheck(this, ${name});\n\t\t\t\t\t\treturn _possibleConstructorReturn(this, Object.getPrototypeOf(${name}).apply(this, arguments));\n\t\t\t\t\t}\n\t\t\t\t\treturn ${name};\n\t\t\t\t}(Entity);\n\t\t\t`)(Entity);\n\t\t\tEntitySubclass::definePropertiesByValue({ name });\n\t\t\t\n\t\t\t/* populate it with the requested data and behavior */\n\t\t\tEntitySubclass::assign(rest);\n\t\t\t\n\t\t\t/***/\n\t\t\treturn EntitySubclass;\n\t\t}\n\t\t\n\t\t\n\t\t\t\t\n\t\t///////////////////////////////////////////////////\n\t\t////////// STATIC CLASS ANALYSIS METHODS //////////\n\t\t///////////////////////////////////////////////////\n\t\t\n\t\t/**\n\t\t * Test whether the given entity is an instance of this class.\n\t\t * This is a polymorphic check; call it on `Entity` subclasses.\n\t\t * @param {Entity} entity - the entity to test\n\t\t * @return {boolean} whether the given entity is an instance of this class\n\t\t */\n\t\tstatic hasInstance(entity) {\n\t\t\tif (!entity) { return false }\n\t\t\treturn this.hasSubclass(entity.constructor);\n\t\t}\n\t\t\n\t\t/**\n\t\t * Test whether the given class is a subclass of this class.\n\t\t * This is a polymorphic check; call it on `Entity` subclasses.\n\t\t * @param {Class} otherClass - the class to test\n\t\t * @return {boolean} whether the given class is subclass of this class\n\t\t */\n\t\tstatic hasSubclass(otherClass) {\n\t\t\tif (!otherClass || otherClass.Entity !== this.Entity) { return false }\n\t\t\tif (this === this.Entity)                             { return true  }\n\t\t\tif (otherClass === this)                              { return true  }\n\t\t\tfor (let SubClass of this.extendedBy) {\n\t\t\t\tif (SubClass.hasSubclass(otherClass)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\t/**\n\t\t * Returns all the subclasses of this class, both direct and indirect.\n\t\t * This is a polymorphic check; call it on `Entity` subclasses.\n\t\t * @return {Set<Class>} the set of subclasses of this class\n\t\t */\n\t\tstatic allSubclasses() {\n\t\t\tlet result = [this];\n\t\t\tfor (let subClass of this.extendedBy) {\n\t\t\t\tresult = [...result, ...subClass.allSubclasses()];\n\t\t\t}\n\t\t\treturn new Set(result);\n\t\t}\n\t\t\n\t\t/**\n\t\t * Overwriting the JavaScript `instanceof` operator to work with our improvised class hierarchy.\n\t\t * @param {Entity} entity - the entity to test\n\t\t * @return {boolean} whether the given entity is an instance of this class\n\t\t * @see Entity.hasInstance\n\t\t */\n\t\tstatic [Symbol.hasInstance](entity) {\n\t\t\treturn this.hasInstance(entity);\n\t\t}\n\t\t\n\t\t\n\t\t///////////////////////////////\n\t\t////////// INSTANCES //////////\n\t\t///////////////////////////////\n\t\t\n\t\t/**\n\t\t * A factory function for creating a new entity of some Entity subclass.\n\t\t * This subclass can be determined polymorphically (e.g., by calling `Lyph.new()`),\n\t\t * or by specifying `initialValues.class` (e.g., by calling `Entity.new({ class: 'Lyph' })`.\n\t\t * @param {Object} [initialValues={}] - the initial values of (some of) the entity's fields\n\t\t * @param {Object}  options\n\t\t * @param {boolean} [options.isPlaceholder=false] - whether this new entity should be a placeholder\n\t\t * @return {Entity} the new entity\n\t\t */\n\t\tstatic new(\n\t\t\tinitialValues: {} = {},\n\t\t    options:       {} = {}\n\t\t) : this {\n\t\t\t\t\n\t\t\t/* Determine the class. */\n\t\t\tlet cls;\n\t\t\tif (initialValues.class) {\n\t\t\t\tcls = env.classes[initialValues.class];\n\t\t\t\tassert(this.hasSubclass(cls), humanMsg`\n\t\t\t\t\tThe 'class' property in the initial values of a new entity has\n\t\t\t\t\tto represent a subclass of the base of the call.\n\t\t\t\t\tYou cannot call \\`${this.name}.new({ class: '${initialValues.class}' })\\`.\n\t\t\t\t`);\n\t\t\t} else {\n\t\t\t\tcls = this;\n\t\t\t\tinitialValues = {\n\t\t\t\t\t...initialValues,\n\t\t\t\t\tclass: this.name\n\t\t\t\t};\n\t\t\t}\n\t\t\t\n\t\t\t/* Make sure we're not instantiating a relationship. */\n\t\t\t// Note that while relationships are still classes (for accessing\n\t\t\t// information about them statically), they were downgraded from\n\t\t\t// the status of first-class citizens. They should not be instantiated.\n\t\t\t// Perhaps the code-base can be simplified by not having them be classes\n\t\t\t// anymore. Any such change would mostly happen in `Module.js`.\n\t\t\tassert(!cls.isRelationship, humanMsg`\n\t\t\t\tYou cannot instantiate ${this.name},\n\t\t\t\tbecause it is a Relationship subclass.\n\t\t\t`);\n\t\t\t\n\t\t\t/* Instantiate the class. */\n\t\t\treturn new cls(initialValues, {\n\t\t\t\t...options,\n\t\t\t\t[$$allowInvokingConstructor]: true\n\t\t\t});\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Whether this entity is considered a placeholder, i.e., an entity that has not (yet) loaded. Once it is `false`, it stays `false`.\n\t\t * @type {boolean}\n\t\t */\n\t\t@property({ readonly: true }) isPlaceholder;\n\t\t\n\t\t/**\n\t\t * Whether the fields of this entity have been initialized. Once it is `true`, it stays `true`.\n\t\t * @type {boolean}\n\t\t */\n\t\t@property({ initial: false, readonly: true, isValid(v) { return !this.isPlaceholder || v === false } }) fieldsInitialized;\n\t\t\n\t\t/**\n\t\t * Whether this entity has been deleted. Note that the entity can be 'undeleted'.\n\t\t * @type {boolean}\n\t\t */\n\t\t@property({ initial: false, readonly: true, allowSynchronousAccess: true, isValid(v) { return v === false || !this.isPlaceholder } }) deleted;\n\t\t\n\t\t/**\n\t\t * Whether any `ValueTracker` based signals will still be emitted from this entity. Once it is set to `true`, it stays `true`.\n\t\t * This should be done before discarding the entity for good.\n\t\t * @type {boolean}\n\t\t */\n\t\t@property({ initial: false, readonly: true, allowSynchronousAccess: true, isValid(v) { return !this.isPlaceholder || v === false } }) silent;\n\t\t\n\t\t/**\n\t\t * The constructor is private. From the outside, call `Entity.new` instead.\n\t\t * @private\n\t\t * @param {Object}   initialValues\n\t\t * @param {Object}   options\n\t\t * @param {boolean} [options.isPlaceholder=false] - whether this new entity should be a placeholder\n\t\t */\n\t\tconstructor(initialValues = {}, options = {}) {\n\t\t\t/* initialize value tracking */\n\t\t\tsuper();\n\t\t\t\n\t\t\t/* make sure this constructor was invoked under proper conditions */\n\t\t\tassert(options[$$allowInvokingConstructor], humanMsg`\n\t\t\t\tDo not use 'new ${this.constructor.name}(...args)'.\n\t\t\t\tInstead, use '${this.constructor.name}.new(...args)'\n\t\t\t\t          or '${this.constructor.name}.get(...args)'.\n\t\t\t`);\n\t\t\tdelete options[$$allowInvokingConstructor];\n\t\t\t\n\t\t\t/* init placeholder property */\n\t\t\tconst {isPlaceholder=false} = options;\n\t\t\tthis.pSubject('isPlaceholder').next(isPlaceholder);\n\t\t\t\n\t\t\t/* stop signals after this entity is deleted */\n\t\t\tconst valueTrackerOptions = {\n\t\t\t\ttakeUntil: this.p('silent').filter(s=>!!s)\n\t\t\t};\n\t\t\tthis.setValueTrackerOptions(valueTrackerOptions);\n\t\t\t\n\t\t\t/* initialize all fields in this entity */\n\t\t\tenv.Field.initializeEntity(this, initialValues, valueTrackerOptions);\n\t\t}\n\t\t\n\t\t/**\n\t\t * Turn this from a placeholder into a fully realized entity,\n\t\t * and set fields to the given initial values.\n\t\t * @param {Object} [initialValues={}] - initial fields values\n\t\t */\n\t\tloadIntoPlaceholder(initialValues = {}) {\n\t\t\tassert(this.isPlaceholder);\n\t\t\tfor (let [key, value] of initialValues::entries()) {\n\t\t\t\tif (!this.fields[key]) { continue }\n\t\t\t\tthis.fields[key].set(value);\n\t\t\t}\n\t\t\tthis.pSubject('isPlaceholder').next(false);\n\t\t}\n\t\t\n\t\t/**\n\t\t * Convey some useful information when converting this entity to a string.\n\t\t * @return {string}\n\t\t */\n\t\tget [Symbol.toStringTag]() {\n\t\t\tconst identifier = this.id || this.name || this.title; // <-- just some common candidates\n\t\t\treturn `${this.constructor.name}${identifier ? ': '+identifier : ''}`;\n\t\t}\n\t\t\n\t\t/**\n\t\t * Augmented version of `ValueTracker#p` that also understands entity field-names.\n\t\t * @example\n\t\t *     let th1 = lyph.fields.thickness.p('value');\n\t\t *     let th2 = lyph.p('thickness');\n\t\t *     assert(th1 === th2);\n\t\t * @param args\n\t\t * @return {BehaviorSubject|Observable}\n\t\t */\n\t\tp(...args) {\n\t\t\tif (!!this.fields && typeof args[0] === 'string' && !!this.fields[args[0]]) {\n\t\t\t\treturn this.fields[args[0]].p('value');\n\t\t\t} else if (this.hasProperty(...args)) {\n\t\t\t\treturn super.p(...args);\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t//// Deleting\n\t\t\n\t\t/**\n\t\t * Delete this entity.\n\t\t * @see Entity#undelete\n\t\t * @example\n\t\t *     assert( !lyph.deleted );\n\t\t *     lyph.delete();\n\t\t *     assert(  lyph.deleted );\n\t\t */\n\t\tdelete  () { this.pSubject('deleted').next(true)  }\n\t\t\n\t\t/**\n\t\t * Delete this entity.\n\t\t * @see Entity#delete\n\t\t * @example\n\t\t *     assert(  lyph.deleted );\n\t\t *     lyph.undelete();\n\t\t *     assert( !lyph.deleted );\n\t\t */\n\t\tundelete() { this.pSubject('deleted').next(false) }\n\t\t\n\t\t/**\n\t\t * Silence this entity, so `ValueTracker` based events are no longer broadcast from this entity.\n\t\t * Once this is done on an entity, it cannot be undone. It should be done before discarding\n\t\t * an entity for good.\n\t\t * @example\n\t\t *     assert( !lyph.deleted );\n\t\t *     lyph.delete();\n\t\t *     assert(  lyph.deleted );\n\t\t */\n\t\tsilence() { this.pSubject('silent').next(true) }\n\t\t\n\t\t\n\t\t//// Transforming to/from JSON\n\t\t\n\t\t/** @private */\n\t\tstatic objectToJSON(obj, options = {}) {\n\t\t\tlet { sourceEntity } = options;\n\t\t\t// TODO: rather than sourceEntity, accept an entity CLASS,\n\t\t\t//     : which should have a good description of the fields\n\t\t\t//     : This is issue open-physiology/open-physiology-model#10\n\t\t}\n\t\t\n\t\t/**\n\t\t * Get a JSON (plain data) object of this entity and the values of all its fields.\n\t\t * @param {Object}   options\n\t\t * @param {boolean} [options.flattenFieldValues=false] - whether `Object` or `Array` property values should be flattened to a string in the output (for Neo4j, for example, which does not accept nested objects)\n\t\t * @param {Class}   [options.getAddress] - a function that returns an address corresponding to a given entity; defaults to `{ class, id }`\n\t\t * @return {Object} the JSON representation of this entity\n\t\t */\n\t\ttoJSON(options = {}) {\n\t\t\tlet result = {};\n\t\t\tconst {RelField, Rel$Field, Rel1Field} = env.classes;\n\t\t\tfor (let [key, field] of this.fields::entries()) {\n\t\t\t\tif (field instanceof RelField) {\n\t\t\t\t\tif (key[0] !== '<' && key[0] !== '-')   { continue } // no shortcuts\n\t\t\t\t\tif (env.classes[key.slice(3)].abstract) { continue } // no abstract relationship fields\n\t\t\t\t}\n\t\t\t\tlet valueJSON = field.constructor.valueToJSON(field.get(), options);\n\t\t\t\tif (field instanceof Rel$Field && valueJSON.length === 0)    { continue }\n\t\t\t\tif (field instanceof Rel1Field && valueJSON.length === null) { continue }\n\t\t\t\tresult[key] = valueJSON;\n\t\t\t}\n\t\t\t// TODO: we can still remove more redundant info from the result here,\n\t\t\t//     : e.g., entities in result['-->HasLayer'] don't also have to appear in result['-->HasPart']\n\t\t\treturn result;\n\t\t}\n\t\t\n\t\t\n\t\t//// Setting / getting of fields\n\t\t\n\t\t/**\n\t\t * Synchronously access a field value.\n\t\t * @param {string} key - the key of the field\n\t\t */\n\t\tget(key) { return this.fields[key].get()             }\n\t\t\n\t\t/**\n\t\t * Synchronously set a field to a new value.\n\t\t * @param {string}   key      - the key of the field\n\t\t * @param {*}        newValue - the new value for this field\n\t\t * @param {Object}  [options={}]\n\t\t * @param {boolean} [options.ignoreReadonly=false]   - allow this field's value to be changed even if it is read-only\n\t\t * @param {boolean} [options.ignoreValidation=false] - don't validate the new value\n\t\t */\n\t\tset(key, newValue, options = {}) { return this.fields[key].set(newValue, options) }\n\t\t\n\t}\n\t\n\treturn env.classes['Entity'] || Entity;\n};\n",
    "static": true,
    "longname": "src/Entity.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1,
    "kind": "variable",
    "name": "_extends",
    "memberof": "src/Entity.js",
    "static": true,
    "longname": "src/Entity.js~_extends",
    "access": null,
    "export": false,
    "importPath": "open-physiology-manifest/src/Entity.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2,
    "kind": "function",
    "name": "_objectWithoutProperties",
    "memberof": "src/Entity.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Entity.js~_objectWithoutProperties",
    "access": null,
    "export": false,
    "importPath": "open-physiology-manifest/src/Entity.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      },
      {
        "name": "keys",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3,
    "kind": "variable",
    "name": "$$allowInvokingConstructor",
    "memberof": "src/Entity.js",
    "static": true,
    "longname": "src/Entity.js~$$allowInvokingConstructor",
    "access": null,
    "export": false,
    "importPath": "open-physiology-manifest/src/Entity.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4,
    "kind": "class",
    "name": "Entity",
    "memberof": "src/Entity.js",
    "static": true,
    "longname": "src/Entity.js~Entity",
    "access": "public",
    "export": true,
    "importPath": "open-physiology-manifest/src/Entity.js",
    "importStyle": "Entity",
    "description": "The base-class of all entities described in the manifest.",
    "lineNumber": 20,
    "interface": false,
    "extends": [
      "utilities~ValueTracker"
    ]
  },
  {
    "__docId__": 5,
    "kind": "get",
    "name": "Entity",
    "memberof": "src/Entity.js~Entity",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Entity.js~Entity.Entity",
    "access": null,
    "description": "access to the `Entity` base class (to be used from any of its subclasses)",
    "lineNumber": 23,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 6,
    "kind": "method",
    "name": "createClass",
    "memberof": "src/Entity.js~Entity",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Entity.js~Entity.createClass",
    "access": null,
    "description": "Create a new `Entity` subclass with the given configuration.",
    "lineNumber": 37,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "a set of static properties for the new class"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "config.name",
        "description": "the name of the new class"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Class"
      ],
      "spread": false,
      "description": "a new subclass of `Entity`"
    }
  },
  {
    "__docId__": 7,
    "kind": "method",
    "name": "hasInstance",
    "memberof": "src/Entity.js~Entity",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Entity.js~Entity.hasInstance",
    "access": null,
    "description": "Test whether the given entity is an instance of this class.\nThis is a polymorphic check; call it on `Entity` subclasses.",
    "lineNumber": 78,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": "the entity to test"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "whether the given entity is an instance of this class"
    }
  },
  {
    "__docId__": 8,
    "kind": "method",
    "name": "hasSubclass",
    "memberof": "src/Entity.js~Entity",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Entity.js~Entity.hasSubclass",
    "access": null,
    "description": "Test whether the given class is a subclass of this class.\nThis is a polymorphic check; call it on `Entity` subclasses.",
    "lineNumber": 91,
    "params": [
      {
        "nullable": null,
        "types": [
          "Class"
        ],
        "spread": false,
        "optional": false,
        "name": "otherClass",
        "description": "the class to test"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "whether the given class is subclass of this class"
    }
  },
  {
    "__docId__": 9,
    "kind": "method",
    "name": "allSubclasses",
    "memberof": "src/Entity.js~Entity",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Entity.js~Entity.allSubclasses",
    "access": null,
    "description": "Returns all the subclasses of this class, both direct and indirect.\nThis is a polymorphic check; call it on `Entity` subclasses.",
    "lineNumber": 114,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Set<Class>"
      ],
      "spread": false,
      "description": "the set of subclasses of this class"
    }
  },
  {
    "__docId__": 10,
    "kind": "method",
    "name": "[Symbol.hasInstance]",
    "memberof": "src/Entity.js~Entity",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Entity.js~Entity.[Symbol.hasInstance]",
    "access": null,
    "description": "Overwriting the JavaScript `instanceof` operator to work with our improvised class hierarchy.",
    "see": [
      "Entity.hasInstance"
    ],
    "lineNumber": 128,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": "the entity to test"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "whether the given entity is an instance of this class"
    }
  },
  {
    "__docId__": 11,
    "kind": "method",
    "name": "new",
    "memberof": "src/Entity.js~Entity",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Entity.js~Entity.new",
    "access": null,
    "description": "A factory function for creating a new entity of some Entity subclass.\nThis subclass can be determined polymorphically (e.g., by calling `Lyph.new()`),\nor by specifying `initialValues.class` (e.g., by calling `Entity.new({ class: 'Lyph' })`.",
    "lineNumber": 145,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "initialValues",
        "description": "the initial values of (some of) the entity's fields"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.isPlaceholder",
        "description": "whether this new entity should be a placeholder"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Entity"
      ],
      "spread": false,
      "description": "the new entity"
    }
  },
  {
    "__docId__": 12,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Entity.js~Entity#constructor",
    "access": "private",
    "description": "The constructor is private. From the outside, call `Entity.new` instead.",
    "lineNumber": 212,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialValues",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.isPlaceholder",
        "description": "whether this new entity should be a placeholder"
      }
    ]
  },
  {
    "__docId__": 13,
    "kind": "method",
    "name": "loadIntoPlaceholder",
    "memberof": "src/Entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Entity.js~Entity#loadIntoPlaceholder",
    "access": null,
    "description": "Turn this from a placeholder into a fully realized entity,\nand set fields to the given initial values.",
    "lineNumber": 243,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "initialValues",
        "description": "initial fields values"
      }
    ]
  },
  {
    "__docId__": 14,
    "kind": "get",
    "name": "[Symbol.toStringTag]",
    "memberof": "src/Entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Entity.js~Entity#[Symbol.toStringTag]",
    "access": null,
    "description": "Convey some useful information when converting this entity to a string.",
    "lineNumber": 258,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 15,
    "kind": "method",
    "name": "p",
    "memberof": "src/Entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Entity.js~Entity#p",
    "access": null,
    "description": "Augmented version of `ValueTracker#p` that also understands entity field-names.",
    "examples": [
      "    let th1 = lyph.fields.thickness.p('value');\n    let th2 = lyph.p('thickness');\n    assert(th1 === th2);"
    ],
    "lineNumber": 272,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BehaviorSubject",
        "Observable"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 16,
    "kind": "method",
    "name": "delete",
    "memberof": "src/Entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Entity.js~Entity#delete",
    "access": null,
    "description": "Delete this entity.",
    "examples": [
      "    assert( !lyph.deleted );\n    lyph.delete();\n    assert(  lyph.deleted );"
    ],
    "see": [
      "Entity#undelete"
    ],
    "lineNumber": 290,
    "params": []
  },
  {
    "__docId__": 17,
    "kind": "method",
    "name": "undelete",
    "memberof": "src/Entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Entity.js~Entity#undelete",
    "access": null,
    "description": "Delete this entity.",
    "examples": [
      "    assert(  lyph.deleted );\n    lyph.undelete();\n    assert( !lyph.deleted );"
    ],
    "see": [
      "Entity#delete"
    ],
    "lineNumber": 302,
    "params": []
  },
  {
    "__docId__": 18,
    "kind": "method",
    "name": "silence",
    "memberof": "src/Entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Entity.js~Entity#silence",
    "access": null,
    "description": "Silence this entity, so `ValueTracker` based events are no longer broadcast from this entity.\nOnce this is done on an entity, it cannot be undone. It should be done before discarding\nan entity for good.",
    "examples": [
      "    assert( !lyph.deleted );\n    lyph.delete();\n    assert(  lyph.deleted );"
    ],
    "lineNumber": 315,
    "params": []
  },
  {
    "__docId__": 19,
    "kind": "method",
    "name": "objectToJSON",
    "memberof": "src/Entity.js~Entity",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Entity.js~Entity.objectToJSON",
    "access": "private",
    "description": null,
    "lineNumber": 322,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ]
  },
  {
    "__docId__": 20,
    "kind": "method",
    "name": "toJSON",
    "memberof": "src/Entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Entity.js~Entity#toJSON",
    "access": null,
    "description": "Get a JSON (plain data) object of this entity and the values of all its fields.",
    "lineNumber": 336,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.flattenFieldValues",
        "description": "whether `Object` or `Array` property values should be flattened to a string in the output (for Neo4j, for example, which does not accept nested objects)"
      },
      {
        "nullable": null,
        "types": [
          "Class"
        ],
        "spread": false,
        "optional": true,
        "name": "options.getAddress",
        "description": "a function that returns an address corresponding to a given entity; defaults to `{ class, id }`"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "the JSON representation of this entity"
    }
  },
  {
    "__docId__": 21,
    "kind": "method",
    "name": "get",
    "memberof": "src/Entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Entity.js~Entity#get",
    "access": null,
    "description": "Synchronously access a field value.",
    "lineNumber": 370,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "the key of the field"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 22,
    "kind": "method",
    "name": "set",
    "memberof": "src/Entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Entity.js~Entity#set",
    "access": null,
    "description": "Synchronously set a field to a new value.",
    "lineNumber": 382,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "the key of the field"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "newValue",
        "description": "the new value for this field"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.ignoreReadonly",
        "description": "allow this field's value to be changed even if it is read-only"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.ignoreValidation",
        "description": "don't validate the new value"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 23,
    "kind": "file",
    "name": "src/fields/Field.js",
    "content": "import {pick, mapValues, isUndefined, values} from 'lodash-bound';\n\nimport {defineProperty} from 'bound-native-methods';\n\nimport assert from 'power-assert';\n\nimport {ValueTracker, property, callOrReturn, humanMsg} from 'utilities';\n\nimport {\n\t$$owner,\n\t$$key,\n\t$$desc,\n\t$$value,\n\t$$initSet,\n\t$$entriesIn\n} from './symbols';\nconst $$fieldsInitialized = Symbol('$$fieldsInitialized');\nconst $$aliases           = Symbol('$$aliases');\n\nimport {constraint} from \"../util/misc\";\n\n/** @wrapper */\nexport default (env) => {\n\t/**\n\t * A class that represents specific fields on an `Entity`.\n\t * @public\n\t */\n\tclass Field extends ValueTracker {\n\t\t\n\t\t////////////\n\t\t// static //\n\t\t////////////\n\t\t\n\t\t/**\n\t\t * Equip an `Entity` subclass `cls` with its particular fields,\n\t\t * optionally only for a particular key.\n\t\t * @param {Class}   cls         - a subclass of `Entity` still under construction\n\t\t * @param {string} [onlyForKey] - the only key for which to initialize the field\n\t\t */\n\t\tstatic augmentClass(cls, onlyForKey) {\n\t\t\t/* allow each kind of field to perform its initializations */\n\t\t\tfor (let FieldClass of env.fieldClasses::values()) {\n\t\t\t\tif (!FieldClass[$$entriesIn]) { continue }\n\t\t\t\tfor (let { key, desc, aliases } of FieldClass[$$entriesIn](cls)) {\n\t\t\t\t\tif (!onlyForKey || onlyForKey === key) {\n\t\t\t\t\t\tFieldClass.initClass({ cls, key, aliases, desc });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t/**\n\t\t * Initialize the fields of a particular `Entity` instance.\n\t\t * @param {Entity} owner                    - the entity to initialize\n\t\t * @param {Object} initialValues            - the initial values for the entity's fields\n\t\t * @param {Object} [valueTrackerOptions={}] - the `ValueTracker` options to use for each field's observable properties\n\t\t */\n\t\tstatic initializeEntity(owner, initialValues, valueTrackerOptions = {}) {\n\t\t\tif (owner.fields) { return }\n\t\t\towner::defineProperty('fields', { value: {} });\n\t\t\t\n\t\t\t/* initialize all fields */\n\t\t\tconst keyDescs = {};\n\t\t\tfor (let FieldClass of env.fieldClasses::values()) {\n\t\t\t\tif (!FieldClass[$$entriesIn]) { continue }\n\t\t\t\tfor (let entry of FieldClass[$$entriesIn](owner.constructor)) {\n\t\t\t\t\tconst { key, aliases = [] } = entry;\n\t\t\t\t\tconst candidateKeys  = [key, ...aliases].filter(v => !initialValues[v]::isUndefined());\n\t\t\t\t\tconstraint(candidateKeys.length <= 1, humanMsg`\n\t\t\t\t\t\tYou cannot set the fields '${candidateKeys.join(\"', '\")}'\n\t\t\t\t\t\tat the same time for a ${owner.constructor.singular}.\n\t\t\t\t\t`);\n\t\t\t\t\tkeyDescs[key] = {\n\t\t\t\t\t\t...entry,\n\t\t\t\t\t\towner,\n\t\t\t\t\t\tkey,\n\t\t\t\t\t\tinitialValue: initialValues[candidateKeys[0]],\n\t\t\t\t\t\tFieldClass\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* add related initial values to each description */\n\t\t\tfor (let entry of keyDescs::values()) {\n\t\t\t\tentry.aliasInitialValues = keyDescs::pick(entry.relatedKeys)::mapValues(d => d.initialValue);\n\t\t\t}\n\t\t\t\n\t\t\t/* create a field for each description */\n\t\t\tfor (let entry of keyDescs::values()) {\n\t\t\t\tlet { FieldClass } = entry;\n\t\t\t\tdelete entry.FieldClass;\n\t\t\t\tnew FieldClass({ ...entry, valueTrackerOptions });\n\t\t\t}\n\t\t\t\n\t\t\t/* notify completion of field initialization */\n\t\t\towner.pSubject('fieldsInitialized').next(true);\n\t\t}\n\t\t\n\t\t/**\n\t\t * The function used for testing the values of this field for equality.\n\t\t * Can be overwritten by specific field classes (e.g., `Rel$Field`).\n\t\t * @returns {boolean} - whether `a` and `b` are considered equal values\n\t\t */\n\t\tstatic isEqual(a, b) { return a === b }\n\t\t\n\t\t\n\t\t/////////////////////////\n\t\t// events & properties //\n\t\t/////////////////////////\n\t\t\n\t\t/**\n\t\t * The current value of this field. It can be read and written to\n\t\t * directly, or observed with `field.p('value')`.\n\t\t */\n\t\t@property() value;\n\t\t\n\t\t\n\t\t//////////////\n\t\t// instance //\n\t\t//////////////\n\t\t\n\t\t/**\n\t\t * Making this field recognizable when converted to a string.\n\t\t * @returns {string} a string like `Field: Lyph#name = \"Heart\"`\n\t\t */\n\t\tget [Symbol.toStringTag]() {\n\t\t\treturn `Field: ${this[$$owner].constructor.name}#${this[$$key]} = ${this.valueToJSON()}`;\n\t\t}\n\t\t\n\t\t/**\n\t\t * Create a new instance of this field on a specific entity.\n\t\t * @protected\n\t\t * @param {Object}    options\n\t\t * @param {Entity}    options.owner                       - the entity on which to create this field\n\t\t * @param {string}    options.key                         - the key on that entity corresponding to this field\n\t\t * @param {Object}    options.desc                        - the descriptor for what kind of field this is\n\t\t * @param {Iterable} [options.aliases=[]]                 - other keys to which this field should answer\n\t\t * @param {boolean}  [options.setValueThroughSignal=true] - whether signals sent to `field.p('value')` should be accepted\n\t\t * @param {Object}   [options.valueTrackerOptions={}]     - the `ValueTracker` options to use for each field's observable properties\n\t\t */\n\t\tconstructor(options) {\n\t\t\tsuper();\n\t\t\tthis.setValueTrackerOptions(options.valueTrackerOptions);\n\t\t\tconst {\n\t\t\t\towner,\n\t\t\t\tkey,\n\t\t\t\tdesc,\n\t\t\t\taliases = [],\n\t\t\t\tsetValueThroughSignal = true\n\t\t\t} = options;\n\t\t\towner.fields[key] = this;\n\t\t\tfor (let alias of aliases) {\n\t\t\t\towner.fields[alias] = this;\n\t\t\t}\n\t\t\t/** @private */ this[$$owner]   = owner;\n\t\t\t/** @private */ this[$$key]     = key;\n\t\t\t/** @private */ this[$$desc]    = desc;\n\t\t\t/** @private */ this[$$aliases] = aliases;\n\t\t\tif (setValueThroughSignal) {\n\t\t\t\tthis.p('value').subscribe(::this.set);\n\t\t\t}\n\t\t}\n\t\t\n\t\t/**\n\t\t * Convert this field's value to JSON (plain data).\n\t\t * @param {Object} [options={}]\n\t\t * @returns {*}\n\t\t */\n\t\tvalueToJSON(options = {}) { return this.constructor.valueToJSON(this.value, options) }\n\t\t\n\t\t/**\n\t\t * How to properly convert a value in this field to JSON (plain data).\n\t\t * @param {*}        value                             - the value to convert to JSON\n\t\t * @param {Object}  [options={}]\n\t\t * @param {boolean} [options.flattenFieldValues=false] - whether `Object` or `Array` field values should be avoided in the output (for example, Neo4j does not accept nested objects)\n\t\t * @abstract\n\t\t */\n\t\tstatic valueToJSON(value, options) {\n\t\t\tassert(false, humanMsg`Field.valueToJSON must be implemented in subclasses.`);\n\t\t}\n\t\t\n\t\t/**\n\t\t * How to properly convert a JSON value to a value appropriate for this type of field.\n\t\t * @param {*}         json              - the JSON value to convert\n\t\t * @param {Object}    options\n\t\t * @param {boolean}  [options.flattenFieldValues=false] - whether field values are strings that should be run through `JSON.parse`\n\t\t * @param {Function}  options.getEntity                 - a function that returns an entity corresponding to a given address\n\t\t */\n\t\tstatic jsonToValue(json, options) {\n\t\t\tassert(false, humanMsg`Field.jsonToValue must be implemented in subclasses.`);\n\t\t}\n\t\t\n\t\t/**\n\t\t * @returns {*} this field's value\n\t\t */\n\t\tget() { return this[$$value] }\n\t\t\n\t\t/**\n\t\t * Set this field to a new value.\n\t\t * @param {*}        newValue - the new value for this field\n\t\t * @param {Object}  [options={}]\n\t\t * @param {boolean} [options.ignoreReadonly=false]   - allow this field's value to be changed even if it is read-only\n\t\t * @param {boolean} [options.ignoreValidation=false] - don't validate the new value\n\t\t */\n\t\tset(newValue, options = {}) {\n\t\t\tif (!this.constructor.isEqual(this[$$value], newValue)) {\n\t\t\t\tconst {\n\t\t\t        ignoreReadonly   = false,\n\t\t\t        ignoreValidation = false\n\t\t        } = options;\n\t\t\t\tconstraint(ignoreReadonly || !this[$$desc].readonly, humanMsg`\n\t\t\t\t\tTried to set the readonly field\n\t\t\t\t\t'${this[$$owner].constructor.name}#${this[$$key]}'.\n\t\t\t\t`);\n\t\t\t\tif (!ignoreValidation) { this.validate(newValue, ['set']) }\n\t\t\t\t/** @private */ this[$$value] = newValue;\n\t\t\t\tthis.pSubject('value').next(newValue);\n\t\t\t}\n\t\t}\n\t\t\n\t\t/**\n\t\t * Validate a certain value as appropriate for this field.\n\t\t * Throws an exception if the value is invalid. Otherwise does nothing.\n\t\t * Should be overwritten by specific `Field` subclasses.\n\t\t * @param {*}     val    - the value to test\n\t\t * @param {Array} stages - the validation stages to validate for (e.g., 'commit')\n\t\t */\n\t\tvalidate(val, stages = []) {\n\t\t} // to be implemented in subclasses\n\t\t\n\t\t/** @private */\n\t\t[$$initSet](...alternatives) {\n\t\t\tfor (let [guard, value] of alternatives) {\n\t\t\t\tif (guard::callOrReturn(this)) {\n\t\t\t\t\tif (value::isUndefined()) { return }\n\t\t\t\t\tvalue = value::callOrReturn();\n\t\t\t\t\tthis.validate(value, ['initialize', 'set']);\n\t\t\t\t\tthis.set(value, {\n\t\t\t\t\t\tignoreReadonly:   true,\n\t\t\t\t\t\tignoreValidation: true\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\t\n\treturn env.registerFieldClass('Field', Field);\n}\n",
    "static": true,
    "longname": "src/fields/Field.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 24,
    "kind": "variable",
    "name": "_extends",
    "memberof": "src/fields/Field.js",
    "static": true,
    "longname": "src/fields/Field.js~_extends",
    "access": null,
    "export": false,
    "importPath": "open-physiology-manifest/src/fields/Field.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 25,
    "kind": "variable",
    "name": "$$fieldsInitialized",
    "memberof": "src/fields/Field.js",
    "static": true,
    "longname": "src/fields/Field.js~$$fieldsInitialized",
    "access": null,
    "export": false,
    "importPath": "open-physiology-manifest/src/fields/Field.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 26,
    "kind": "variable",
    "name": "$$aliases",
    "memberof": "src/fields/Field.js",
    "static": true,
    "longname": "src/fields/Field.js~$$aliases",
    "access": null,
    "export": false,
    "importPath": "open-physiology-manifest/src/fields/Field.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 27,
    "kind": "class",
    "name": "Field",
    "memberof": "src/fields/Field.js",
    "static": true,
    "longname": "src/fields/Field.js~Field",
    "access": "public",
    "export": true,
    "importPath": "open-physiology-manifest/src/fields/Field.js",
    "importStyle": "Field",
    "description": "A class that represents specific fields on an `Entity`.",
    "lineNumber": 23,
    "interface": false,
    "extends": [
      "utilities~ValueTracker"
    ]
  },
  {
    "__docId__": 28,
    "kind": "method",
    "name": "augmentClass",
    "memberof": "src/fields/Field.js~Field",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/fields/Field.js~Field.augmentClass",
    "access": null,
    "description": "Equip an `Entity` subclass `cls` with its particular fields,\noptionally only for a particular key.",
    "lineNumber": 35,
    "params": [
      {
        "nullable": null,
        "types": [
          "Class"
        ],
        "spread": false,
        "optional": false,
        "name": "cls",
        "description": "a subclass of `Entity` still under construction"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "onlyForKey",
        "description": "the only key for which to initialize the field"
      }
    ]
  },
  {
    "__docId__": 29,
    "kind": "method",
    "name": "initializeEntity",
    "memberof": "src/fields/Field.js~Field",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/fields/Field.js~Field.initializeEntity",
    "access": null,
    "description": "Initialize the fields of a particular `Entity` instance.",
    "lineNumber": 59,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "owner",
        "description": "the entity to initialize"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialValues",
        "description": "the initial values for the entity's fields"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "valueTrackerOptions",
        "description": "the `ValueTracker` options to use for each field's observable properties"
      }
    ]
  },
  {
    "__docId__": 30,
    "kind": "method",
    "name": "isEqual",
    "memberof": "src/fields/Field.js~Field",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/fields/Field.js~Field.isEqual",
    "access": null,
    "description": "The function used for testing the values of this field for equality.\nCan be overwritten by specific field classes (e.g., `Rel$Field`).",
    "lineNumber": 116,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} - whether `a` and `b` are considered equal values"
      }
    ],
    "params": [
      {
        "name": "a",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "whether `a` and `b` are considered equal values"
    }
  },
  {
    "__docId__": 31,
    "kind": "get",
    "name": "[Symbol.toStringTag]",
    "memberof": "src/fields/Field.js~Field",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fields/Field.js~Field#[Symbol.toStringTag]",
    "access": null,
    "description": "Making this field recognizable when converted to a string.",
    "lineNumber": 138,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} a string like `Field: Lyph#name = \"Heart\"`"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "a string like `Field: Lyph#name = \"Heart\"`"
    },
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 32,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/fields/Field.js~Field",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fields/Field.js~Field#constructor",
    "access": "protected",
    "description": "Create a new instance of this field on a specific entity.",
    "lineNumber": 153,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "options.owner",
        "description": "the entity on which to create this field"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "options.key",
        "description": "the key on that entity corresponding to this field"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options.desc",
        "description": "the descriptor for what kind of field this is"
      },
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "options.aliases",
        "description": "other keys to which this field should answer"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.setValueThroughSignal",
        "description": "whether signals sent to `field.p('value')` should be accepted"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options.valueTrackerOptions",
        "description": "the `ValueTracker` options to use for each field's observable properties"
      }
    ]
  },
  {
    "__docId__": 33,
    "kind": "member",
    "name": "[$$owner]",
    "memberof": "src/fields/Field.js~Field",
    "static": false,
    "longname": "src/fields/Field.js~Field#[$$owner]",
    "access": "private",
    "description": null,
    "lineNumber": 167,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 34,
    "kind": "member",
    "name": "[$$key]",
    "memberof": "src/fields/Field.js~Field",
    "static": false,
    "longname": "src/fields/Field.js~Field#[$$key]",
    "access": "private",
    "description": null,
    "lineNumber": 168,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 35,
    "kind": "member",
    "name": "[$$desc]",
    "memberof": "src/fields/Field.js~Field",
    "static": false,
    "longname": "src/fields/Field.js~Field#[$$desc]",
    "access": "private",
    "description": null,
    "lineNumber": 169,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 36,
    "kind": "member",
    "name": "[$$aliases]",
    "memberof": "src/fields/Field.js~Field",
    "static": false,
    "longname": "src/fields/Field.js~Field#[$$aliases]",
    "access": "private",
    "description": null,
    "lineNumber": 170,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 37,
    "kind": "method",
    "name": "valueToJSON",
    "memberof": "src/fields/Field.js~Field",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fields/Field.js~Field#valueToJSON",
    "access": null,
    "description": "Convert this field's value to JSON (plain data).",
    "lineNumber": 181,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 38,
    "kind": "method",
    "name": "valueToJSON",
    "memberof": "src/fields/Field.js~Field",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/fields/Field.js~Field.valueToJSON",
    "access": null,
    "description": "How to properly convert a value in this field to JSON (plain data).",
    "lineNumber": 192,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "the value to convert to JSON"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.flattenFieldValues",
        "description": "whether `Object` or `Array` field values should be avoided in the output (for example, Neo4j does not accept nested objects)"
      }
    ],
    "abstract": true
  },
  {
    "__docId__": 39,
    "kind": "method",
    "name": "jsonToValue",
    "memberof": "src/fields/Field.js~Field",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/fields/Field.js~Field.jsonToValue",
    "access": null,
    "description": "How to properly convert a JSON value to a value appropriate for this type of field.",
    "lineNumber": 203,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "json",
        "description": "the JSON value to convert"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.flattenFieldValues",
        "description": "whether field values are strings that should be run through `JSON.parse`"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "options.getEntity",
        "description": "a function that returns an entity corresponding to a given address"
      }
    ]
  },
  {
    "__docId__": 40,
    "kind": "method",
    "name": "get",
    "memberof": "src/fields/Field.js~Field",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fields/Field.js~Field#get",
    "access": null,
    "description": "",
    "lineNumber": 210,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*} this field's value"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "this field's value"
    }
  },
  {
    "__docId__": 41,
    "kind": "method",
    "name": "set",
    "memberof": "src/fields/Field.js~Field",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fields/Field.js~Field#set",
    "access": null,
    "description": "Set this field to a new value.",
    "lineNumber": 221,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "newValue",
        "description": "the new value for this field"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.ignoreReadonly",
        "description": "allow this field's value to be changed even if it is read-only"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.ignoreValidation",
        "description": "don't validate the new value"
      }
    ]
  },
  {
    "__docId__": 42,
    "kind": "member",
    "name": "[$$value]",
    "memberof": "src/fields/Field.js~Field",
    "static": false,
    "longname": "src/fields/Field.js~Field#[$$value]",
    "access": "private",
    "description": null,
    "lineNumber": 234,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 43,
    "kind": "method",
    "name": "validate",
    "memberof": "src/fields/Field.js~Field",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fields/Field.js~Field#validate",
    "access": null,
    "description": "Validate a certain value as appropriate for this field.\nThrows an exception if the value is invalid. Otherwise does nothing.\nShould be overwritten by specific `Field` subclasses.",
    "lineNumber": 246,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": "the value to test"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "stages",
        "description": "the validation stages to validate for (e.g., 'commit')"
      }
    ]
  },
  {
    "__docId__": 44,
    "kind": "method",
    "name": "[$$initSet]",
    "memberof": "src/fields/Field.js~Field",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fields/Field.js~Field#[$$initSet]",
    "access": "private",
    "description": null,
    "lineNumber": 249,
    "params": [
      {
        "name": "alternatives",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ]
  },
  {
    "__docId__": 45,
    "kind": "file",
    "name": "src/fields/PropertyField.js",
    "content": "import {isUndefined, entries, cloneDeep} from 'lodash-bound';\nimport {defineProperty}                  from 'bound-native-methods';\nimport {humanMsg, callOrReturn}          from 'utilities';\nimport {constraint} from \"../util/misc\";\nimport Field_factory from './Field.js';\nimport {\n\t$$owner,\n\t$$key,\n\t$$desc,\n\t$$initSet,\n\t$$entriesIn\n} from './symbols';\n\nconst $$ignoreReadonly = Symbol('$$ignoreReadonly');\n\n\n/** @wrapper */\nexport default (env) => {\n\t\n\tconst Field = Field_factory(env);\n\t\n\t/**\n\t * A field on an `Entity` representing a simple data-type.\n\t */\n\tclass PropertyField extends Field {\n\t\t\n\t\t// this[$$owner]   instanceof   RelatedTo | Resource\n\t\t// this[$$key]     instanceof   \"name\" | \"class\" | \"id\" | ...\n\t\t// this[$$value]   instanceof   any\n\t\t\n\t\t////////////\n\t\t// static //\n\t\t////////////\n\t\t\n\t\t/**\n\t\t * Equip an `Entity` subclass `cls` with a particular property field.\n\t\t * @param {Object}   options\n\t\t * @param {Class}    options.cls - a subclass of `Entity` still under construction\n\t\t * @param {string}   options.key - the key for the field to put in\n\t\t * @param {Object}  [options.desc]\n\t\t * @param {boolean} [options.desc.readonly] - whether this field should be read-only\n\t\t */\n\t\tstatic initClass(options) {\n\t\t\tconst {cls, key, desc} = options;\n\t\t\tif (cls.prototype.hasOwnProperty(key)) { return }\n\t\t\tconst {readonly} = desc;\n\t\t\tcls.prototype::defineProperty(key, {\n\t\t\t\tget() { return this.fields[key].get() },\n\t\t\t\t...(readonly ? {} : {\n\t\t\t\t\tset(val) { this.fields[key].set(val)}\n\t\t\t\t}),\n\t\t\t\tenumerable:   true,\n\t\t\t\tconfigurable: false\n\t\t\t});\n\t\t}\n\t\t\n\t\t/** @private */\n\t\tstatic [$$entriesIn](cls) {\n\t\t\treturn cls.properties::entries()\n\t\t\t\t.map(([key, desc])=>({\n\t\t\t\t\tkey,\n\t\t\t\t\tdesc\n\t\t\t\t}));\n\t\t}\n\t\t\n\t\t\n\t\t//////////////\n\t\t// instance //\n\t\t//////////////\n\t\t\n\t\t/**\n\t\t * Create a new instance of this field on a specific entity.\n\t\t * @protected\n\t\t * @param {Object}    options\n\t\t * @param {Entity}    options.owner                       - the entity on which to create this field\n\t\t * @param {string}    options.key                         - the key on that entity corresponding to this field\n\t\t * @param {Object}    options.desc                        - the descriptor for what kind of field this is\n\t\t * @param {string}   [options.initialValue]               - the initial value for this field\n\t\t * @param {Iterable} [options.aliases=[]]                 - other keys to which this field should answer\n\t\t * @param {boolean}  [options.setValueThroughSignal=true] - whether signals sent to `field.p('value')` should be accepted\n\t\t * @param {Object}   [options.valueTrackerOptions={}]     - the `ValueTracker` options to use for each field's observable properties\n\t\t */\n\t\tconstructor(options) {\n\t\t\tsuper(options);\n\t\t\tconst { owner, desc, initialValue } = options;\n\t\t\t\n\t\t\t/* set the initial value */\n\t\t\tthis[$$initSet](\n\t\t\t\t[!initialValue::isUndefined(), () => initialValue::callOrReturn(owner)::cloneDeep()],\n\t\t\t\t['default' in desc,            () => desc.default::callOrReturn(owner)::cloneDeep()],\n\t\t\t\t['value'   in desc,            () => desc.value  ::callOrReturn(owner)::cloneDeep()],\n\t\t\t\t[!desc.required]\n\t\t\t);\n\t\t}\n\t\t\n\t\t/**\n\t\t * How to properly convert a value in this field to JSON (plain data).\n\t\t * @param {*}        value                             - the value to convert to JSON\n\t\t * @param {Object}  [options={}]\n\t\t * @param {boolean} [options.flattenFieldValues=false] - whether `Object` or `Array` field values should be avoided in the output (for example, Neo4j does not accept nested objects)\n\t\t * @returns {*} a plain-data value representing `value` that can go inside a JSON object\n\t\t */\n\t\tstatic valueToJSON(value, options = {}) {\n\t\t\tconst {flattenFieldValues = false} = options;\n\t\t\tif (flattenFieldValues) { value = JSON.stringify(value) }\n\t\t\treturn value;\n\t\t}\n\t\t\n\t\t/**\n\t\t * How to properly convert a JSON value to a value appropriate for this type of field.\n\t\t * @param {*}        json                              - the JSON value to convert\n\t\t * @param {Object}  [options={}]\n\t\t * @param {boolean} [options.flattenFieldValues=false] - whether field values are strings that should be run through `JSON.parse`\n\t\t */\n\t\tstatic jsonToValue(json, options = {}) {\n\t\t\tconst {flattenFieldValues = false} = options;\n\t\t\tif (flattenFieldValues) { json = JSON.parse(value) }\n\t\t\treturn json;\n\t\t}\n\t\t\n\t\t/**\n\t\t * Validate a certain value as appropriate for this field.\n\t\t * Throws an exception if the value is invalid. Otherwise does nothing.\n\t\t * @param {*}     val    - the value to test\n\t\t * @param {Array} stages - the validation stages to validate for (e.g., 'commit')\n\t\t */\n\t\tvalidate(val, stages = []) {\n\t\t\t\n\t\t\tif (stages.includes('commit')) {\n\t\t\t\tconstraint(!this[$$desc].required || !val::isUndefined(), humanMsg`\n\t\t\t\t    No value given for required field\n\t\t\t\t    '${this[$$owner].constructor.name}#${this[$$key]}'.\n\t\t\t\t`);\n\t\t\t}\n\t\t\t\n\t\t\t// TODO: CHECK CONSTRAINT: given property value conforms to JSON schema\n\t\t\t// TODO: CHECK ADDITIONAL (PROPERTY-SPECIFIC) CONSTRAINTS:\n\t\t\t//     : e.g., if this is a template, does it conform to the specs of its corresponding type?\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\treturn env.registerFieldClass('PropertyField', PropertyField);\n};\n",
    "static": true,
    "longname": "src/fields/PropertyField.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 46,
    "kind": "variable",
    "name": "_extends",
    "memberof": "src/fields/PropertyField.js",
    "static": true,
    "longname": "src/fields/PropertyField.js~_extends",
    "access": null,
    "export": false,
    "importPath": "open-physiology-manifest/src/fields/PropertyField.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 47,
    "kind": "variable",
    "name": "$$ignoreReadonly",
    "memberof": "src/fields/PropertyField.js",
    "static": true,
    "longname": "src/fields/PropertyField.js~$$ignoreReadonly",
    "access": null,
    "export": false,
    "importPath": "open-physiology-manifest/src/fields/PropertyField.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 48,
    "kind": "class",
    "name": "PropertyField",
    "memberof": "src/fields/PropertyField.js",
    "static": true,
    "longname": "src/fields/PropertyField.js~PropertyField",
    "access": null,
    "export": true,
    "importPath": "open-physiology-manifest/src/fields/PropertyField.js",
    "importStyle": "PropertyField",
    "description": "A field on an `Entity` representing a simple data-type.",
    "lineNumber": 18,
    "interface": false,
    "extends": [
      "Field"
    ]
  },
  {
    "__docId__": 49,
    "kind": "method",
    "name": "initClass",
    "memberof": "src/fields/PropertyField.js~PropertyField",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/fields/PropertyField.js~PropertyField.initClass",
    "access": null,
    "description": "Equip an `Entity` subclass `cls` with a particular property field.",
    "lineNumber": 36,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Class"
        ],
        "spread": false,
        "optional": false,
        "name": "options.cls",
        "description": "a subclass of `Entity` still under construction"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "options.key",
        "description": "the key for the field to put in"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options.desc",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.desc.readonly",
        "description": "whether this field should be read-only"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 50,
    "kind": "method",
    "name": "[$$entriesIn]",
    "memberof": "src/fields/PropertyField.js~PropertyField",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/fields/PropertyField.js~PropertyField.[$$entriesIn]",
    "access": "private",
    "description": null,
    "lineNumber": 59,
    "params": [
      {
        "name": "cls",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 51,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/fields/PropertyField.js~PropertyField",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fields/PropertyField.js~PropertyField#constructor",
    "access": "protected",
    "description": "Create a new instance of this field on a specific entity.",
    "lineNumber": 84,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "options.owner",
        "description": "the entity on which to create this field"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "options.key",
        "description": "the key on that entity corresponding to this field"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options.desc",
        "description": "the descriptor for what kind of field this is"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.initialValue",
        "description": "the initial value for this field"
      },
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "options.aliases",
        "description": "other keys to which this field should answer"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.setValueThroughSignal",
        "description": "whether signals sent to `field.p('value')` should be accepted"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options.valueTrackerOptions",
        "description": "the `ValueTracker` options to use for each field's observable properties"
      }
    ]
  },
  {
    "__docId__": 52,
    "kind": "method",
    "name": "valueToJSON",
    "memberof": "src/fields/PropertyField.js~PropertyField",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/fields/PropertyField.js~PropertyField.valueToJSON",
    "access": null,
    "description": "How to properly convert a value in this field to JSON (plain data).",
    "lineNumber": 111,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*} a plain-data value representing `value` that can go inside a JSON object"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "the value to convert to JSON"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.flattenFieldValues",
        "description": "whether `Object` or `Array` field values should be avoided in the output (for example, Neo4j does not accept nested objects)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "a plain-data value representing `value` that can go inside a JSON object"
    }
  },
  {
    "__docId__": 53,
    "kind": "method",
    "name": "jsonToValue",
    "memberof": "src/fields/PropertyField.js~PropertyField",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/fields/PropertyField.js~PropertyField.jsonToValue",
    "access": null,
    "description": "How to properly convert a JSON value to a value appropriate for this type of field.",
    "lineNumber": 125,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "json",
        "description": "the JSON value to convert"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.flattenFieldValues",
        "description": "whether field values are strings that should be run through `JSON.parse`"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 54,
    "kind": "method",
    "name": "validate",
    "memberof": "src/fields/PropertyField.js~PropertyField",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fields/PropertyField.js~PropertyField#validate",
    "access": null,
    "description": "Validate a certain value as appropriate for this field.\nThrows an exception if the value is invalid. Otherwise does nothing.",
    "lineNumber": 139,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": "the value to test"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "stages",
        "description": "the validation stages to validate for (e.g., 'commit')"
      }
    ]
  },
  {
    "__docId__": 55,
    "kind": "file",
    "name": "src/fields/Rel$Field.js",
    "content": "import {inRange, size, entries, isFunction, pick} from 'lodash-bound';\n\nimport {defineProperty} from 'bound-native-methods';\n\nimport assert from 'power-assert';\n\nimport ObservableSet from '../util/ObservableSet';\nimport {humanMsg, callOrReturn} from 'utilities';\nimport {constraint, setEquals} from '../util/misc';\n\nimport RelField_factory from './RelField.js';\n\nimport {\n\t$$owner,\n\t$$key,\n\t$$desc,\n\t$$value,\n\t$$entriesIn,\n\t$$initSet\n} from './symbols';\n\n\n/** @wrapper */\nexport default (env) => {\n\t\n\tconst RelField = RelField_factory(env);\n\t\n\t/**\n\t * A field on an `Entity` representing the 'many'-side\n\t * of a many-to-many or many-to-one relationship.\n\t * Therefore, its value is always a `Set`.\n\t */\n\tclass Rel$Field extends RelField {\n\t\t\n\t\t// this[$$owner] instanceof Resource\n\t\t// this[$$key]   instanceof \"-->ContainsMaterial\" | \"-->HasPart\" | \"<--FlowsTo\" | ...\n\t\t// this[$$value] instanceof Set<IsRelatedTo>\n\t\t\n\t\t////////////\n\t\t// static //\n\t\t////////////\n\t\t\n\t\t/**\n\t\t * Equip an `Entity` subclass `cls` with a particular property field.\n\t\t * @param {Object}   options\n\t\t * @param {Class}    options.cls     - a subclass of `Entity` still under construction\n\t\t * @param {string}   options.key     - the key for the field to put in\n\t\t * @param {string}   options.aliases - additional keys for this field\n\t\t * @param {Object}  [options.desc]\n\t\t * @param {boolean} [options.desc.readonly] - whether this field should be read-only\n\t\t */\n\t\tstatic initClass(options) {\n\t\t\tconst { cls, key, aliases, desc: {readonly} } = options;\n\t\t\tassert(cls.isResource);\n\t\t\tif (cls.prototype.hasOwnProperty(key)) { return }\n\t\t\tfor (let k of [key, ...aliases]) {\n\t\t\t\tcls.prototype::defineProperty(k, {\n\t\t\t\t\tget() { return this.fields[k].get() },\n\t\t\t\t\t...(readonly ? {} : {\n\t\t\t\t\t\tset(val) { this.fields[k].set(val)}\n\t\t\t\t\t}),\n\t\t\t\t\tenumerable:   true,\n\t\t\t\t\tconfigurable: false\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\t\n\t\t/** @private */\n\t\tstatic [$$entriesIn](cls) {\n\t\t\tif (!cls.isResource) { return [] }\n\t\t\treturn cls.relationships::entries()\n\t\t\t\t.filter(([,rel]) => rel.cardinality.max > 1)\n\t\t\t\t.map(([key, desc]) => ({\n\t\t\t\t\tkey,\n\t\t\t\t\tdesc,\n\t\t\t\t\taliases: desc.shortcutKey ? [desc.shortcutKey] : []\n\t\t\t\t}));\n\t\t}\n\t\t\n\t\t/**\n\t\t * The function used for testing the values of this field for set-equality.\n\t\t * @param a\n\t\t * @param b\n\t\t * @returns {boolean}\n\t\t */\n\t\tstatic isEqual = setEquals;\n\t\t\n\t\t\n\t\t//////////////\n\t\t// instance //\n\t\t//////////////\n\t\t\n\t\t/**\n\t\t * Create a new instance of this field on a specific entity.\n\t\t * @protected\n\t\t * @param {Object}    options\n\t\t * @param {Entity}    options.owner                       - the entity on which to create this field\n\t\t * @param {string}    options.key                         - the key on that entity corresponding to this field\n\t\t * @param {Object}    options.desc                        - the descriptor for what kind of field this is\n\t\t * @param {string}   [options.initialValue]               - the initial value for this field\n\t\t * @param {Iterable} [options.aliases=[]]                 - other keys to which this field should answer\n\t\t * @param {Object}   [options.aliasInitialValues=[]]      - other keys to which this field should answer\n\t\t * @param {boolean}  [options.setValueThroughSignal=true] - whether signals sent to `field.p('value')` should be accepted\n\t\t * @param {Object}   [options.valueTrackerOptions={}]     - the `ValueTracker` options to use for each field's observable properties\n\t\t */\n\t\tconstructor(options) {\n\t\t\tsuper({ ...options, setValueThroughSignal: false });\n\t\t\tconst {owner, desc, initialValue, aliasInitialValues} = options;\n\t\t\t\n\t\t\t/* initialize an empty observable set */\n\t\t\tthis::defineProperty($$value, { value: new ObservableSet });\n\t\t\t\n\t\t\t/* set the initial value */\n\t\t\tconst initialScValue = aliasInitialValues[desc.shortcutKey];\n\t\t\tconstraint(!initialValue || !initialScValue, humanMsg`\n\t\t\t\tYou cannot set the fields '${desc.keyInResource}' and '${desc.shortcutKey}'\n\t\t\t\tat the same time for a ${this.constructor.singular}.\n\t\t\t`);\n\t\t\tthis[$$initSet](\n\t\t\t\t[initialValue   && initialValue  [Symbol.iterator], () => initialValue  ::callOrReturn(owner)],\n\t\t\t\t[initialScValue && initialScValue[Symbol.iterator], () => initialScValue::callOrReturn(owner)],\n\t\t\t\t[desc.cardinality.min === 0]\n\t\t\t);\n\t\t\t\n\t\t\towner.p('fieldsInitialized').filter(v=>!!v).take(1).subscribe(() => {\n\t\t\t\t\n\t\t\t\t/* synchronize with the other side */\n\t\t\t\tthis.get().e('add').switchMap(\n\t\t\t\t\tother => other.p('fieldsInitialized').filter(v=>!!v).take(1),\n\t\t\t\t\tother => other\n\t\t\t\t).subscribe((other) => {\n\t\t\t\t\tif (!other.fields[desc.codomain.keyInResource]) {\n\t\t\t\t\t\tdebugger;\n\t\t\t\t\t}\n\t\t\t\t\tother.fields[desc.codomain.keyInResource].add(owner);\n\t\t\t\t});\n\t\t\t\tthis.get().e('delete').subscribe((other) => {\n\t\t\t\t\tother.fields[desc.codomain.keyInResource].delete(owner);\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t/* mirror stuff that happens in sub-fields */\n\t\t\t\tfor (let subCls of desc.relationshipClass.extendedBy) {\n\t\t\t\t\tconst subFieldKey = subCls.keyInResource[desc.keyInRelationship];\n\t\t\t\t\tconst subField    = owner.fields[subFieldKey];\n\t\t\t\t\tif (!subField) { continue }\n\t\t\t\t\tif (subField instanceof Rel$Field) {\n\t\t\t\t\t\tsubField.get().e('add')   .subscribe( this.get().e('add')    );\n\t\t\t\t\t\tsubField.get().e('delete').subscribe( this.get().e('delete') );\n\t\t\t\t\t} else { // Rel1Field\n\t\t\t\t\t\tsubField.p('value')\n\t\t\t\t\t\t\t.startWith(null)\n\t\t\t\t\t\t\t.pairwise()\n\t\t\t\t\t\t\t.subscribe(([prev, curr]) => {\n\t\t\t\t\t\t\t\tif (prev) { this.get().delete(prev) }\n\t\t\t\t\t\t\t\tif (curr) { this.get().add   (curr) }\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t});\n\t\t\n\t\t\t/* emit 'value' signals (but note that setValueThroughSignal = false) */\n\t\t\tthis[$$value].p('value')\n\t\t\t\t.sample(owner.p('fieldsInitialized').filter(v=>!!v))\n\t\t\t\t.subscribe( this.p('value') );\n\t\t\t\n\t\t}\n\t\t\n\t\t/**\n\t\t * @return {Set} A new `Set` data-structure populated with\n\t\t *               the entities in this field.\n\t\t */\n\t\tgetAll() {\n\t\t\treturn new Set(this.get());\n\t\t}\n\t\t\n\t\t/**\n\t\t * Set this field to a new collection of related entities.\n\t\t * @param {Iterable} newValue - the new collection of entities to be put in this field\n\t\t * @param {Object}  [options={}]\n\t\t * @param {boolean} [options.ignoreReadonly=false]   - allow this field's value to be changed even if it is read-only\n\t\t * @param {boolean} [options.ignoreValidation=false] - don't validate the new value\n\t\t */\n\t\tset(newValue, options = {}) {\n\t\t\tconst {ignoreReadonly = false, ignoreValidation = false} = options;\n\t\t\tconstraint(ignoreReadonly || !this[$$desc].readonly);\n\t\t\tnewValue = new Set(newValue);\n\t\t\tif (!ignoreValidation) { this.validate(newValue, ['set']) }\n\t\t\tthis[$$value].overwrite(newValue);\n\t\t}\n\t\t\n\t\t/**\n\t\t * Add an additional entity to this field.\n\t\t * @param {Entity}   newSubValue - the new entity to be added into this field\n\t\t * @param {Object}  [options={}]\n\t\t * @param {boolean} [options.ignoreReadonly=false]   - allow this field's value to be changed even if it is read-only\n\t\t * @param {boolean} [options.ignoreValidation=false] - don't validate the new cardinality or value\n\t\t */\n\t\tadd(newSubValue, options = {}) {\n\t\t\tconst {ignoreReadonly = false, ignoreValidation = false} = options;\n\t\t\tconstraint(ignoreReadonly || !this[$$desc].readonly);\n\t\t\tif (!ignoreValidation) {\n\t\t\t\tthis.validateCardinality(this[$$value]::size() + 1, ['set']);\n\t\t\t\tthis.validateElement(newSubValue, ['set']);\n\t\t\t}\n\t\t\tthis.get().add(newSubValue);\n\t\t}\n\t\t\n\t\t/**\n\t\t * Remove a specific entity from this field.\n\t\t * @param {Entity}   subValue - the entity to be removed from this field\n\t\t * @param {Object}  [options={}]\n\t\t * @param {boolean} [options.ignoreReadonly=false]   - allow this field's value to be changed even if it is read-only\n\t\t * @param {boolean} [options.ignoreValidation=false] - don't validate the new cardinality\n\t\t */\n\t\tdelete(subValue, options = {}) {\n\t\t\tconst {ignoreReadonly = false, ignoreValidation = false} = options;\n\t\t\tconstraint(ignoreReadonly || !this[$$desc].readonly);\n\t\t\tif (!ignoreValidation) {\n\t\t\t\tif (this[$$value].has(subValue)) {\n\t\t\t\t\tthis.validateCardinality(this[$$value]::size() - 1, ['set']);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.get().delete(subValue);\n\t\t}\n\t\t\n\t\t/**\n\t\t * How to properly convert a value in this field to JSON (plain data).\n\t\t * @param {*}       value               - the value to convert to JSON\n\t\t * @param {Object} [options={}]\n\t\t * @param {Class}  [options.getAddress] - a function that returns an address corresponding to a given entity\n\t\t */\n\t\tstatic valueToJSON(value, options = {}) {\n\t\t\tconst { getAddress = e=>e::pick('class', 'id') } = options;\n\t\t\treturn [...value].map(getAddress).filter(v=>!!v);\n\t\t}\n\t\t\n\t\t/**\n\t\t * How to properly convert a JSON value to a value appropriate for this type of field.\n\t\t * @param {*}         json               - the JSON value to convert\n\t\t * @param {Object}   [options={}]\n\t\t * @param {Function} [options.getEntity] - a function that returns an entity corresponding to a given address\n\t\t */\n\t\tstatic jsonToValue(json, options = {}) {\n\t\t\tlet result = new Set;\n\t\t\tconst {getEntity} = options;\n\t\t\tfor (let thing of json) {\n\t\t\t\tlet entity;\n\t\t\t\tif (thing instanceof env.classes.Entity) {\n\t\t\t\t\tentity = thing;\n\t\t\t\t} else if (getEntity::isFunction()) {\n\t\t\t\t\tentity = getEntity(thing, options);\n\t\t\t\t}\n\t\t\t\tresult.add(entity);\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\t\n\t\t/**\n\t\t * Validate a certain value as appropriate for this field.\n\t\t * Throws an exception if the value is invalid. Otherwise does nothing.\n\t\t * @param {*}     val    - the value to test\n\t\t * @param {Array} stages - the validation stages to validate for (e.g., 'commit')\n\t\t */\n\t\tvalidate(val, stages = []) {\n\t\t\tconstraint(val[Symbol.iterator], humanMsg`\n\t\t\t\tThe value ${val} given for ${this[$$owner].constructor.name}#${this[$$key]}\n\t\t\t\tis not an iterable collection (like array or set).\n\t\t\t`);\n\t\t\tthis.validateCardinality(val::size(), stages);\n\t\t\tval.forEach(::this.validateElement, stages);\n\t\t}\n\t\t\n\t\t/**\n\t\t * Validate a certain cardinality as appropriate for this field.\n\t\t * Throws an exception if the cardinality is invalid. Otherwise does nothing.\n\t\t * @param {number} cardinality - the cardinality to test\n\t\t * @param {Array}  stages      - the validation stages to validate for (e.g., 'commit')\n\t\t */\n\t\tvalidateCardinality(cardinality, stages = []) {\n\t\t\tif (stages.includes('commit')) {\n\t\t\t\tconst {min, max} = this[$$desc].cardinality;\n\t\t\t\tconstraint(cardinality::inRange(min, max + 1), humanMsg`\n\t\t\t\t\tThe number of values in field ${this[$$owner].constructor.name}#${this[$$key]}\n\t\t\t\t\tis not within the expected range [${min}, ${max}].\n\t\t\t\t`);\n\t\t\t}\n\t\t}\n\t\t\n\t\t/**\n\t\t * Validate a specific entity as appropriate to be included in this field.\n\t\t * Throws an exception if the entity is invalid. Otherwise does nothing.\n\t\t * @param {Entity} entity     - the entity to test\n\t\t * @param {Array} [stages=[]] - the validation stages to validate for (e.g., 'commit')\n\t\t */\n\t\tvalidateElement(entity, stages = []) {\n\t\t\t/* the value must be of the proper domain */\n\t\t\tif (!this[$$desc].codomain.resourceClass.hasInstance(entity)) {\n\t\t\t\tthrow new Error(humanMsg`\n\t\t\t\t\tInvalid value ${entity} given as element for\n\t\t\t\t\t${this[$$owner].constructor.name}#${this[$$key]}.\n\t\t\t\t`);\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\t\n\treturn env.registerFieldClass('Rel$Field', Rel$Field);\n\t\n}\n",
    "static": true,
    "longname": "src/fields/Rel$Field.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 56,
    "kind": "variable",
    "name": "_extends",
    "memberof": "src/fields/Rel$Field.js",
    "static": true,
    "longname": "src/fields/Rel$Field.js~_extends",
    "access": null,
    "export": false,
    "importPath": "open-physiology-manifest/src/fields/Rel$Field.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 57,
    "kind": "class",
    "name": "Rel$Field",
    "memberof": "src/fields/Rel$Field.js",
    "static": true,
    "longname": "src/fields/Rel$Field.js~Rel$Field",
    "access": null,
    "export": true,
    "importPath": "open-physiology-manifest/src/fields/Rel$Field.js",
    "importStyle": "Rel$Field",
    "description": "A field on an `Entity` representing the 'many'-side\nof a many-to-many or many-to-one relationship.\nTherefore, its value is always a `Set`.",
    "lineNumber": 25,
    "interface": false,
    "extends": [
      "RelField"
    ]
  },
  {
    "__docId__": 58,
    "kind": "method",
    "name": "initClass",
    "memberof": "src/fields/Rel$Field.js~Rel$Field",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/fields/Rel$Field.js~Rel$Field.initClass",
    "access": null,
    "description": "Equip an `Entity` subclass `cls` with a particular property field.",
    "lineNumber": 44,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Class"
        ],
        "spread": false,
        "optional": false,
        "name": "options.cls",
        "description": "a subclass of `Entity` still under construction"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "options.key",
        "description": "the key for the field to put in"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "options.aliases",
        "description": "additional keys for this field"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options.desc",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.desc.readonly",
        "description": "whether this field should be read-only"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 59,
    "kind": "method",
    "name": "[$$entriesIn]",
    "memberof": "src/fields/Rel$Field.js~Rel$Field",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/fields/Rel$Field.js~Rel$Field.[$$entriesIn]",
    "access": "private",
    "description": null,
    "lineNumber": 69,
    "params": [
      {
        "name": "cls",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 60,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/fields/Rel$Field.js~Rel$Field",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fields/Rel$Field.js~Rel$Field#constructor",
    "access": "protected",
    "description": "Create a new instance of this field on a specific entity.",
    "lineNumber": 107,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "options.owner",
        "description": "the entity on which to create this field"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "options.key",
        "description": "the key on that entity corresponding to this field"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options.desc",
        "description": "the descriptor for what kind of field this is"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.initialValue",
        "description": "the initial value for this field"
      },
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "options.aliases",
        "description": "other keys to which this field should answer"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "options.aliasInitialValues",
        "description": "other keys to which this field should answer"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.setValueThroughSignal",
        "description": "whether signals sent to `field.p('value')` should be accepted"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options.valueTrackerOptions",
        "description": "the `ValueTracker` options to use for each field's observable properties"
      }
    ]
  },
  {
    "__docId__": 61,
    "kind": "method",
    "name": "getAll",
    "memberof": "src/fields/Rel$Field.js~Rel$Field",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fields/Rel$Field.js~Rel$Field#getAll",
    "access": null,
    "description": "",
    "lineNumber": 167,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Set"
      ],
      "spread": false,
      "description": "A new `Set` data-structure populated with\n              the entities in this field."
    }
  },
  {
    "__docId__": 62,
    "kind": "method",
    "name": "set",
    "memberof": "src/fields/Rel$Field.js~Rel$Field",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fields/Rel$Field.js~Rel$Field#set",
    "access": null,
    "description": "Set this field to a new collection of related entities.",
    "lineNumber": 178,
    "params": [
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "newValue",
        "description": "the new collection of entities to be put in this field"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.ignoreReadonly",
        "description": "allow this field's value to be changed even if it is read-only"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.ignoreValidation",
        "description": "don't validate the new value"
      }
    ]
  },
  {
    "__docId__": 63,
    "kind": "method",
    "name": "add",
    "memberof": "src/fields/Rel$Field.js~Rel$Field",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fields/Rel$Field.js~Rel$Field#add",
    "access": null,
    "description": "Add an additional entity to this field.",
    "lineNumber": 195,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "newSubValue",
        "description": "the new entity to be added into this field"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.ignoreReadonly",
        "description": "allow this field's value to be changed even if it is read-only"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.ignoreValidation",
        "description": "don't validate the new cardinality or value"
      }
    ]
  },
  {
    "__docId__": 64,
    "kind": "method",
    "name": "delete",
    "memberof": "src/fields/Rel$Field.js~Rel$Field",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fields/Rel$Field.js~Rel$Field#delete",
    "access": null,
    "description": "Remove a specific entity from this field.",
    "lineNumber": 214,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "subValue",
        "description": "the entity to be removed from this field"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.ignoreReadonly",
        "description": "allow this field's value to be changed even if it is read-only"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.ignoreValidation",
        "description": "don't validate the new cardinality"
      }
    ]
  },
  {
    "__docId__": 65,
    "kind": "method",
    "name": "valueToJSON",
    "memberof": "src/fields/Rel$Field.js~Rel$Field",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/fields/Rel$Field.js~Rel$Field.valueToJSON",
    "access": null,
    "description": "How to properly convert a value in this field to JSON (plain data).",
    "lineNumber": 233,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "the value to convert to JSON"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Class"
        ],
        "spread": false,
        "optional": true,
        "name": "options.getAddress",
        "description": "a function that returns an address corresponding to a given entity"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 66,
    "kind": "method",
    "name": "jsonToValue",
    "memberof": "src/fields/Rel$Field.js~Rel$Field",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/fields/Rel$Field.js~Rel$Field.jsonToValue",
    "access": null,
    "description": "How to properly convert a JSON value to a value appropriate for this type of field.",
    "lineNumber": 244,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "json",
        "description": "the JSON value to convert"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "options.getEntity",
        "description": "a function that returns an entity corresponding to a given address"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 67,
    "kind": "method",
    "name": "validate",
    "memberof": "src/fields/Rel$Field.js~Rel$Field",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fields/Rel$Field.js~Rel$Field#validate",
    "access": null,
    "description": "Validate a certain value as appropriate for this field.\nThrows an exception if the value is invalid. Otherwise does nothing.",
    "lineNumber": 265,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": "the value to test"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "stages",
        "description": "the validation stages to validate for (e.g., 'commit')"
      }
    ]
  },
  {
    "__docId__": 68,
    "kind": "method",
    "name": "validateCardinality",
    "memberof": "src/fields/Rel$Field.js~Rel$Field",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fields/Rel$Field.js~Rel$Field#validateCardinality",
    "access": null,
    "description": "Validate a certain cardinality as appropriate for this field.\nThrows an exception if the cardinality is invalid. Otherwise does nothing.",
    "lineNumber": 280,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "cardinality",
        "description": "the cardinality to test"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "stages",
        "description": "the validation stages to validate for (e.g., 'commit')"
      }
    ]
  },
  {
    "__docId__": 69,
    "kind": "method",
    "name": "validateElement",
    "memberof": "src/fields/Rel$Field.js~Rel$Field",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fields/Rel$Field.js~Rel$Field#validateElement",
    "access": null,
    "description": "Validate a specific entity as appropriate to be included in this field.\nThrows an exception if the entity is invalid. Otherwise does nothing.",
    "lineNumber": 296,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": "the entity to test"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "stages",
        "description": "the validation stages to validate for (e.g., 'commit')"
      }
    ]
  },
  {
    "__docId__": 70,
    "kind": "file",
    "name": "src/fields/Rel1Field.js",
    "content": "import {isUndefined, isNull, entries, isFunction} from 'lodash-bound';\n\nimport {defineProperty} from 'bound-native-methods';\n\nimport assert from 'power-assert';\n\nimport {humanMsg, callOrReturn} from 'utilities';\n\nimport {constraint} from \"../util/misc\";\n\nimport RelField_factory from './RelField.js';\n\nimport {\n\t$$owner,\n\t$$key,\n\t$$desc,\n\t$$initSet,\n\t$$entriesIn\n} from './symbols';\n\n\n/** @wrapper */\nexport default (env) => {\n\t\n\tconst RelField = RelField_factory(env);\n\t\n\t/**\n\t * A field on an `Entity` representing the 'one'-side\n\t * of a one-to-one or one-to-many relationship.\n\t * Therefore, its value is always an `Entity` or `null`.\n\t */\n\tclass Rel1Field extends RelField {\n\t\t\n\t\t// this[$$owner] instanceof Resource\n\t\t// this[$$key]   instanceof \"-->HasInnerBorder\" | \"<--HasPlusBorder\" | ...\n\t\t// this[$$value] instanceof IsRelatedTo\n\t\t\n\t\t////////////\n\t\t// static //\n\t\t////////////\n\t\t\n\t\t/**\n\t\t * Equip an `Entity` subclass `cls` with a particular property field.\n\t\t * @param {Object}   options\n\t\t * @param {Class}    options.cls     - a subclass of `Entity` still under construction\n\t\t * @param {string}   options.key     - the key for the field to put in\n\t\t * @param {string}   options.aliases - additional keys for this field\n\t\t * @param {Object}  [options.desc]\n\t\t * @param {boolean} [options.desc.readonly] - whether this field should be read-only\n\t\t */\n\t\tstatic initClass(options) {\n\t\t\tconst {cls, key, aliases, desc: {readonly}} = options;\n\t\t\tassert(cls.isResource);\n\t\t\tif (cls.prototype.hasOwnProperty(key)) { return }\n\t\t\tfor (let k of [key, ...aliases]) {\n\t\t\t\tcls.prototype::defineProperty(k, {\n\t\t\t\t\tget() { return this.fields[k].get() },\n\t\t\t\t\t...(readonly ? {} : {\n\t\t\t\t\t\tset(val) { this.fields[k].set(val) }\n\t\t\t\t\t}),\n\t\t\t\t\tenumerable:   true,\n\t\t\t\t\tconfigurable: false\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\t\n\t\t/** @private */\n\t\tstatic [$$entriesIn](cls) {\n\t\t\tif (!cls.isResource) { return [] }\n\t\t\treturn cls.relationships::entries()\n\t             .filter(([,desc]) => desc.cardinality.max === 1)\n\t             .map(([key, desc]) => ({\n\t                 key,\n\t                 desc,\n\t\t             aliases: desc.shortcutKey ? [desc.shortcutKey] : []\n\t             }));\n\t\t}\n\t\t\n\t\t\n\t\t//////////////\n\t\t// instance //\n\t\t//////////////\n\t\t\n\t\t/**\n\t\t * Create a new instance of this field on a specific entity.\n\t\t * @protected\n\t\t * @param {Object}    options\n\t\t * @param {Entity}    options.owner                       - the entity on which to create this field\n\t\t * @param {string}    options.key                         - the key on that entity corresponding to this field\n\t\t * @param {Object}    options.desc                        - the descriptor for what kind of field this is\n\t\t * @param {string}   [options.initialValue]               - the initial value for this field\n\t\t * @param {Iterable} [options.aliases=[]]                 - other keys to which this field should answer\n\t\t * @param {Object}   [options.aliasInitialValues=[]]      - other keys to which this field should answer\n\t\t * @param {boolean}  [options.setValueThroughSignal=true] - whether signals sent to `field.p('value')` should be accepted\n\t\t * @param {Object}   [options.valueTrackerOptions={}]     - the `ValueTracker` options to use for each field's observable properties\n\t\t */\n\t\tconstructor(options) {\n\t\t\tsuper(options);\n\t\t\tconst { owner, key, desc, initialValue, aliasInitialValues } = options;\n\t\t\t\n\t\t\t/* set the initial value */\n\t\t\tconst initialShortcutValue = aliasInitialValues[desc.shortcutKey];\n\t\t\tconstraint(!initialValue || !initialShortcutValue, humanMsg`\n\t\t\t\tYou cannot set the fields '${key}' and '${desc.shortcutKey}'\n\t\t\t\tat the same time for a ${this.constructor.singular}.\n\t\t\t`);\n\t\t\tthis[$$initSet](\n\t\t\t\t[!initialValue        ::isUndefined(), () => initialValue        ::callOrReturn(owner)],\n\t\t\t\t[!initialShortcutValue::isUndefined(), () => initialShortcutValue::callOrReturn(owner)],\n\t\t\t\t[desc.cardinality.min === 0,           () => null]\n\t\t\t);\n\t\t\t\n\t\t\towner.p('fieldsInitialized').filter(v=>!!v).take(1).subscribe(() => {\n\t\t\t\n\t\t\t\t/* synchronize with the other side */\n\t\t\t\tthis.p('value').startWith(null).distinctUntilChanged().pairwise().subscribe(([prev, curr]) => {\n\t\t\t\t\tif (prev) { prev.fields[desc.codomain.keyInResource].delete(owner) }\n\t\t\t\t\tif (curr) { curr.fields[desc.codomain.keyInResource].add   (owner) }\n\t\t\t\t});\n\t\t\t\n\t\t\t\t/* pull in values set in sub-fields */\n\t\t\t\tfor (let subCls of desc.relationshipClass.extendedBy) {\n\t\t\t\t\tconst subFieldKey = subCls.keyInResource[desc.keyInRelationship];\n\t\t\t\t\tconst subField = owner.fields[subFieldKey];\n\t\t\t\t\tif (!subField) { continue }\n\t\t\t\t\tsubField.p('value').subscribe( this.p('value') );\n\t\t\t\t}\n\t\t\t\t\n\t\t\t});\n\t\t}\n\t\t\n\t\t/**\n\t\t * @return {Set} A new `Set` data-structure populated with\n\t\t *               the entity in this field, or empty.\n\t\t */\n\t\tgetAll() {\n\t\t\tlet val = this.get();\n\t\t\treturn new Set(val === null ? [] : [val]);\n\t\t}\n\t\t\n\t\t/**\n\t\t * Set this field to a new entity, removing the previous one.\n\t\t * @param {Entity}   newValue - the new entity to be put in this field\n\t\t * @param {Object}  [options={}]\n\t\t * @param {boolean} [options.ignoreReadonly=false]   - allow this field's value to be changed even if it is read-only\n\t\t * @param {boolean} [options.ignoreValidation=false] - don't validate the new cardinality or value\n\t\t */\n\t\tadd(newValue, options) {\n\t\t\tthis.set(newValue, options);\n\t\t}\n\t\t\n\t\t/**\n\t\t * Set this field to `null` if the given entity corresponds to the entity currently in this field.\n\t\t * @param {Entity}   oldValue - the entity to be removed from this field\n\t\t * @param {Object}  [options={}]\n\t\t * @param {boolean} [options.ignoreReadonly=false]   - allow this field's value to be changed even if it is read-only\n\t\t * @param {boolean} [options.ignoreValidation=false] - don't validate the new cardinality\n\t\t */\n\t\tdelete(oldValue, options) {\n\t\t\tif (this.get() === oldValue) {\n\t\t\t\tthis.set(null, options);\n\t\t\t}\n\t\t}\n\t\t\n\t\t/**\n\t\t * How to properly convert a value in this field to JSON (plain data).\n\t\t * @param {*}       value               - the value to convert to JSON\n\t\t * @param {Object} [options={}]\n\t\t * @param {Class}  [options.getAddress] - a function that returns an address corresponding to a given entity\n\t\t */\n\t\tstatic valueToJSON(value, options = {}) {\n\t\t\tif (!value) { return null }\n\t\t\tconst { getAddress = e=>e::pick('class', 'id') } = options;\n\t\t\treturn getAddress(value);\n\t\t}\n\t\t\n\t\t/**\n\t\t * How to properly convert a JSON value to a value appropriate for this type of field.\n\t\t * @param {*}         json               - the JSON value to convert\n\t\t * @param {Object}   [options={}]\n\t\t * @param {Function} [options.getEntity] - a function that returns an entity corresponding to a given address\n\t\t */\n\t\tstatic jsonToValue(json, options = {}) {\n\t\t\tif (json === null) { return null }\n\t\t\tconst {getEntity} = options;\n\t\t\tif (json instanceof env.classes.Entity) {\n\t\t\t\treturn json;\n\t\t\t} else if (getEntity::isFunction()) {\n\t\t\t\treturn getEntity(json);\n\t\t\t}\n\t\t}\n\t\t\n\t\t/**\n\t\t * Validate a certain value as appropriate for this field.\n\t\t * Throws an exception if the value is invalid. Otherwise does nothing.\n\t\t * @param {*}      val        - the value to test\n\t\t * @param {Array} [stages=[]] - the validation stages to validate for (e.g., 'commit')\n\t\t */\n\t\tvalidate(val, stages = []) {\n\t\t\t\n\t\t\tconst notGiven = val::isNull() || val::isUndefined();\n\t\t\t\n\t\t\tif (stages.includes('commit')) {\n\t\t\t\t/* if there's a minimum cardinality, a value must have been given */\n\t\t\t\tconstraint(!notGiven || this[$$desc].cardinality.min === 0, humanMsg`\n\t\t\t\t\tNo value given for required field\n\t\t\t\t\t${this[$$owner].constructor.name}#${this[$$key]}.\n\t\t\t\t`);\n\t\t\t}\n\t\t\t\n\t\t\t/* the value must be of the proper domain */\n\t\t\tconst expectedResourceClass = this[$$desc].codomain.resourceClass;\n\t\t\tconst hasCompatibleType = expectedResourceClass.hasInstance(val);\n\t\t\tconstraint(notGiven || hasCompatibleType, humanMsg`\n\t\t\t\tInvalid value '${val}' given for field ${this[$$owner].constructor.name}#${this[$$key]}.\n\t\t\t`);\n\t\t\t\n\t\t}\n\t\t\n\t\t/**\n\t\t * Validate a certain value as appropriate for this field.\n\t\t * Throws an exception if the value is invalid. Otherwise does nothing.\n\t\t * @param {Entity}  element    - the value to test\n\t\t * @param {Array}  [stages=[]] - the validation stages to validate for (e.g., 'commit')\n\t\t */\n\t\tvalidateElement(element, stages = []) {\n\t\t\treturn this.validate(element, stages);\n\t\t}\n\t\t\n\t}\n\t\n\treturn env.registerFieldClass('Rel1Field', Rel1Field);\n};\n",
    "static": true,
    "longname": "src/fields/Rel1Field.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 71,
    "kind": "variable",
    "name": "_extends",
    "memberof": "src/fields/Rel1Field.js",
    "static": true,
    "longname": "src/fields/Rel1Field.js~_extends",
    "access": null,
    "export": false,
    "importPath": "open-physiology-manifest/src/fields/Rel1Field.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 72,
    "kind": "class",
    "name": "Rel1Field",
    "memberof": "src/fields/Rel1Field.js",
    "static": true,
    "longname": "src/fields/Rel1Field.js~Rel1Field",
    "access": null,
    "export": true,
    "importPath": "open-physiology-manifest/src/fields/Rel1Field.js",
    "importStyle": "Rel1Field",
    "description": "A field on an `Entity` representing the 'one'-side\nof a one-to-one or one-to-many relationship.\nTherefore, its value is always an `Entity` or `null`.",
    "lineNumber": 25,
    "interface": false,
    "extends": [
      "RelField"
    ]
  },
  {
    "__docId__": 73,
    "kind": "method",
    "name": "initClass",
    "memberof": "src/fields/Rel1Field.js~Rel1Field",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/fields/Rel1Field.js~Rel1Field.initClass",
    "access": null,
    "description": "Equip an `Entity` subclass `cls` with a particular property field.",
    "lineNumber": 44,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Class"
        ],
        "spread": false,
        "optional": false,
        "name": "options.cls",
        "description": "a subclass of `Entity` still under construction"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "options.key",
        "description": "the key for the field to put in"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "options.aliases",
        "description": "additional keys for this field"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options.desc",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.desc.readonly",
        "description": "whether this field should be read-only"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 74,
    "kind": "method",
    "name": "[$$entriesIn]",
    "memberof": "src/fields/Rel1Field.js~Rel1Field",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/fields/Rel1Field.js~Rel1Field.[$$entriesIn]",
    "access": "private",
    "description": null,
    "lineNumber": 69,
    "params": [
      {
        "name": "cls",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 75,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/fields/Rel1Field.js~Rel1Field",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fields/Rel1Field.js~Rel1Field#constructor",
    "access": "protected",
    "description": "Create a new instance of this field on a specific entity.",
    "lineNumber": 99,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "options.owner",
        "description": "the entity on which to create this field"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "options.key",
        "description": "the key on that entity corresponding to this field"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options.desc",
        "description": "the descriptor for what kind of field this is"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.initialValue",
        "description": "the initial value for this field"
      },
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "options.aliases",
        "description": "other keys to which this field should answer"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "options.aliasInitialValues",
        "description": "other keys to which this field should answer"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.setValueThroughSignal",
        "description": "whether signals sent to `field.p('value')` should be accepted"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options.valueTrackerOptions",
        "description": "the `ValueTracker` options to use for each field's observable properties"
      }
    ]
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "getAll",
    "memberof": "src/fields/Rel1Field.js~Rel1Field",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fields/Rel1Field.js~Rel1Field#getAll",
    "access": null,
    "description": "",
    "lineNumber": 139,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Set"
      ],
      "spread": false,
      "description": "A new `Set` data-structure populated with\n              the entity in this field, or empty."
    }
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "add",
    "memberof": "src/fields/Rel1Field.js~Rel1Field",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fields/Rel1Field.js~Rel1Field#add",
    "access": null,
    "description": "Set this field to a new entity, removing the previous one.",
    "lineNumber": 151,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "newValue",
        "description": "the new entity to be put in this field"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.ignoreReadonly",
        "description": "allow this field's value to be changed even if it is read-only"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.ignoreValidation",
        "description": "don't validate the new cardinality or value"
      }
    ]
  },
  {
    "__docId__": 78,
    "kind": "method",
    "name": "delete",
    "memberof": "src/fields/Rel1Field.js~Rel1Field",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fields/Rel1Field.js~Rel1Field#delete",
    "access": null,
    "description": "Set this field to `null` if the given entity corresponds to the entity currently in this field.",
    "lineNumber": 162,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "oldValue",
        "description": "the entity to be removed from this field"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.ignoreReadonly",
        "description": "allow this field's value to be changed even if it is read-only"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.ignoreValidation",
        "description": "don't validate the new cardinality"
      }
    ]
  },
  {
    "__docId__": 79,
    "kind": "method",
    "name": "valueToJSON",
    "memberof": "src/fields/Rel1Field.js~Rel1Field",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/fields/Rel1Field.js~Rel1Field.valueToJSON",
    "access": null,
    "description": "How to properly convert a value in this field to JSON (plain data).",
    "lineNumber": 174,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "the value to convert to JSON"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Class"
        ],
        "spread": false,
        "optional": true,
        "name": "options.getAddress",
        "description": "a function that returns an address corresponding to a given entity"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 80,
    "kind": "method",
    "name": "jsonToValue",
    "memberof": "src/fields/Rel1Field.js~Rel1Field",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/fields/Rel1Field.js~Rel1Field.jsonToValue",
    "access": null,
    "description": "How to properly convert a JSON value to a value appropriate for this type of field.",
    "lineNumber": 188,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "json",
        "description": "the JSON value to convert"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "options.getEntity",
        "description": "a function that returns an entity corresponding to a given address"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 81,
    "kind": "method",
    "name": "validate",
    "memberof": "src/fields/Rel1Field.js~Rel1Field",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fields/Rel1Field.js~Rel1Field#validate",
    "access": null,
    "description": "Validate a certain value as appropriate for this field.\nThrows an exception if the value is invalid. Otherwise does nothing.",
    "lineNumber": 206,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": "the value to test"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "stages",
        "description": "the validation stages to validate for (e.g., 'commit')"
      }
    ]
  },
  {
    "__docId__": 82,
    "kind": "method",
    "name": "validateElement",
    "memberof": "src/fields/Rel1Field.js~Rel1Field",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fields/Rel1Field.js~Rel1Field#validateElement",
    "access": null,
    "description": "Validate a certain value as appropriate for this field.\nThrows an exception if the value is invalid. Otherwise does nothing.",
    "lineNumber": 232,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "the value to test"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "stages",
        "description": "the validation stages to validate for (e.g., 'commit')"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 83,
    "kind": "file",
    "name": "src/fields/RelField.js",
    "content": "import Field_factory from './Field.js';\n\n/** @wrapper */\nexport default (env) => {\n\t\n\tconst Field = Field_factory(env);\n\t\n\t/**\n\t * A field on an `Entity` representing one side of a relationship.\n\t */\n\tclass RelField extends Field {\n\t\t\n\t\t/**\n\t\t * @return {Set} A new `Set` data-structure populated with\n\t\t *               the entities related through this field.\n\t\t */\n\t\tgetAll() {\n\t\t} // to be implemented in subclasses\n\t\t\n\t\t\n\t\t/**\n\t\t * Add an additional entity to this field, or replace the current entity if this is a `Rel1Field`.\n\t\t * @param {Entity}   newValue - the new entity to be added into this field\n\t\t * @param {Object}  [options={}]\n\t\t * @param {boolean} [options.ignoreReadonly=false]   - allow this field's value to be changed even if it is read-only\n\t\t * @param {boolean} [options.ignoreValidation=false] - don't validate the new cardinality or value\n\t\t */\n\t\tadd(newValue, options) {\n\t\t} // to be implemented in subclasses\n\t\t\n\t\t/**\n\t\t * Remove a specific entity from this field.\n\t\t * @param {Entity}   oldValue - the entity to be removed from this field\n\t\t * @param {Object}  [options={}]\n\t\t * @param {boolean} [options.ignoreReadonly=false]   - allow this field's value to be changed even if it is read-only\n\t\t * @param {boolean} [options.ignoreValidation=false] - don't validate the new cardinality\n\t\t */\n\t\tdelete(oldValue, options) {\n\t\t} // to be implemented in subclasses\n\t\t\n\t\t/**\n\t\t * Validate a specific entity as appropriate to be included in this field.\n\t\t * Throws an exception if the entity is invalid. Otherwise does nothing.\n\t\t * @param {Entity} entity     - the entity to test\n\t\t * @param {Array} [stages=[]] - the validation stages to validate for (e.g., 'commit')\n\t\t */\n\t\tvalidateElement(entity, stages) {\n\t\t} // to be implemented in subclasses\n\t\t\n\t}\n\t\n\treturn env.registerFieldClass('RelField', RelField);\n\t\n};\n",
    "static": true,
    "longname": "src/fields/RelField.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 84,
    "kind": "class",
    "name": "RelField",
    "memberof": "src/fields/RelField.js",
    "static": true,
    "longname": "src/fields/RelField.js~RelField",
    "access": null,
    "export": true,
    "importPath": "open-physiology-manifest/src/fields/RelField.js",
    "importStyle": "RelField",
    "description": "A field on an `Entity` representing one side of a relationship.",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "Field"
    ]
  },
  {
    "__docId__": 85,
    "kind": "method",
    "name": "getAll",
    "memberof": "src/fields/RelField.js~RelField",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fields/RelField.js~RelField#getAll",
    "access": null,
    "description": "",
    "lineNumber": 15,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Set"
      ],
      "spread": false,
      "description": "A new `Set` data-structure populated with\n              the entities related through this field."
    }
  },
  {
    "__docId__": 86,
    "kind": "method",
    "name": "add",
    "memberof": "src/fields/RelField.js~RelField",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fields/RelField.js~RelField#add",
    "access": null,
    "description": "Add an additional entity to this field, or replace the current entity if this is a `Rel1Field`.",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "newValue",
        "description": "the new entity to be added into this field"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.ignoreReadonly",
        "description": "allow this field's value to be changed even if it is read-only"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.ignoreValidation",
        "description": "don't validate the new cardinality or value"
      }
    ]
  },
  {
    "__docId__": 87,
    "kind": "method",
    "name": "delete",
    "memberof": "src/fields/RelField.js~RelField",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fields/RelField.js~RelField#delete",
    "access": null,
    "description": "Remove a specific entity from this field.",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "oldValue",
        "description": "the entity to be removed from this field"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.ignoreReadonly",
        "description": "allow this field's value to be changed even if it is read-only"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.ignoreValidation",
        "description": "don't validate the new cardinality"
      }
    ]
  },
  {
    "__docId__": 88,
    "kind": "method",
    "name": "validateElement",
    "memberof": "src/fields/RelField.js~RelField",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/fields/RelField.js~RelField#validateElement",
    "access": null,
    "description": "Validate a specific entity as appropriate to be included in this field.\nThrows an exception if the entity is invalid. Otherwise does nothing.",
    "lineNumber": 42,
    "params": [
      {
        "nullable": null,
        "types": [
          "Entity"
        ],
        "spread": false,
        "optional": false,
        "name": "entity",
        "description": "the entity to test"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "stages",
        "description": "the validation stages to validate for (e.g., 'commit')"
      }
    ]
  },
  {
    "__docId__": 89,
    "kind": "file",
    "name": "src/fields/fields.js",
    "content": "import Field_factory          from './Field.js';\nimport PropertyField_factory  from './PropertyField.js';\nimport RelField_factory       from './RelField.js';\nimport Rel1Field_factory      from './Rel1Field.js';\nimport Rel$Field_factory      from './Rel$Field.js';\n\n/** @ignore */\nexport default (env) => {\n\tenv.fieldClasses = {};\n\tenv.registerFieldClass = (name, FieldClass) => {\n\t\tif (!env.fieldClasses[name]) {\n\t\t\tenv.fieldClasses[name] = FieldClass;\n\t\t}\n\t\treturn env.fieldClasses[name];\n\t};\n\n\treturn {\n\t\tPropertyField: PropertyField_factory(env),\n\t\tRelField:      RelField_factory     (env),\n\t\tRel1Field:     Rel1Field_factory    (env),\n\t\tRel$Field:     Rel$Field_factory    (env),\n\t\tField:         Field_factory        (env)\n\t};\n};\n",
    "static": true,
    "longname": "src/fields/fields.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 90,
    "kind": "function",
    "name": "fields",
    "memberof": "src/fields/fields.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/fields/fields.js~fields",
    "access": null,
    "export": true,
    "importPath": "open-physiology-manifest/src/fields/fields.js",
    "importStyle": "fields",
    "description": null,
    "lineNumber": 8,
    "ignore": true,
    "params": [
      {
        "name": "env",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"PropertyField\": *, \"RelField\": *, \"Rel1Field\": *, \"Rel$Field\": *, \"Field\": *}"
      ]
    }
  },
  {
    "__docId__": 91,
    "kind": "file",
    "name": "src/fields/symbols.js",
    "content": "/** @private */ export const $$owner     = Symbol('$$owner');\n/** @private */ export const $$key       = Symbol('$$key');\n/** @private */ export const $$desc      = Symbol('$$desc');\n/** @private */ export const $$value     = Symbol('$$value');\n/** @private */ export const $$initSet   = Symbol('$$initSet');\n/** @private */ export const $$entriesIn = Symbol('$$entriesIn');\n",
    "static": true,
    "longname": "src/fields/symbols.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 92,
    "kind": "variable",
    "name": "$$owner",
    "memberof": "src/fields/symbols.js",
    "static": true,
    "longname": "src/fields/symbols.js~$$owner",
    "access": "private",
    "export": true,
    "importPath": "open-physiology-manifest/src/fields/symbols.js",
    "importStyle": "{$$owner}",
    "description": null,
    "lineNumber": 1,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 93,
    "kind": "variable",
    "name": "$$key",
    "memberof": "src/fields/symbols.js",
    "static": true,
    "longname": "src/fields/symbols.js~$$key",
    "access": "private",
    "export": true,
    "importPath": "open-physiology-manifest/src/fields/symbols.js",
    "importStyle": "{$$key}",
    "description": null,
    "lineNumber": 2,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 94,
    "kind": "variable",
    "name": "$$desc",
    "memberof": "src/fields/symbols.js",
    "static": true,
    "longname": "src/fields/symbols.js~$$desc",
    "access": "private",
    "export": true,
    "importPath": "open-physiology-manifest/src/fields/symbols.js",
    "importStyle": "{$$desc}",
    "description": null,
    "lineNumber": 3,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 95,
    "kind": "variable",
    "name": "$$value",
    "memberof": "src/fields/symbols.js",
    "static": true,
    "longname": "src/fields/symbols.js~$$value",
    "access": "private",
    "export": true,
    "importPath": "open-physiology-manifest/src/fields/symbols.js",
    "importStyle": "{$$value}",
    "description": null,
    "lineNumber": 4,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 96,
    "kind": "variable",
    "name": "$$initSet",
    "memberof": "src/fields/symbols.js",
    "static": true,
    "longname": "src/fields/symbols.js~$$initSet",
    "access": "private",
    "export": true,
    "importPath": "open-physiology-manifest/src/fields/symbols.js",
    "importStyle": "{$$initSet}",
    "description": null,
    "lineNumber": 5,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 97,
    "kind": "variable",
    "name": "$$entriesIn",
    "memberof": "src/fields/symbols.js",
    "static": true,
    "longname": "src/fields/symbols.js~$$entriesIn",
    "access": "private",
    "export": true,
    "importPath": "open-physiology-manifest/src/fields/symbols.js",
    "importStyle": "{$$entriesIn}",
    "description": null,
    "lineNumber": 6,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 98,
    "kind": "file",
    "name": "src/index.js",
    "content": "import resources      from './modules/resources';\nimport typed          from './modules/typed';\nimport lyphs          from './modules/lyphs';\nimport groups         from './modules/groups';\nimport measurables    from './modules/measurables';\nimport processes      from './modules/processes';\nimport canonicalTrees from './modules/canonicalTrees';\nimport research       from './modules/research';\n\nimport Module from './modules/Module.js';\n\nexport default Module.create('all', [\n\tresources,\n\ttyped,\n\tlyphs,\n\tgroups,\n\tmeasurables,\n\tprocesses,\n\tresearch,\n\tcanonicalTrees,\n]);\n",
    "static": true,
    "longname": "src/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 99,
    "kind": "file",
    "name": "src/libs/rxjs.js",
    "content": "import {global} from 'utilities';\n/** @private */ const Rx = global.Rx;\n/** @private */ export default Rx;\n/** @private */ export const Observable      = Rx.Observable;\n/** @private */ export const Subject         = Rx.Subject;\n/** @private */ export const BehaviorSubject = Rx.BehaviorSubject;\n",
    "static": true,
    "longname": "src/libs/rxjs.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 100,
    "kind": "variable",
    "name": "Observable",
    "memberof": "src/libs/rxjs.js",
    "static": true,
    "longname": "src/libs/rxjs.js~Observable",
    "access": "private",
    "export": true,
    "importPath": "open-physiology-manifest/src/libs/rxjs.js",
    "importStyle": "{Observable}",
    "description": null,
    "lineNumber": 4,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 101,
    "kind": "variable",
    "name": "Subject",
    "memberof": "src/libs/rxjs.js",
    "static": true,
    "longname": "src/libs/rxjs.js~Subject",
    "access": "private",
    "export": true,
    "importPath": "open-physiology-manifest/src/libs/rxjs.js",
    "importStyle": "{Subject}",
    "description": null,
    "lineNumber": 5,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 102,
    "kind": "variable",
    "name": "BehaviorSubject",
    "memberof": "src/libs/rxjs.js",
    "static": true,
    "longname": "src/libs/rxjs.js~BehaviorSubject",
    "access": "private",
    "export": true,
    "importPath": "open-physiology-manifest/src/libs/rxjs.js",
    "importStyle": "{BehaviorSubject}",
    "description": null,
    "lineNumber": 6,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 103,
    "kind": "variable",
    "name": "Rx",
    "memberof": "src/libs/rxjs.js",
    "static": true,
    "longname": "src/libs/rxjs.js~Rx",
    "access": "private",
    "export": true,
    "importPath": "open-physiology-manifest/src/libs/rxjs.js",
    "importStyle": "Rx",
    "description": null,
    "lineNumber": 2,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 104,
    "kind": "file",
    "name": "src/modules/Module.js",
    "content": "import {\n\tisUndefined,\n\tisInteger,\n\tdefaults,\n\tassignWith,\n\tkeys,\n\tvalues,\n\tentries,\n\tfromPairs\n} from 'lodash-bound';\n\nimport {isEqual as _isEqual} from 'lodash';\n\nimport assert from 'power-assert';\n\nimport Graph from 'graph.js/dist/graph.js';\n\nimport {assign, defineProperty} from 'bound-native-methods';\n\nimport {parseCardinality} from '../util/misc';\n\nimport {\n\thumanMsg,\n\twrapInArray,\n\tdefinePropertyByValue,\n\tdefinePropertiesByValue\n} from 'utilities';\n\n\n\nimport Entity_factory from '../Entity.js';\nimport fields_factory from '../fields/fields.js';\n\nconst $$processedFor              = Symbol('$$processedFor');\nconst $$relationshipSpecs         = Symbol('$$relationshipSpecs');\nconst $$relevantDomains           = Symbol('$$relevantDomains');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Environment class                                                          //\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * An `Environment` encompasses a group of modules. There should be only one\n * per application (though it is recreated for every unit test).\n * The environment is available pretty much everywhere in the manifest code,\n * and provides access to all resource classes.\n */\nexport class Environment {\n\t\n\t// vertices: name                   -> class\n\t// edges:    [superclass, subclass] -> undefined\n\t\n\t/**\n\t * a `Graph` of all entity classes, where the edges represent the 'superclass of' relation;\n\t * it also maps all of the classes by name as a normal js object\n\t */\n\tclasses: Graph;\n\t\n\t/** a reference to the Field class         */ Field:         Class;\n\t/** a reference to the PropertyField class */ PropertyField: Class;\n\t/** a reference to the RelField class      */ RelField:      Class;\n\t/** a reference to the Rel1Field class     */ Rel1Field:     Class;\n\t/** a reference to the Rel$Field class     */ Rel$Field:     Class;\n\t\n\t/** @private */\n\tconstructor() {\n\t\t/* start tracking modules, classes and make the field classes available from this environment */\n\t\tthis::definePropertiesByValue({\n\t\t\tmodules: new Map,\n\t\t\tclasses: new Graph,\n\t\t\t...fields_factory(this)\n\t\t});\n\t\t\n\t\t/* make Entity behave more like all its subclasses */\n\t\tconst Entity = Entity_factory(this);\n\t\tthis.classes.ensureVertex('Entity', Entity);\n\t\tthis.classes['Entity'] = Entity;\n\t\tEntity.extends    = new Set;\n\t\tEntity.extendedBy = new Set;\n\t}\n\t\n\t/**\n\t * Register a new module in this environment.\n\t * This is actually the method that runs the functions\n\t * exported from the `/modules/someModule.js` files.\n\t * Does nothing if the environment already knows the module.\n\t * @param {Module}                            module       - the module to register\n\t * @param {Array<Module>}                     dependencies - the dependencies of the new module\n\t * @param {Function<{[string]: Class}, void>} fn           - the function that defines the classes in the module\n\t */\n\tregisterModule(module, dependencies, fn) {\n\t\t/* only register each module once */\n\t\tif (this.modules.has(module.name)) { return }\n\t\t/* register module */\n\t\tthis.modules.set(module.name, module);\n\t\t/* set some useful module properties */\n\t\tmodule::definePropertiesByValue({\n\t\t\tenvironment: this,\n\t\t\tclasses:     this.classes,\n\t\t\tEntity:      this.classes.Entity\n\t\t});\n\t\t/* creating dependency modules */\n\t\tfor (let dep of dependencies) { dep(this) }\n\t\t/* running provided module definition function */\n\t\tif (fn) { fn(module, [...this.classes.vertices()]::fromPairs()) }\n\t}\n\t\n}\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Module / Resource / Relationship Factory                                   //\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A `Module` is a grouping of entity class definitions.\n */\nexport default class Module {\n\t\n\t/**\n\t * Define a new module (independent of any environment).\n\t * @param {string}                            name         - the name of the new module\n\t * @param {Array<Module>}                     dependencies - the dependencies of the new module\n\t * @param {Function<{[string]: Class}, void>} fn           - the function that defines the classes in the module\n\t * @return {Function<?Environment>} a function to instantiate this module with either an existing or new environment\n\t */\n\tstatic create(name, dependencies, fn) {\n\t\treturn (env) => {\n\t\t\tif (!env) { env = new Environment }\n\t\t\tconst module = new this(name);\n\t\t\tenv.registerModule(module, dependencies, fn);\n\t\t\treturn env;\n\t\t};\n\t}\n\t\n\t/** the name of this module, e.g., 'measurables' */\n\tname: string;\n\t\n\t/** @private */\n\tconstructor(name) {\n\t\tthis::definePropertyByValue('name', name);\n\t}\n\t\n\t/**\n\t * Declare a resource class.\n\t * @param {Object} config      - the traits of the new class\n\t * @param {string} config.name - the name of the new class\n\t * @return {Class} the new `Resource` subclass\n\t */\n\tRESOURCE(config) {\n\t\tconfig.isResource = true;\n\t\tthis.basicNormalization                      (config);\n\t\tlet constructor = this.Entity.createClass    (config);\n\t\t    constructor = this.mergeSameNameResources(constructor);\n\t\tthis.register                                (constructor);\n\t\tthis.mergeSuperclassFields                   (constructor);\n\t\tthis.environment.Field.augmentClass          (constructor);\n\t\treturn constructor;\n\t}\n\n\t/**\n\t * Declare a relationship class.\n\t * @param {Object} config      - the traits of the new class\n\t * @param {string} config.name - the name of the new class\n\t * @return {Class} the new `Relationship` subclass\n\t */\n\tRELATIONSHIP(config) {\n\t\tconfig.isRelationship = true;\n\t\tthis.basicNormalization                      (config);\n\t\tlet constructor = this.Entity.createClass    (config);\n\t\tthis.normalizeRelationshipSides              (constructor);\n\t\tconstructor = this.mergeSameNameRelationships(constructor);\n\t\tthis.register                                (constructor);\n\t\tthis.resolveRelationshipDomains              (constructor);\n\t\treturn constructor;\n\t}\n\t\n\t////////////////////////////////////////////////////////////////////////////\n\t\n\t/**\n\t * Normalize the aspects of the given entity configuration.\n\t */\n\tbasicNormalization(config) : void {\n\t\t/* normalizing grammar stuff */\n\t\tif (config.singular && !config.plural) {\n\t\t\tif (config.isResource) {\n\t\t\t\tconfig.plural = `${config.singular}s`;\n\t\t\t} else {\n\t\t\t\tlet match = config.singular.match(/^(.+)s$/);\n\t\t\t\tif (match) {\n\t\t\t\t\tconfig.plural = match[1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* some default values */\n\t\tconfig::defaults({\n\t\t\tbehavior: {}\n\t\t});\n\t\t\n\t\tif (config.isResource) {\n\t\t\tconfig::defaults({\n\t\t\t\trelationships:         {},\n\t\t\t\trelationshipShortcuts: {}\n\t\t\t});\n\t\t}\n\t\t\n\t\t/* normalizing extends/extendedBy */\n\t\tfor (let key of ['extends', 'extendedBy']) {\n\t\t\tconfig::defaults({ [key]: [] });\n\t\t\tconfig[key] = new Set( wrapInArray(config[key]) );\n\t\t}\n\t\t\n\t\t/* normalize properties */\n\t\tfor (let [pKey, kKey] of [\n\t\t\t['properties',        'key'    ],\n\t\t\t['patternProperties', 'pattern']\n\t\t]) {\n\t\t\tconfig::defaults({ [pKey]: {} });\n\t\t\tfor (let [k, desc] of config[pKey]::entries()) {\n\t\t\t\tdesc[kKey] = k;\n\t\t\t\tif (!desc[kKey].value::isUndefined()) {\n\t\t\t\t\tassert(desc[kKey] !== false, humanMsg`\n\t\t\t\t\t\tThe property '${kKey}' has a constant\n\t\t\t\t\t\tvalue, so it must be readonly.\n\t\t\t\t\t`);\n\t\t\t\t\tdesc[kKey].readonly = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* sanity checks */\n\t\tfor (let key of ['extends', 'extendedBy']) {\n\t\t\tfor (let other of config[key]) {\n\t\t\t\tassert(this.classes.hasVertex(other.name), humanMsg`\n\t\t\t\t\tThe '${config.name}' class is being processed\n\t\t\t\t\tby module '${this.name}', but it extends a '${other.name}'\n\t\t\t\t\tclass that has not yet been processed. How can that be?\n\t\t\t\t`);\n\t\t\t\tassert(this.classes.vertexValue(other.name) === other, humanMsg`\n\t\t\t\t\tThe '${config.name}' class is being processed\n\t\t\t\t\tby module '${this.name}', but it extends an '${other.name}'\n\t\t\t\t\tclass that is in conflict with another class known\n\t\t\t\t\tby that name.\n\t\t\t\t`);\n\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * Normalize the `1` and `2` keys of the given relationship class.\n\t */\n\tnormalizeRelationshipSides(cls) : void {\n\t\t// - 1 is left-hand side, and\n\t\t// - 2 is right-hand side of the relationship;\n\t\t// these can be given directly, or multiple\n\t\t// can be grouped in a 'domainPairs' array;\n\t\t// here, we'll normalize them into a 'domainPairs' array\n\t\t\n\t\tassert( cls.domainPairs && !cls[1] && !cls[2] ||\n\t\t       !cls.domainPairs &&  cls[1] &&  cls[2], humanMsg`\n\t\t\tA relationship can specify [1] and [2] domains directly,\n\t\t\tor group multiple pairs in a 'domainPairs' object, but not both.\n\t\t`);\n\t\t\n\t\t/* normalize domainPairs array */\n\t\tif (!cls.domainPairs) { cls.domainPairs = [] }\n\t\tif (cls[1] && cls[2]) {\n\t\t\tcls.domainPairs.push({\n\t\t\t\t[1]: cls[1],\n\t\t\t\t[2]: cls[2]\n\t\t\t});\n\t\t}\n\t\t\n\t\t/* normalizing all domainPairs */\n\t\tcls.keyInResource = {\n\t\t\t1: `-->${cls.name}`,\n\t\t\t2: `<--${cls.name}`\n\t\t};\n\t\tcls.domainPairs = cls.domainPairs.map((givenDomainPair) => {\n\t\t\tlet pair = { [1]: {}, [2]: {} };\n\t\t\tfor (let [ domainKey, domain ,  codomain ] of\n\t\t\t\t   [ [ 1        , pair[1],  pair[2]  ] ,\n\t\t\t         [ 2        , pair[2],  pair[1]  ] ]) {\n\t\t\t\tlet [resourceClass, cardinality, options = {}] = givenDomainPair[domainKey];\n\t\t\t\tdomain::definePropertiesByValue({\n\t\t\t\t\tcodomain         : codomain,\n\t\t\t\t\t\n\t\t\t\t\trelationshipClass: cls,\n\t\t\t\t\tkeyInRelationship: domainKey,\n\t\t\t\t\t\n\t\t\t\t\tresourceClass    : resourceClass,\n\t\t\t\t\tkeyInResource    : cls.keyInResource[domainKey],\n\t\t\t\t\t\n\t\t\t\t\tcardinality      : parseCardinality(cardinality),\n\t\t\t\t\toptions          : options,\n\t\t\t\t\t\n\t\t\t\t\tshortcutKey      : options.key\n\t\t\t\t});\n\t\t\t\tdomain::defineProperty(Symbol.toStringTag, {\n\t\t\t\t\tget() {\n\t\t\t\t\t\treturn humanMsg`\n\t\t\t\t\t\t\t${this.resourceClass.name}\n\t\t\t\t\t\t\t(${this.keyInResource})\n\t\t\t\t\t\t\t${this.codomain.resourceClass.name}\n\t\t\t\t\t\t`;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\treturn pair;\n\t\t});\n\t\tdelete cls[1];\n\t\tdelete cls[2];\n\t}\n\t\n\t/**\n\t * Register a given a relationship class with the resource classes involved.\n\t */\n\tresolveRelationshipDomains(cls) {\n\t\tfor (let domainPair of cls.domainPairs) {\n\t\t\tfor (let referenceDomain of domainPair::values()) {\n\t\t\t\t\n\t\t\t\tconst {\n\t\t\t\t\tresourceClass,\n\t\t\t\t\tkeyInResource,\n\t\t\t\t\tshortcutKey\n\t\t\t\t} = referenceDomain;\n\t\t\t\t\n\t\t\t\t// NOTE: This was the location of a whole lot of unfinished code we\n\t\t\t\t//     : may yet want to reinstate in the future. See commented code\n\t\t\t\t//     : at the bottom of this file.\n\t\t\t\t\n\t\t\t\t/* put back-reference in classes */\n\t\t\t\tresourceClass.relationships[keyInResource] = referenceDomain;\n\t\t\t\tif (!shortcutKey::isUndefined()) {\n\t\t\t\t\tresourceClass.relationshipShortcuts[shortcutKey] = referenceDomain;\n\t\t\t\t}\n\t\t\t\tthis.environment.Field.augmentClass(resourceClass, keyInResource);\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * Register an entity class `cls` with the module.\n\t * In particular, put it in the `classes` graph.\n\t * @param {Class} cls - the entity class to register\n\t */\n\tregister(cls) {\n\t\t/* register the class in this module */\n\t\tthis.classes.ensureVertex(cls.name, cls);\n\t\tif (!cls.notExported) {\n\t\t\tthis.classes[cls.name] = cls;\n\t\t}\n\t\t\n\t\t/* add subclassing edges and cross-register sub/superclasses */\n\t\tif (!cls.extends || [...cls.extends].length === 0) {\n\t\t\tcls.extends = [this.Entity];\n\t\t}\n\t\tfor (let extendee of cls.extends) {\n\t\t\tthis.classes.addEdge(extendee.name, cls.name);\n\t\t\textendee.extendedBy.add(cls);\n\t\t}\n\t\tfor (let extender of (cls.extendedBy) || []) {\n\t\t\tthis.classes.addEdge(cls.name, extender.name);\n\t\t\textender.extends.add(cls);\n\t\t}\n\t\t\n\t\t/* check for cycles */\n\t\tlet cycle = this.classes.cycle();\n\t\tif (cycle) {\n\t\t\tthrow new Error(humanMsg`\n\t\t\t\tA subclass cycle has been introduced while registering\n\t\t\t\tthe ${cls.name} class:\n\t\t\t\t${[...cycle, cycle[0]].join(' --> ')}.\n\t\t\t`);\n\t\t}\n\t}\n\t\n\t/**\n\t * Merge superclass fields into the given class,\n\t * and fields of the given class into its existing subclasses.\n\t * (Since our homebrew class hierarchy can't count on JavaScript\n\t *  prototype inheritance.)\n\t * @param cls\n\t */\n\tmergeSuperclassFields(cls) : void {\n\t\tconst mergeFieldKind = (cls, newCls, kind, customMerge) => {\n\t\t\tif (cls[kind]::isUndefined()) { return }\n\t\t\t\n\t\t\tif (!cls[$$processedFor]) { cls[$$processedFor] = {} }\n\t\t\tif (!cls[$$processedFor][kind]) { cls[$$processedFor][kind] = new WeakSet() }\n\t\t\tif (cls[$$processedFor][kind].has(newCls)) { return }\n\t\t\tcls[$$processedFor][kind].add(newCls);\n\t\t\t\n\t\t\tconst mergeBetween = (superCls, subCls) => {\n\t\t\t\tfor (let key of superCls[kind]::keys()) {\n\t\t\t\t\tlet superDesc = superCls[kind][key];\n\t\t\t\t\tlet subDesc   = subCls[kind][key];\n\t\t\t\t\tif (subDesc::isUndefined()) {\n\t\t\t\t\t\tsubCls[kind][key] = superDesc;\n\t\t\t\t\t\tthis.environment.Field.augmentClass(subCls, key);\n\t\t\t\t\t} else if (_isEqual(subDesc, superDesc)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsubCls[kind][key] = customMerge(superDesc, subDesc);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\tfor (let superCls of cls.extends) {\n\t\t\t\tmergeFieldKind(superCls, newCls, kind, customMerge);\n\t\t\t\tmergeBetween(superCls, cls);\n\t\t\t}\n\t\t\t\n\t\t\tfor (let subCls of cls.extendedBy) {\n\t\t\t\tmergeBetween(cls, subCls);\n\t\t\t\tmergeFieldKind(subCls, newCls, kind, customMerge);\n\t\t\t}\n\t\t\t\n\t\t};\n\t\t\t\t\n\t\tmergeFieldKind(cls, cls, 'properties', (superDesc, subDesc) => {\n\t\t\tassert(subDesc.key === superDesc.key);\n\t\t\t// We're assuming that the only kind of non-trivial merging\n\t\t\t// right now is to give a property a specific constant value\n\t\t\t// in the subclass, which has to be checked in the superclass.\n\t\t\t// TODO: use actual json-schema validation to validate value\n\t\t\tlet singleSuperDesc;\n\t\t\tif (superDesc.type::isUndefined() && superDesc.oneOf) {\n\t\t\t\tassert(superDesc.oneOf.length > 0);\n\t\t\t\tfor (let disjunct of superDesc.oneOf) {\n\t\t\t\t\tif (typeof subDesc.value === disjunct.type ||\n\t\t\t\t\t    subDesc.value::isInteger() && disjunct.type === 'integer' ||\n\t\t\t\t\t    _isEqual(subDesc.value, disjunct.value)\n\t\t\t\t\t) {\n\t\t\t\t\t\tsingleSuperDesc = { ...superDesc, ...disjunct };\n\t\t\t\t\t\tdelete singleSuperDesc.oneOf;\n\t\t\t\t\t\tdelete singleSuperDesc.default;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsingleSuperDesc = { ...superDesc };\n\t\t\t}\n\t\t\treturn singleSuperDesc;\n\t\t});\n\t\t\n\t\tmergeFieldKind(cls, cls, 'relationships');\n\t\tmergeFieldKind(cls, cls, 'relationshipShortcuts');\n\t}\n\t\n\t/**\n\t * If the same resource is declared more than once,\n\t * intelligently merge their aspects.\n\t * @param {Class} cls - the resource class to merge with others of the same name\n\t * @return {Class} the class that gets to survive and represent its name (an existing class is prioritized over the new class)\n\t */\n\tmergeSameNameResources(cls) : Class {\n\t\tconst oldClass = this.classes.vertexValue(cls.name);\n\t\tif (!oldClass) { return cls }\n\t\treturn oldClass::assignWith(cls, (vOld, vNew, key) => {\n\t\t\tswitch (key) {\n\t\t\t\tcase 'extends':\n\t\t\t\tcase 'extendedBy': return new Set([...vOld, ...vNew]);\n\t\t\t\tcase 'properties':\n\t\t\t\tcase 'patternProperties': return {}::assignWith(vOld, vNew, (pOld, pNew, pKey) => {\n\t\t\t\t\tassert(pOld::isUndefined() || _isEqual(pOld, pNew), humanMsg`\n\t\t\t\t\t\tCannot merge property descriptions for ${oldClass.name}#${key}.\n\t\t\t\t\t\t\n\t\t\t\t\t\t1) ${JSON.stringify(pOld)}\n\t\t\t\t\t\t\n\t\t\t\t\t\t2) ${JSON.stringify(pNew)}\n\t\t\t\t\t`);\n\t\t\t\t\treturn pOld::isUndefined() ? pNew : pOld;\n\t\t\t\t});\n\t\t\t\tdefault: {\n\t\t\t\t\tif (!vOld::isUndefined() && !vNew::isUndefined() && !_isEqual(vOld, vNew)) {\n\t\t\t\t\t\tthrow new Error(humanMsg`\n\t\t\t\t\t\t\tCannot merge ${oldClass.name}.${key} = ${JSON.stringify(vOld)}\n\t\t\t\t\t\t\t        with ${JSON.stringify(vNew)}.\n\t\t\t\t\t\t`);\n\t\t\t\t\t}\n\t\t\t\t\treturn vOld::isUndefined() ? vNew : vOld;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\t\n\t/**\n\t * If the same relationship is declared more than once,\n\t * intelligently merge their aspects.\n\t * @param {Class} cls - the relationship class to merge with others of the same name\n\t * @return {Class} the class that gets to survive and represent its name (an existing class is prioritized over the new class)\n\t */\n\tmergeSameNameRelationships(cls) : Class {\n\t\tconst oldClass = this.classes.vertexValue(cls.name);\n\t\tif (!oldClass) { return cls }\n\t\t\n\t\tfunction chooseOne(o, n, sep, key) {\n\t\t\tassert(o::isUndefined() || n::isUndefined() || _isEqual(o, n), humanMsg`\n\t\t\t\tCannot merge values for ${oldClass.name}${sep}${key}.\n\t\t\t\t(1) ${JSON.stringify(o)}\n\t\t\t\t(2) ${JSON.stringify(n)}\n\t\t\t`);\n\t\t\treturn o::isUndefined() ? n : o;\n\t\t}\n\t\t\n\t\treturn oldClass::assignWith(cls, (vOld, vNew, key) => {\n\t\t\tswitch (key) {\n\t\t\t\tcase 'extends':\n\t\t\t\tcase 'extendedBy':\n\t\t\t\t\treturn new Set([...vOld, ...vNew]);\n\t\t\t\tcase 'domainPairs':\n\t\t\t\t\treturn [...vOld, ...vNew];\n\t\t\t\tdefault:\n\t\t\t\t\treturn chooseOne(vOld, vNew, '.', key);\n\t\t\t}\n\t\t});\n\t}\n\t\n}\n\n////////////////////////////////////////////////////////////\n// RESOURCE({\n//\n//     name: 'ResourceName',\n//\n//     extends: <superclass>,\n//     abstract: <true/false>,\n//\n//     singular: 'singular name',\n//     plural:   'plural names',\n//\n//     properties: {\n//         ...properties\n//     },\n//     patternProperties: {\n//         ...patternProperties\n//     },\n//     ...options\n// })\n////////////////////////////////////////////////////////////\n\n////////////////////////////////////////////////////////////\n// RELATIONSHIP({\n//\n//     name: 'RelationshipName',\n//\n//     extends: <superclass>,\n//     abstract: <true/false>,\n//\n//     1: [ ResourceType1, [c1min, c1max], { ...options1to2 } ],\n//     2: [ ResourceType2, [c2min, c2max], { ...options2to1 } ],\n//\n//     properties: {\n//         ...properties\n//     },\n//\n//     ...options\n// })\n//\n// This means that RelationshipName is a type of c1-to-c2 relationship\n// (c stands for cardinality: many-to-many, one-to-many, etc. both sides\n// have a min and max) between ResourceType1 resources and ResourceType2 resources.\n// So: \"a ResourceType1 resource can be related to 'c1' ResourceType2 resource(s),\n//      exposed through through the key 'options1to2.key' in that resource\"\n// and vice versa, if a key field is present, which is not mandatory.\n//\n// A couple of possible options:\n// - options1to2.sustains:     when the last related ResourceType1 instance is deleted,\n//                             the ResourceType2 instance that is being sustained by it is deleted automatically\n// - options1to2.anchors:      a ResourceType2 instance cannot be deleted\n//                             while there are still ResourceType1 instances related with it\n// - options1to2.implicit:     (only when c1min > 0) a new ResourceType2 instance, plus this kind of relationship,\n//                             is automatically created for a new ResourceType1 instance;\n// - options1to2.getSummary:   a human-readable explanation of the corresponding REST endpoint for HTTP GET\n// - options1to2.putSummary:   a human-readable explanation of the corresponding REST endpoint for HTTP PUT\n// - options1to2.deleteSummary:a human-readable explanation of the corresponding REST endpoint for HTTP DELETE\n// - options.readOnly:         this relationship type is managed programmatically, not to be exposed through the API directly\n// - options.noCycles:         no cycles of this relationship type are allowed\n// - options.symmetric:        this relationship type is bidirectional, 1->2 always implies 2->1; TODO: implement when needed\n// - options.antiReflexive:    a resource may not be related to itself with this type;            TODO: implement when needed\n////////////////////////////////////////////////////////////\n\n\n\n\n\n////////// Below is a whole lot of unfinished code we\n\t\t// may yet want to reinstate in the future,\n        // stored temporarily here in a comment.\n\n// const relSinks = relationshipClass::(function findSinks() {\n// \tif (this.extendedBy::size() === 0) { return [this] }\n// \treturn union(...[...this.extendedBy].map(c => c::findSinks()));\n// })();\n//\n// let hierarchy = new Graph();\n// // ^ In this graph: super --> sub\n//\n// const process = (CurrentRelClass, RelSubclass) => {\n// \t/* find all domains relevant to this resource class + field key combo */\n// \tconst relevantDomains = CurrentRelClass[$$relevantDomains] = CurrentRelClass.domainPairs\n// \t\t::map(keyInRelationship)\n      //      ::filter(d => (d.resourceClass).hasSubclass(resourceClass)       ||\n      //                      (resourceClass).hasSubclass(d.resourceClass) )\n// \t\t::groupBy('resourceClass.name')\n// \t\t::_values()\n// \t\t::map(0); // for now, only using one domain-pair per ResourceClass+RelationshipClass combination\n// \t// TODO: ^ don't use only a[0]; this is just for now, to simplify\n// \t//     :   we still manually have to manually create common superclasses\n// \t//     :   for stuff (examples: MeasurableLocation, NodeLocation)\n//\n// \t/* register domain */\n// \tfor (let domain of relevantDomains) {\n// \t\thierarchy.addVertex(domain, domain);\n// \t}\n// \t/* register domain ordering by (sub/super) relationship class */\n// \tfor (let domain of relevantDomains) {\n// \t\tif (RelSubclass) {\n// \t\t\tfor (let subDomain of RelSubclass[$$relevantDomains]) {\n// \t\t\t\thierarchy.spanEdge(domain, subDomain);\n// \t\t\t}\n// \t\t}\n// \t}\n// \t/* register domain ordering by (sub/super) resource class */\n// \tfor (let domain of relevantDomains) {\n// \t\tfor (let otherDomain of relevantDomains::without(domain)) {\n// \t\t\tassert(domain.resourceClass !== otherDomain.resourceClass);\n// \t\t\t// ^ (because `::groupBy('resourceClass.name')` above)\n// \t\t\tif (otherDomain.resourceClass.hasSubclass(domain.resourceClass)) {\n// \t\t\t\thierarchy.spanEdge(otherDomain, domain);\n// \t\t\t}\n// \t\t}\n// \t}\n// \t/* recurse to relationship superclass */\n// \tfor (let RelSuperclass of CurrentRelClass.extends) {\n// \t\tprocess(RelSuperclass, CurrentRelClass);\n// \t}\n// };\n// relSinks.forEach(process);\n//\n// hierarchy = hierarchy.transitiveReduction();\n\n// --- fix bug in the code below (the commented code above already works)\n\n/* from the graph of relevant domains for this field (domain), craft one specifically for each ResourceClass */\n// let resourceHasField = (resCls) => (!!resCls.properties[referenceDomain.keyInResource]);\n// console.log(this.classes.hasVertex(referenceDomain.resourceClass.name), referenceDomain.resourceClass.name, [...this.classes.vertices()]::map(v=>v[1].name));\n// for (let referenceResource of union(\n// \t[...this.classes.verticesWithPathFrom(referenceDomain.resourceClass.name)]::map(([,r])=>r)::filter(resourceHasField),\n// \t[...this.classes.verticesWithPathTo  (referenceDomain.resourceClass.name)]::map(([,r])=>r)::filter(resourceHasField),\n// \t[referenceDomain.resourceClass]\n// )) {\n// \tlet candidateDomains = [...hierarchy.sinks()]::map(([,d])=>d)::(function pinpoint() {\n// \t\tlet result = new Set();\n// \t\tfor (let domain of this) {\n// \t\t\tconst relationshipFits = (referenceDomain.relationshipClass.hasSubclass(domain.relationshipClass));\n// \t\t\tconst resourceFits     = (referenceResource                .hasSubclass(domain.resourceClass    ));\n// \t\t\tif (relationshipFits && resourceFits) {\n// \t\t\t\tresult.add(domain);\n// \t\t\t} else {\n// \t\t\t\tfor (let superDomain of [...hierarchy.verticesTo(domain)]::map(([,d])=>d)) {\n// \t\t\t\t\t[superDomain]::pinpoint().forEach(::result.add);\n// \t\t\t\t}\n// \t\t\t}\n// \t\t}\n// \t\treturn result;\n// \t})();\n// }\n\n//////////////////////\n",
    "static": true,
    "longname": "src/modules/Module.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 105,
    "kind": "variable",
    "name": "_extends",
    "memberof": "src/modules/Module.js",
    "static": true,
    "longname": "src/modules/Module.js~_extends",
    "access": null,
    "export": false,
    "importPath": "open-physiology-manifest/src/modules/Module.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 106,
    "kind": "variable",
    "name": "$$processedFor",
    "memberof": "src/modules/Module.js",
    "static": true,
    "longname": "src/modules/Module.js~$$processedFor",
    "access": null,
    "export": false,
    "importPath": "open-physiology-manifest/src/modules/Module.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 107,
    "kind": "variable",
    "name": "$$relationshipSpecs",
    "memberof": "src/modules/Module.js",
    "static": true,
    "longname": "src/modules/Module.js~$$relationshipSpecs",
    "access": null,
    "export": false,
    "importPath": "open-physiology-manifest/src/modules/Module.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 108,
    "kind": "variable",
    "name": "$$relevantDomains",
    "memberof": "src/modules/Module.js",
    "static": true,
    "longname": "src/modules/Module.js~$$relevantDomains",
    "access": null,
    "export": false,
    "importPath": "open-physiology-manifest/src/modules/Module.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 109,
    "kind": "class",
    "name": "Environment",
    "memberof": "src/modules/Module.js",
    "static": true,
    "longname": "src/modules/Module.js~Environment",
    "access": null,
    "export": true,
    "importPath": "open-physiology-manifest/src/modules/Module.js",
    "importStyle": "{Environment}",
    "description": "An `Environment` encompasses a group of modules. There should be only one\nper application (though it is recreated for every unit test).\nThe environment is available pretty much everywhere in the manifest code,\nand provides access to all resource classes.",
    "lineNumber": 34,
    "interface": false
  },
  {
    "__docId__": 110,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/modules/Module.js~Environment",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/Module.js~Environment#constructor",
    "access": null,
    "description": "a `Graph` of all entity classes, where the edges represent the 'superclass of' relation;\nit also maps all of the classes by name as a normal js object",
    "lineNumber": 48,
    "params": []
  },
  {
    "__docId__": 111,
    "kind": "method",
    "name": "registerModule",
    "memberof": "src/modules/Module.js~Environment",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/Module.js~Environment#registerModule",
    "access": null,
    "description": "a reference to the Field class",
    "lineNumber": 76,
    "params": [
      {
        "name": "module",
        "types": [
          "*"
        ]
      },
      {
        "name": "dependencies",
        "types": [
          "*"
        ]
      },
      {
        "name": "fn",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 112,
    "kind": "class",
    "name": "Module",
    "memberof": "src/modules/Module.js",
    "static": true,
    "longname": "src/modules/Module.js~Module",
    "access": null,
    "export": true,
    "importPath": "open-physiology-manifest/src/modules/Module.js",
    "importStyle": "Module",
    "description": "A `Module` is a grouping of entity class definitions.",
    "lineNumber": 110,
    "interface": false
  },
  {
    "__docId__": 113,
    "kind": "method",
    "name": "create",
    "memberof": "src/modules/Module.js~Module",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/modules/Module.js~Module.create",
    "access": null,
    "description": "Define a new module (independent of any environment).",
    "lineNumber": 119,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the name of the new module"
      },
      {
        "nullable": null,
        "types": [
          "Array<Module>"
        ],
        "spread": false,
        "optional": false,
        "name": "dependencies",
        "description": "the dependencies of the new module"
      },
      {
        "nullable": null,
        "types": [
          "Function<{[string]: Class}, void>"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": "the function that defines the classes in the module"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function<?Environment>"
      ],
      "spread": false,
      "description": "a function to instantiate this module with either an existing or new environment"
    }
  },
  {
    "__docId__": 114,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/modules/Module.js~Module",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/Module.js~Module#constructor",
    "access": "private",
    "description": null,
    "lineNumber": 134,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 115,
    "kind": "method",
    "name": "RESOURCE",
    "memberof": "src/modules/Module.js~Module",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/Module.js~Module#RESOURCE",
    "access": null,
    "description": "Declare a resource class.",
    "lineNumber": 144,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "the traits of the new class"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "config.name",
        "description": "the name of the new class"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Class"
      ],
      "spread": false,
      "description": "the new `Resource` subclass"
    }
  },
  {
    "__docId__": 116,
    "kind": "method",
    "name": "RELATIONSHIP",
    "memberof": "src/modules/Module.js~Module",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/Module.js~Module#RELATIONSHIP",
    "access": null,
    "description": "Declare a relationship class.",
    "lineNumber": 161,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "the traits of the new class"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "config.name",
        "description": "the name of the new class"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Class"
      ],
      "spread": false,
      "description": "the new `Relationship` subclass"
    }
  },
  {
    "__docId__": 117,
    "kind": "method",
    "name": "basicNormalization",
    "memberof": "src/modules/Module.js~Module",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/Module.js~Module#basicNormalization",
    "access": null,
    "description": "Normalize the aspects of the given entity configuration.",
    "lineNumber": 177,
    "params": [
      {
        "name": "config",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 118,
    "kind": "method",
    "name": "normalizeRelationshipSides",
    "memberof": "src/modules/Module.js~Module",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/Module.js~Module#normalizeRelationshipSides",
    "access": null,
    "description": "Normalize the `1` and `2` keys of the given relationship class.",
    "lineNumber": 246,
    "params": [
      {
        "name": "cls",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 119,
    "kind": "method",
    "name": "resolveRelationshipDomains",
    "memberof": "src/modules/Module.js~Module",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/Module.js~Module#resolveRelationshipDomains",
    "access": null,
    "description": "Register a given a relationship class with the resource classes involved.",
    "lineNumber": 311,
    "params": [
      {
        "name": "cls",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 120,
    "kind": "method",
    "name": "register",
    "memberof": "src/modules/Module.js~Module",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/Module.js~Module#register",
    "access": null,
    "description": "Register an entity class `cls` with the module.\nIn particular, put it in the `classes` graph.",
    "lineNumber": 340,
    "params": [
      {
        "nullable": null,
        "types": [
          "Class"
        ],
        "spread": false,
        "optional": false,
        "name": "cls",
        "description": "the entity class to register"
      }
    ]
  },
  {
    "__docId__": 121,
    "kind": "method",
    "name": "mergeSuperclassFields",
    "memberof": "src/modules/Module.js~Module",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/Module.js~Module#mergeSuperclassFields",
    "access": null,
    "description": "Merge superclass fields into the given class,\nand fields of the given class into its existing subclasses.\n(Since our homebrew class hierarchy can't count on JavaScript\n prototype inheritance.)",
    "lineNumber": 378,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "cls",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 122,
    "kind": "method",
    "name": "mergeSameNameResources",
    "memberof": "src/modules/Module.js~Module",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/Module.js~Module#mergeSameNameResources",
    "access": null,
    "description": "If the same resource is declared more than once,\nintelligently merge their aspects.",
    "lineNumber": 461,
    "params": [
      {
        "nullable": null,
        "types": [
          "Class"
        ],
        "spread": false,
        "optional": false,
        "name": "cls",
        "description": "the resource class to merge with others of the same name"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Class"
      ],
      "spread": false,
      "description": "the class that gets to survive and represent its name (an existing class is prioritized over the new class)"
    }
  },
  {
    "__docId__": 123,
    "kind": "method",
    "name": "mergeSameNameRelationships",
    "memberof": "src/modules/Module.js~Module",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/Module.js~Module#mergeSameNameRelationships",
    "access": null,
    "description": "If the same relationship is declared more than once,\nintelligently merge their aspects.",
    "lineNumber": 505,
    "params": [
      {
        "nullable": null,
        "types": [
          "Class"
        ],
        "spread": false,
        "optional": false,
        "name": "cls",
        "description": "the relationship class to merge with others of the same name"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Class"
      ],
      "spread": false,
      "description": "the class that gets to survive and represent its name (an existing class is prioritized over the new class)"
    }
  },
  {
    "__docId__": 124,
    "kind": "file",
    "name": "src/modules/TypedModule.js",
    "content": "import defaults from 'lodash-bound/defaults';\nimport {\n\tdefineProperty,\n\tdefineProperties\n} from 'bound-native-methods';\nimport {\n\tmapOptionalArray,\n\twrapInArray,\n\tdefinePropertyByValue\n} from 'utilities';\n\nimport Module from './Module.js';\n\n\n/**\n * Typed Modules allow to more easily create related\n * Type, Template and HasType subclasses. For example,\n * to create LyphType and LyphTemplate resources and\n * their HasType relationship from one description.\n * NOTE: The current version of the project creates\n * just the Template subclass, and using just the\n * `Type` class for all types.\n */\nexport default class TypedModule extends Module {\n\t\n\t/**\n\t * Declare a typed resource class, which is a subclass of `Template` and gets special treatment.\n\t * @param {Object} config      - the traits of the new class\n\t * @param {string} config.name - the name of the new class\n\t * @return {Class} the new `Template` subclass\n\t */\n\tTYPED_RESOURCE(config) {\n\t\treturn mapOptionalArray(config, (conf) => {\n\t\t\t\n\t\t\tthis.basicNormalization(conf);\n\t\t\t\n\t\t\tconst superClasses = wrapInArray(conf.extends    || [this.classes.vertexValue('Template')]);\n\t\t\tconst subClasses   = wrapInArray(conf.extendedBy || []);\n\t\t\t\n\t\t\t/* handling properties */\n\t\t\tconf::defaults({\n\t\t\t\tproperties:        {},\n\t\t\t\tpatternProperties: {}\n\t\t\t});\n\t\t\t\n\t\t\t/* Template class */\n\t\t\tconst newTemplateClass = this.RESOURCE({\n\t\t\t\t\n\t\t\t\tname: conf.name,\n\t\t\t\t\n\t\t\t\tabstract: !!conf.abstract,\n\t\t\t\t\n\t\t\t\textends:  superClasses,\n\t\t\t\textendedBy: subClasses,\n\t\t\t\t\n\t\t\t\tsingular: conf.singular,\n\t\t\t\tplural: conf.plural,\n\t\t\t\t\n\t\t\t\ticon: conf.icon,\n\n\t\t\t\tproperties:        conf.properties,\n\t\t\t\tpatternProperties: conf.patternProperties,\n\t\t\t\t\n\t\t\t\tbehavior: conf.behavior\n\t\t\t\t\n\t\t\t});\n\t\t\t\n\t\t\t// TODO: go back to a specific Type class for each Template Class\n\t\t\t// -- for now, all Template subclasses have a reference to the only Type class\n\t\t\tconst Type = this.classes.vertexValue('Type');\n\t\t\tnewTemplateClass::definePropertyByValue('Type', Type);\n\t\t\t\n\t\t\t/* register and return */\n\t\t\treturn newTemplateClass;\n\t\t});\n\n\t}\n\n}\n",
    "static": true,
    "longname": "src/modules/TypedModule.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 125,
    "kind": "class",
    "name": "TypedModule",
    "memberof": "src/modules/TypedModule.js",
    "static": true,
    "longname": "src/modules/TypedModule.js~TypedModule",
    "access": null,
    "export": true,
    "importPath": "open-physiology-manifest/src/modules/TypedModule.js",
    "importStyle": "TypedModule",
    "description": "Typed Modules allow to more easily create related\nType, Template and HasType subclasses. For example,\nto create LyphType and LyphTemplate resources and\ntheir HasType relationship from one description.\nNOTE: The current version of the project creates\njust the Template subclass, and using just the\n`Type` class for all types.",
    "lineNumber": 16,
    "interface": false,
    "extends": [
      "src/modules/Module.js~Module"
    ]
  },
  {
    "__docId__": 126,
    "kind": "method",
    "name": "TYPED_RESOURCE",
    "memberof": "src/modules/TypedModule.js~TypedModule",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/modules/TypedModule.js~TypedModule#TYPED_RESOURCE",
    "access": null,
    "description": "Declare a typed resource class, which is a subclass of `Template` and gets special treatment.",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "the traits of the new class"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "config.name",
        "description": "the name of the new class"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Class"
      ],
      "spread": false,
      "description": "the new `Template` subclass"
    }
  },
  {
    "__docId__": 127,
    "kind": "file",
    "name": "src/modules/canonicalTrees.js",
    "content": "import TypedModule from './TypedModule.js';\n\nimport resources from './resources';\nimport typed     from './typed';\nimport groups    from './groups';\nimport lyphs     from './lyphs';\n\nexport default TypedModule.create('canonicalTrees', [\n\tresources, typed, groups, lyphs\n], (M, {\n\tIsRelatedTo, Template, Resource, Lyph, Node, Has, PullsIntoTypeDefinition\n}) => {\n\t\n\t\n\tconst CanonicalTree = M.TYPED_RESOURCE({////////////////////////////////////\n\t\t\n\t\tname: 'CanonicalTree',\n\t\t\n\t\textends: Template,\n\t\t\n\t\tsingular: \"canonical tree\",\n\t\t\t\t\n\t\ticon: require('./icons/canonicalTree.png'),\n\t\t\n\t});/////////////////////////////////////////////////////////////////////////\n\t\n\tconst CanonicalTreeBranch = M.TYPED_RESOURCE({//////////////////////////////\n\t\t\n\t\tname: 'CanonicalTreeBranch',\n\t\t\n\t\textends: Template,\n\t\t\n\t\tsingular: \"canonical tree branch\",\n\t\tplural:   \"canonical tree branches\",\n\t\t\t\t\n\t\ticon: require('./icons/canonicalTreeBranch.png'),\n\t\t\n\t});/////////////////////////////////////////////////////////////////////////\n\t\n\tconst HasBranch = M.RELATIONSHIP({\n\t\t\n\t\tname: 'HasBranch',\n\t\t\n\t\textends: PullsIntoTypeDefinition,\n\t\t\n\t\tsingular: \"has\",\n\t\tplural:   \"have\",\n\t\t\n\t\t1: [CanonicalTree,       '0..*', { key: 'childBranches' }],\n\t\t2: [CanonicalTreeBranch, '1..1', { key: 'parentTree'    }],\n\t\t\n\t});\n\t\n\tconst BranchesTo = M.RELATIONSHIP({\n\t\t\n\t\tname: 'BranchesTo',\n\t\t\n\t\textends: PullsIntoTypeDefinition,\n\t\t\n\t\tsingular: \"branches to\",\n\t\tplural:   \"branch to\",\n\t\t\n\t\t1: [CanonicalTreeBranch, '1..1', { key: 'childTree'    }],\n\t\t2: [CanonicalTree,       '0..1', { key: 'parentBranch' }],\n\t\t\n\t});\n\t\n\tconst IsConveyedBy = M.RELATIONSHIP({\n\t\t\n\t\tname: 'IsConveyedBy',\n\t\t\n\t\textends: IsRelatedTo,\n\t\t\n\t\tsingular: \"is conveyed by\",\n\t\tplural:   \"are conveyed by\",\n\t\t\n\t\t1: [CanonicalTreeBranch, '0..1', { key: 'conveyingLyphType' }],\n\t\t2: [Lyph.Type,           '0..*', {                          }],\n\t\t\n\t});\n\t\n});\n\n",
    "static": true,
    "longname": "src/modules/canonicalTrees.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 128,
    "kind": "file",
    "name": "src/modules/groups.js",
    "content": "import TypedModule from './TypedModule.js';\n\nimport resources from './resources';\nimport typed     from './typed';\n\n\nexport default TypedModule.create('groups', [\n\tresources, typed\n], (M, {\n\tIsRelatedTo, Template, PullsIntoTypeDefinition\n}) => {\n\t\n\t\n\tconst Group = M.TYPED_RESOURCE({/////////////////////////////////////////\n\t\t\n\t\tname: 'Group',\n\t\t\n\t\textends: Template,\n\t\t\n\t\tsingular: \"group\",\n\t\t\t\t\n\t\ticon: require('./icons/group.png'),\n\t\t\n\t});/////////////////////////////////////////////////////////////////////////////\n\t\n\t\n\tconst IncludesElement = M.RELATIONSHIP({\n\t\t\n\t\tname: 'IncludesElement',\n\t\t\n\t\textends: PullsIntoTypeDefinition,\n\t\t\n\t\tsingular: \"includes\",\n\t\tplural:   \"include\",\n\t\t\n\t\t1: [Group,    '0..*', { key: 'elements' }],\n\t\t2: [Template, '0..*',                    ],\n\t\t\n\t});\n\n\n\n});\n\n",
    "static": true,
    "longname": "src/modules/groups.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 129,
    "kind": "file",
    "name": "src/modules/lyphs.js",
    "content": "import TypedModule from './TypedModule.js';\nimport {normalizeToRange, wrapInArray} from 'utilities';\nimport {\n\tenumArraySchema\n} from '../util/schemas';\n\nimport resources from './resources';\nimport typed     from './typed';\nimport {universalDistanceRange} from \"../util/schemas\";\n\nimport {typedDistributionSchema} from \"../util/schemas\";\n\n\nexport default TypedModule.create('lyphs', [\n\tresources, typed\n], (M, {\n\tResource, IsRelatedTo, Template, PullsIntoTypeDefinition, Has\n}) => {\n\t\n\tconst Material = M.TYPED_RESOURCE({/////////////////////////////////////////\n\t\t\n\t\tname: 'Material',\n\t\t\n\t\textends: Template,\n\t\t\n\t\tsingular: \"material\",\n\t\t\n\t\ticon: require('./icons/material.png'),\n\t\t\n\t});/////////////////////////////////////////////////////////////////////////\n\t\n\t \n\tconst ContainsMaterial = M.RELATIONSHIP({\n\t\t\n\t\tname: 'ContainsMaterial',\n\t\t\n\t\textends: IsRelatedTo,\n\t\t\n\t\tsingular: \"contains\",\n\t\tplural:   \"contain\",\n\t\t\n\t\t1: [Material,      '0..*', { key: 'materials' }],\n\t\t2: [Material.Type, '0..*'                      ],\n\t\t\n\t\tnoCycles: true\n\t\t\n\t});\n\t\n\t\n\tconst Lyph = M.TYPED_RESOURCE({/////////////////////////////////////////////\n\t\t\n\t\tname: 'Lyph',\n\t\t\n\t\textends: Material,\n\t\t\n\t\tsingular: \"lyph\",\n\t\t\n\t\ticon: require('./icons/lyph.png'),\n\t\t\n\t\tproperties: {\n\t\t\t'thickness': { // size in radial dimension\n\t\t\t\t...typedDistributionSchema,\n\t\t\t\tdefault: universalDistanceRange,\n\t\t\t\tisRefinement(a, b) {\n\t\t\t\t\ta = normalizeToRange(a);\n\t\t\t\t\tb = normalizeToRange(b);\n\t\t\t\t\treturn a.min <= b.min && b.max <= a.max;\n\t\t\t\t}\n\t\t\t},\n\t\t\t'length': { // size in longitudinal dimension\n\t\t\t\t...typedDistributionSchema,\n\t\t\t\tdefault: universalDistanceRange,\n\t\t\t\tisRefinement(a, b) {\n\t\t\t\t\ta = normalizeToRange(a);\n\t\t\t\t\tb = normalizeToRange(b);\n\t\t\t\t\treturn a.min <= b.min && b.max <= a.max;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t});/////////////////////////////////////////////////////////////////////////\n\t\n\t\n\tconst HasPart = M.RELATIONSHIP({\n\t\t\n\t\tname: 'HasPart',\n\t\t\n\t\textends: Has,\n\t\t\n\t\t1: [Lyph, '0..*', { key: 'parts' }],\n\t\t2: [Lyph, '0..*',                 ],\n\t\t\n\t\tnoCycles: true,\n\t\t\n\t});\n\t\n\tconst HasLayer = M.RELATIONSHIP({\n\t\t\n\t\tname: 'HasLayer',\n\t\t\n\t\textends: HasPart,\n\t\t\n\t\t1: [Lyph, '0..*', { key: 'layers' }],\n\t\t2: [Lyph, '0..*'                   ],\n\t\t\n\t\tnoCycles: true,\n\t\t\n\t});\n\t\n\tconst HasPatch = M.RELATIONSHIP({\n\t\t\n\t\tname: 'HasPatch',\n\t\t\n\t\textends: HasPart,\n\t\t\n\t\t1: [Lyph, '0..*', { key: 'patches' }],\n\t\t2: [Lyph, '0..*'                    ],\n\t\t\n\t\tnoCycles: true,\n\t\t\n\t});\n\t\n\tconst HasSegment = M.RELATIONSHIP({\n\n\t\tname: 'HasSegment',\n\n\t\textends: HasPatch,\n\n\t\t1: [Lyph, '0..*', { key: 'segments' }],\n\t\t2: [Lyph, '0..*'                     ],\n\t\t\n\t\tnoCycles: true\n\t\t\n\t});\n\t\n\tconst IsLongitudinallyAdjacent = M.RELATIONSHIP({\n\t\t\n\t\tname: 'IsLongitudinallyAdjacent',\n\t\t\n\t\textends: IsRelatedTo,\n\t\t\n\t\tsingular: \"is longitudinally adjacent\",\n\t\tplural:  \"are longitudinally adjacent\",\n\t\t\n\t\t1: [Lyph, '0..*'],\n\t\t2: [Lyph, '0..*'],\n\t\t\n\t\tnoCycles: true\n\t\t\n\t});\n\t\n\tconst IsRadiallyAdjacent = M.RELATIONSHIP({\n\t\t\n\t\tname: 'IsRadiallyAdjacent',\n\t\t\n\t\textends: IsRelatedTo,\n\t\t\n\t\tsingular: \"is radially adjacent\",\n\t\tplural:  \"are radially adjacent\",\n\t\t\n\t\t1: [Lyph, '0..*'],\n\t\t2: [Lyph, '0..*'],\n\t\t\n\t\tnoCycles: true\n\t\t\n\t});\n\t\n\tconst Border = M.TYPED_RESOURCE({///////////////////////////////////////////\n\t\t\n\t\tname: 'Border',\n\t\t\n\t\textends: Template,\n\t\t\n\t\tsingular: \"border\",\n\t\t\t\t\n\t\ticon: require('./icons/border.png'),\n\t\t\n\t\tproperties: {\n\t\t\tnature: {\n\t\t\t\t...enumArraySchema('open', 'closed'),\n\t\t\t\tdefault: ['open', 'closed'],\n\t\t\t\tisRefinement(a, b) {\n\t\t\t\t\ta = new Set(a ? wrapInArray(a) : []);\n\t\t\t\t\tb = new Set(b ? wrapInArray(b) : []);\n\t\t\t\t\treturn !(b.has('open'  ) && !a.has('open'  )) &&\n\t\t\t\t\t       !(b.has('closed') && !a.has('closed'));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t});/////////////////////////////////////////////////////////////////////////\n\t\n\tconst borderRel = (name, Superclass, c1, c2, key, singular, flags = {}) => M.RELATIONSHIP({\n\t\t \n\t\tname: name,\n\t\t\n\t\textends: Superclass,\n\t\t\n\t\tsingular: `has ${singular}`,\n\t\tplural:   `have ${singular}`,\n\t\n\t\t...flags,\n\t\t\n\t\t1: [Lyph,   c1, { expand: true, key }],\n\t\t2: [Border, c2, {                   }],\n\t\t\n\t\t// Two lyphs never share the same border, formally speaking.\n\t\t// The degree to which two borders overlap can be controlled through\n\t\t// the existence of shared nodes on those borders.\n\t\t// (1) Simply a single shared node between two borders indicates that they overlap anywhere.\n\t\t// (2) If a node is on, e.g., the minus and top borders, it is in the corner, with all meaning it implies.\n\t\t// (3) In the strictest case, two nodes could be used to connect four corners and perfectly align two lyphs.\n\t\t\n\t\t// TODO: CONSTRAINT: Outer border                 always has `nature: 'closed'`.\n\t\t//     :             Inner border of position = 0 always has `nature: 'open'  `.\n\t\t//     :             Inner border of position > 0 always has `nature: 'closed'`.\n\t\t//     : Plus border and minus border can be either.\n\t\t\n\t\t// TODO: CONSTRAINT - a lyph can only have a non-infinite thickness\n\t\t//     :              if it has two longitudinal borders\n\t\t\n\t\t// TODO: CONSTRAINT - a lyph can only have a non-infinite length\n\t\t//     :              if it has two radial borders\n\t\n\t});\n\t\n\t/* 4 borders maximum; at least two longitudinal borders; optionally one or two radial borders */\n\tconst HasBorder             = borderRel('HasBorder',             Has,       '0..4', '1..1', 'borders',             'border', { abstract: true });\n\tconst HasLongitudinalBorder = borderRel('HasLongitudinalBorder', HasBorder, '2..2', '0..1', 'longitudinalBorders', 'longitudinal border');\n\tconst HasRadialBorder       = borderRel('HasRadialBorder',       HasBorder, '0..2', '0..1', 'radialBorders',       'radial border');\n\t\n\t/* one of the longitudinal borders can be an axis */\n\tconst HasAxis = borderRel('HasAxis', HasLongitudinalBorder, '0..1', '0..1', 'axis', 'has axis');\n\t\n\t//// //// //// //// ////\n\t// We're using a cylindrical coordinate system:\n\t// + https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n\t// + longitudinal dimension = 'length' dimension\n\t// +              borders   = inner & outer borders\n\t// + radial dimension       = 'thickness' dimension\n\t// +        borders         = minus & plus borders\n\t//// //// //// //// ////\n\t\n\t\n\tconst CoalescenceScenario = M.TYPED_RESOURCE({//////////////////////////////\n\t\t\n\t\tname: 'CoalescenceScenario',\n\t\t\n\t\textends: Template,\n\t\t\n\t\tsingular: \"coalescence scenario\",\n\t\t\t\t\n\t\ticon: require('./icons/canonicalTree.png'),\n\t\t\n\t});/////////////////////////////////////////////////////////////////////////\n\t\n\t\n\tconst JoinsLyph = M.RELATIONSHIP({\n\t\t\n\t\tname: 'JoinsLyph',\n\t\t\n\t\textends: PullsIntoTypeDefinition,\n\t\t\n\t\tsingular: \"joins\",\n\t\tplural:   \"join\",\n\t\t\n\t\t1: [CoalescenceScenario, '2..2', { key: 'lyphs' }],\n\t\t2: [Lyph,                '0..*'                  ],\n\t\t\n\t\t// cardinality max=2, because we're only working in two dimensions right now\n\t\t\n\t\t// TODO: CONSTRAINT: both joint lyphs of a given scenario need to\n\t\t//     :             use the same Lyph entity as their outer layer\n\t\t// TODO: CONSTRAINT: cardinality = 1 on both lyphs and their layers\n\t\t\n\t});\n\t\n\tconst Coalescence = M.RESOURCE({////////////////////////////////////////////\n\t\t\n\t\tname: 'Coalescence',\n\t\t\n\t\textends: Resource,\n\t\t\n\t\tsingular: \"coalescence\",\n\t\t\t\t\n\t\ticon: require('./icons/coalescence.png'),\n\t\t\n\t\t// coalescence between two or more lyph templates means\n\t\t// that at least one lyph from each participating lyph template\n\t\t// shares its outer layer with the other participating lyphs\n\t\t\n\t});/////////////////////////////////////////////////////////////////////////\n\t\n\t\n\tconst Coalesces = M.RELATIONSHIP({\n\t\t\n\t\tname: 'Coalesces',\n\t\t\n\t\textends: IsRelatedTo,\n\t\t\n\t\tsingular: \"coalesces\",\n\t\tplural:   \"coalesce\",\n\t\t\n\t\t1: [Coalescence, '2..2', { key: 'lyphs'        }],\n\t\t2: [Lyph,        '0..*', { key: 'coalescences' }],\n\t\t\n\t\t// cardinality max=2, because we're only working in two dimensions right now\n\t\t\t\t\n\t});\n\t\n\t\n\tconst CoalescesLike = M.RELATIONSHIP({\n\t\t\n\t\tname: 'CoalescesLike',\n\t\t\n\t\textends: IsRelatedTo,\n\t\t\n\t\tsingular: \"coalesces like\",\n\t\tplural:   \"coalesce like\",\n\t\t\n\t\t1: [Coalescence,         '0..*', { key: 'scenarios' }],\n\t\t2: [CoalescenceScenario, '0..*',                     ],\n\t\t\n\t\t// TODO: CONSTRAINT: the two lyphs for every scenario each have to be\n\t\t//     :             a refinement of their respective lyphs in the coalescence\n\t\t\n\t});\n\t\n\t\n\tconst Node = M.TYPED_RESOURCE({/////////////////////////////////////////////\n\t\t\n\t\tname: 'Node',\n\t\t\n\t\textends: Template,\n\t\t\n\t\tsingular: \"node\",\n\t\t\t\t\n\t\ticon: require('./icons/node.png'),\n\t\t\n\t});/////////////////////////////////////////////////////////////////////////\n\t\n\t\n\tconst NodeLocation = M.TYPED_RESOURCE({/////////////////////////////////////\n\t\t\n\t\tname: 'NodeLocation',\n\t\t\n\t\tabstract: true,\n\t\t\n\t\textends:    Template,\n\t\textendedBy: [Lyph, Border],\n\t\t\n\t\tsingular: \"node location\",\n\t\t\n\t});/////////////////////////////////////////////////////////////////////////\n\t\n\t\n\tconst ContainsNode = M.RELATIONSHIP({\n\t\t\n\t\tname: 'ContainsNode',\n\t\t\n\t\tsingular: \"contains\",\n\t\tplural:   \"contain\",\n\t\t\n\t\textends: PullsIntoTypeDefinition,\n\t\t\n\t\t1: [NodeLocation, '0..*', { key: 'nodes'     }],\n\t\t2: [Node,         '0..*', { key: 'locations' }],\n\t\t\n\t});\n\n});\n\n",
    "static": true,
    "longname": "src/modules/lyphs.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 130,
    "kind": "variable",
    "name": "_extends",
    "memberof": "src/modules/lyphs.js",
    "static": true,
    "longname": "src/modules/lyphs.js~_extends",
    "access": null,
    "export": false,
    "importPath": "open-physiology-manifest/src/modules/lyphs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 131,
    "kind": "file",
    "name": "src/modules/measurables.js",
    "content": "import TypedModule     from './TypedModule.js';\n\nimport resources from './resources';\nimport typed     from './typed';\nimport lyphs     from './lyphs';\nimport processes from './processes';\nimport {dimensionalitySchema} from \"../util/schemas\";\n\n\nexport default TypedModule.create('measurables', [\n\tresources, typed, lyphs, processes\n], (M, {\n\tResource, IsRelatedTo, Template,\n\tLyph, Material, Border, Node,\n\tProcess, Has, PullsIntoTypeDefinition\n}) => {\n\t\n\t\n\tconst Measurable = M.TYPED_RESOURCE({///////////////////////////////////////\n\t\t\n\t\tname: 'Measurable',\n\t\t\n\t\textends: Template,\n\t\t\n\t\tsingular: \"measurable\",\n\t\t\t\t\n\t\ticon: require('./icons/measurable.png'),\n\t\t\n\t\tproperties: {\n\t\t\t'quality': {\n\t\t\t\ttype: 'string',\n\t\t\t\tisRefinement(a, b) {\n\t\t\t\t\treturn !a || a === b;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t});/////////////////////////////////////////////////////////////////////////\n\t\n\t  \n\tconst MeasuresMaterial = M.RELATIONSHIP({\n\t\t\n\t\tname: 'MeasuresMaterial',\n\t\t\n\t\textends: PullsIntoTypeDefinition,\n\t\t\n\t\tsingular: \"measures\",\n\t\tplural:   \"measure\",\n\t\t\n\t\t1: [Measurable,    '0..*', { key: 'materials' }],\n\t\t2: [Material.Type, '0..*',                     ]\n\t\t\n\t});\n\t\n\t\n\tconst MeasurableLocation = M.TYPED_RESOURCE({///////////////////////////////\n\t\t\n\t\tname: 'MeasurableLocation',\n\t\t\n\t\tabstract: true,\n\t\t\n\t\textends: Template,\n\t\t\n\t\textendedBy: [Lyph, Border, Node, Process],\n\t\t\n\t\tsingular: \"measurable location\"\n\t\t\n\t});/////////////////////////////////////////////////////////////////////////\n\t\n\t\n\tconst HasMeasurable = M.RELATIONSHIP({\n\t\t\n\t\tname: 'HasMeasurable',\n\t\t\n\t\textends: Has,\n\t\t\n\t\tsingular: \"has\",\n\t\tplural: \"have\",\n\t\t\n\t\t1: [MeasurableLocation, '0..*', { key: 'measurables' }],\n\t\t2: [Measurable,         '0..*', { key: 'locations'   }],\n\t\t\n\t\t// TODO: maybe... auto-create classes for the inverse of relationships,\n\t\t//     : so that HasMeasurable_inverse can extend PullsIntoTypeDefinition\n\t\t\n\t});\n\t\n\t\n\tconst Causality = M.TYPED_RESOURCE({////////////////////////////////////////\n\t\t\n\t\tname: 'Causality',\n\t\t\n\t\textends: Template,\n\t\t\n\t\tsingular: \"causality\",\n\t\tplural:   \"causalities\",\n\t\t\t\t\n\t\ticon: require('./icons/causality.png'),\n\t\t\n\t});/////////////////////////////////////////////////////////////////////////\n\t\n\t\n\tconst IsCauseOf = M.RELATIONSHIP({\n\t\t\n\t\tname: 'IsCauseOf',\n\t\t\n\t\textends: PullsIntoTypeDefinition,\n\t\t\n\t\tsingular: \"is cause of\",\n\t\tplural: \"are cause of\",\n\t\t\n\t\t1: [Measurable, '0..*', { key: 'effects' }],\n\t\t2: [Causality,  '1..1', { key: 'cause'   }],\n\t\t\n\t});\n\t\n\tconst HasEffect = M.RELATIONSHIP({\n\t\t\n\t\tname: 'HasEffect',\n\t\t\n\t\textends: PullsIntoTypeDefinition,\n\t\t\n\t\tsingular: \"has effect\",\n\t\tplural:   \"have effect\",\n\t\t\n\t\t1: [Causality,  '1..1', { key: 'effect' }],\n\t\t2: [Measurable, '0..*', { key: 'causes' }],\n\t\t\n\t});\n\n\n});\n\n",
    "static": true,
    "longname": "src/modules/measurables.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 132,
    "kind": "file",
    "name": "src/modules/processes.js",
    "content": "import {wrapInArray} from 'utilities';\n\nimport TypedModule       from './TypedModule.js';\nimport {enumArraySchema} from '../util/schemas.js';\nimport resources         from './resources.js';\nimport typed             from './typed.js';\nimport lyphs             from './lyphs.js';\n\n\nexport default TypedModule.create('processes', [\n\tresources, typed, lyphs\n], (M, {\n\tTemplate, Material, Lyph, Node,\n\tHas, PullsIntoTypeDefinition\n}) => {\n\t\n\t\n\tconst Process = M.TYPED_RESOURCE({//////////////////////////////////////////\n\t\t\n\t\tname: 'Process',\n\t\t\n\t\textends: Template,\n\t\t\n\t\tsingular: \"process\",\n\t\tplural:   \"processes\",\n\t\t\t\t\n\t\ticon: require('./icons/process.png'),\n\t\t\n\t\tproperties: {\n\t\t\t'transportPhenomenon': {\n\t\t\t\t...enumArraySchema('advection', 'diffusion'),\n\t\t\t\tdefault: ['advection', 'diffusion'],\n\t\t\t\tisRefinement(a, b) {\n\t\t\t\t\ta = new Set(a ? wrapInArray(a) : []);\n\t\t\t\t\tb = new Set(b ? wrapInArray(b) : []);\n\t\t\t\t\treturn !(b.has('advection') && !a.has('advection')) &&\n\t\t\t\t\t       !(b.has('diffusion') && !a.has('diffusion'));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t});/////////////////////////////////////////////////////////////////////////\n\t\n\t\n\tconst IsSourceFor = M.RELATIONSHIP({\n\t\t\n\t\tname: 'IsSourceFor',\n\t\t\n\t\textends: PullsIntoTypeDefinition,\n\t\t\n\t\tsingular: \"is source for\",\n\t\tplural:   \"are source for\",\n\t\t\n\t\t1: [Node,    '0..*', { key: 'outgoingProcesses' }],\n\t\t2: [Process, '1..1', { key: 'source'            }],\n\t\t\n\t});\n\t\n\tconst HasTarget = M.RELATIONSHIP({\n\t\t\n\t\tname: 'HasTarget',\n\t\t\n\t\textends: PullsIntoTypeDefinition,\n\t\t\n\t\tsingular: \"has target\",\n\t\tplural:   \"have target\",\n\t\t\n\t\t1: [Process, '1..1', { key: 'target'            }],\n\t\t2: [Node,    '0..*', { key: 'incomingProcesses' }],\n\t\t\n\t});\n\t\n\t\n\tconst ConveysProcess = M.RELATIONSHIP({\n\t\t\n\t\tname: 'ConveysProcess',\n\t\t\n\t\textends: Has,\n\t\t\n\t\tsingular: \"conveys\",\n\t\tplural: \"convey\",\n\t\t\n\t\t1: [Lyph,    '0..*', { key: 'processes'     }],\n\t\t2: [Process, '0..*', { key: 'conveyingLyph' }],\n\t\t\n\t});\n\t\n\t\n\tconst TransportsMaterial = M.RELATIONSHIP({\n\t\t\n\t\tname: 'TransportsMaterial',\n\t\t\n\t\textends: Has,\n\t\t\n\t\tsingular: \"transports\",\n\t\tplural: \"transport\",\n\t\t\n\t\t1: [Process,       '0..*', { key: 'materials' }],\n\t\t2: [Material.Type, '0..*',                     ],\n\t\t\n\t});\n\t\n\tconst HasSegment = M.RELATIONSHIP({\n\t\t\n\t\tname: 'HasSegment',\n\t\t\n\t\textends: Has,\n\t\t\n\t\tsingular: \"has segment\",\n\t\tplural:   \"have segment\",\n\t\t\n\t\t1: [Process, '0..*', { key: 'segments' }],\n\t\t2: [Process, '0..*',                    ],\n\t\t\n\t});\n\t\n\t\n\tconst HasProcessChannel = M.RELATIONSHIP({\n\t\t\n\t\tname: 'HasProcessChannel',\n\t\t\n\t\textends: Has,\n\t\t\n\t\tsingular: \"has channel\",\n\t\tplural:   \"have channel\",\n\t\t\n\t\t1: [Process, '0..*', { key: 'channels' }],\n\t\t2: [Process, '0..*',                    ],\n\t\t\n\t});\n\t\n\t\n\tconst HasNodeChannel = M.RELATIONSHIP({\n\t\t\n\t\tname: 'HasNodeChannel',\n\t\t\n\t\textends: Has,\n\t\t\n\t\tsingular: \"has channel\",\n\t\tplural:   \"have channel\",\n\t\t\n\t\t1: [Node, '0..*', { key: 'channels' }],\n\t\t2: [Node, '0..*',                    ],\n\t\t\n\t});\n\t\n\t\n});\n\n",
    "static": true,
    "longname": "src/modules/processes.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 133,
    "kind": "variable",
    "name": "_extends",
    "memberof": "src/modules/processes.js",
    "static": true,
    "longname": "src/modules/processes.js~_extends",
    "access": null,
    "export": false,
    "importPath": "open-physiology-manifest/src/modules/processes.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 134,
    "kind": "file",
    "name": "src/modules/research.js",
    "content": "import Module from './Module.js';\n\nimport resources   from './resources';\nimport measurables from './measurables';\n\n\nexport default Module.create('research', [\n\tresources, measurables\n], (M, {\n\tResource, IsRelatedTo, Measurable\n}) => {\n\t \n\t\n\tconst Correlation = M.RESOURCE({////////////////////////////////////////////\n\t\t\n\t\tname: 'Correlation',\n\t\t\n\t\textends: Resource,\n\t\t\n\t\tsingular: \"correlation\",\n\t\t\t\t\n\t\ticon: require('./icons/correlation.png'),\n\t\t\n\t\tproperties: {\n\t\t\t'comment': { type: 'string' }\n\t\t}\n\t\t\n\t});/////////////////////////////////////////////////////////////////////////\n\t\n\t\n\tconst InvolvesMeasurable = M.RELATIONSHIP({\n\t\t\n\t\tname: 'InvolvesMeasurable',\n\t\t\n\t\textends: IsRelatedTo,\n\t\t\n\t\tsingular: \"involves\",\n\t\tplural:   \"involve\",\n\t\t\n\t\t1: [Correlation, '0..*', { key: 'measurables' }],\n\t\t2: [Measurable,  '0..*',                       ],\n\t\t\n\t});\n\t\n\t\n\tconst ClinicalIndex= M.RESOURCE({///////////////////////////////////////////\n\t\t\n\t\tname: 'ClinicalIndex',\n\t\t\n\t\textends: Resource,\n\t\t\n\t\tsingular: \"clinical index\",\n\t\tplural:   \"clinical indices\",\n\t\t\t\t\n\t\ticon: require('./icons/clinicalIndex.png'),\n\t\t\n\t});/////////////////////////////////////////////////////////////////////////\n\t\n\t\n\tconst EncompassesClinicalIndex = M.RELATIONSHIP({\n\t\t\n\t\tname: 'EncompassesClinicalIndex',\n\t\t\n\t\textends: IsRelatedTo,\n\t\t\n\t\tsingular: \"encompasses\",\n\t\tplural: \"encompass\",\n\t\t\n\t\t1: [ClinicalIndex, '0..*', { key: 'children' }],\n\t\t2: [ClinicalIndex, '0..1', { key: 'parent'   }],\n\t\t\n\t\tnoCycles: true,\n\t\t\n\t});\n\t\n\t\n\tconst InvolvesClinicalIndex = M.RELATIONSHIP({\n\t\t\n\t\tname: 'InvolvesClinicalIndex',\n\t\t\n\t\textends: IsRelatedTo,\n\t\t\n\t\tsingular: \"involves\",\n\t\tplural: \"involve\",\n\t\t\n\t\t1: [Correlation,   '0..*', { key: 'clinicalIndices' }],\n\t\t2: [ClinicalIndex, '0..*',                           ],\n\t\t\n\t});\n\t\n\t\n\tconst Publication = M.RESOURCE({////////////////////////////////////////////\n\t\t\n\t\tname: 'Publication',\n\t\t\n\t\textends: Resource,\n\t\t\n\t\tsingular: \"publication\",\n\t\t\t\t\n\t\ticon: require('./icons/publication.png'),\n\t\t\n\t});/////////////////////////////////////////////////////////////////////////\n\t\n\t\n\tconst InvolvesPublication = M.RELATIONSHIP({\n\t\t\n\t\tname: 'InvolvesPublication',\n\t\t\n\t\textends: IsRelatedTo,\n\t\t\n\t\tsingular: \"involves\",\n\t\tplural: \"involve\",\n\t\t\n\t\t1: [Correlation, '0..1', { key: 'publication'  }],\n\t\t2: [Publication, '0..*', { key: 'correlations' }],\n\t\t\n\t});\n\t\n\t\n});\n\n",
    "static": true,
    "longname": "src/modules/research.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 135,
    "kind": "file",
    "name": "src/modules/resources.js",
    "content": "import {idSchema, uriSchema, identifierSchema} from '../util/schemas';\nimport Module                                  from './Module';\n\n\nexport default Module.create('resources', [], (M) => {\n\t\n\t\n\tconst Resource = M.RESOURCE({/////////////////////////////////////////////////////////////////\n\t\t\n\t\tname: 'Resource',\n\t\t\n\t\tabstract: true,\n\t\t\n\t\tsingular: \"resource\",\n\t\t\n\t\ticon: require('./icons/resource.png'),\n\t\t\n\t\tproperties: {\n\t\t\t'id':    { ...idSchema,         readonly: true },\n\t\t\t'class': { ...identifierSchema, readonly: true },\n\t\t\t'name':  { type: 'string' }\n\t\t}\n\t\t\n\t});//////////////////////////////////////////////////////////////////////////\n\t\n\t\n\tconst IsRelatedTo = M.RELATIONSHIP({\n\t\t\n\t\tname: 'IsRelatedTo',\n\t\t\n\t\tabstract: true,\n\t\t\n\t\tsingular: \"is related to\",\n\t\tplural: \"are related to\",\n\t\t\n\t\t1: [Resource, '0..*'],\n\t\t2: [Resource, '0..*']\n\t\t\n\t});\n\t\n\t\n\tconst ExternalResource = M.RESOURCE({///////////////////////////////////////\n\t\t\n\t\tname: 'ExternalResource',\n\t\t\n\t\textends: Resource,\n\t\t\n\t\tsingular: \"external resource\",\n\t\t\n\t\ticon: require('./icons/externalResource.png'),\n\t\t\n\t\tproperties: {\n\t\t\t'uri':  { ...uriSchema   },\n\t\t\t'type': { type: 'string' } // \"fma\" or \"cocomac\", etc.\n\t\t}\n\t\t\n\t});/////////////////////////////////////////////////////////////////////////\n\t\n\tconst CorrespondsTo = M.RELATIONSHIP({\n\t\t\n\t\tname: 'CorrespondsTo',\n\t\t\n\t\textends: IsRelatedTo,\n\t\t\n\t\tsingular: \"corresponds to\",\n\t\tplural: \"correspond to\",\n\t\t\n\t\t1: [Resource,         '0..*', { key: 'externals' }],\n\t\t2: [ExternalResource, '0..*', { key: 'locals'    }],\n\t\t\n\t});\n\t\n\t\n});\n",
    "static": true,
    "longname": "src/modules/resources.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 136,
    "kind": "variable",
    "name": "_extends",
    "memberof": "src/modules/resources.js",
    "static": true,
    "longname": "src/modules/resources.js~_extends",
    "access": null,
    "export": false,
    "importPath": "open-physiology-manifest/src/modules/resources.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 137,
    "kind": "file",
    "name": "src/modules/typed.js",
    "content": "import {definePropertyByValue}   from 'utilities';\n\nimport Module                    from './Module.js';\nimport resources                 from './resources.js';\nimport {typedDistributionSchema} from '../util/schemas.js';\n\n\nexport default Module.create('typed', [\n\tresources\n], (M, {\n\tResource, IsRelatedTo\n}) => {\n\t\n\t\n\tconst Type = M.RESOURCE({///////////////////////////////////////////////////\n\t\t\n\t\tname: 'Type',\n\t\t\n\t\textends: Resource,\n\t\t\n\t\tsingular: \"type\",\n\t\t\n\t\ticon: require('./icons/type.png'),\n\t\t\n\t});/////////////////////////////////////////////////////////////////////////\n\t\n\t\n\tconst IsSubtypeOf = M.RELATIONSHIP({\n\t\t\n\t\tname: 'IsSubtypeOf',\n\t\t\n\t\textends: IsRelatedTo,\n\t\t\n\t\tsingular: \"is subtype of\",\n\t\tplural:   \"are subtype of\",\n\t\t\n\t\t1: [Type, '0..*', { key: 'subtypes'   }],\n\t\t2: [Type, '0..*', { key: 'supertypes' }],\n\t\t\n\t\tnoCycles: true\n\t\t\n\t});\n\t\n\t\n\tconst Template = M.RESOURCE({///////////////////////////////////////////////\n\t\t\n\t\tname: 'Template',\n\t\t\n\t\tabstract: true,\n\t\t\n\t\textends: Resource,\n\t\t\n\t\tsingular: \"template\",\n\n\t\tproperties: {\n\t\t\t'cardinalityBase': {\n\t\t\t\t...typedDistributionSchema,\n\t\t\t\tdefault: 1\n\t\t\t},\n\t\t\t'species': {\n\t\t\t\ttype: 'string',\n\t\t\t\tisRefinement(a, b) {\n\t\t\t\t\treturn !a || a === b;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t});/////////////////////////////////////////////////////////////////////////\n\t\n\tTemplate::definePropertyByValue('Type',     Type    );\n\tType    ::definePropertyByValue('Template', Template);\n\t\n\t\n\tconst HasCardinalityMultipliedByThatOf = M.RELATIONSHIP({\n\t\t\n\t\tname: 'HasCardinalityMultipliedByThatOf',\n\t\t\n\t\textends: IsRelatedTo,\n\t\t\n\t\tsingular: \"has cardinality multiplied by that of\",\n\t\tplural:   \"have cardinality multiplied by that of\",\n\t\t\n\t\t1: [Template, '0..*', { key: 'cardinalityMultipliers' }],\n\t\t2: [Template, '0..*',                                  ],\n\t\t\n\t\tnoCycles: true\n\t\t\n\t});\n\t\n\t\n\tconst HasType = M.RELATIONSHIP({\n\t\t\n\t\tname: 'HasType',\n\t\t\n\t\textends: IsRelatedTo,\n\t\t\n\t\tsingular: \"has type\",\n\t\tplural:   \"have type\",\n\t\t\n\t\t1: [Template, '0..*', { key: 'types' }],\n\t\t2: [Type,     '0..*',                 ]\n\t\t\n\t});\n\t\n\t \n\tconst DefinesType = M.RELATIONSHIP({\n\t\t\n\t\tname: 'DefinesType',\n\t\t\n\t\textends: HasType,\n\t\t\n\t\tsingular: \"defines\",\n\t\tplural:   \"define\",\n\t\t\n\t\t1: [Template, '0..1', { key: 'definedType' }],\n\t\t2: [Type,     '1..1', { key: 'definition'  }]\n\t\t\n\t});\n\t\n\t\n\tconst PullsIntoTypeDefinition = M.RELATIONSHIP({\n\t\t\n\t\tname: 'PullsIntoTypeDefinition',\n\t\t\n\t\tabstract: true,\n\t\t\n\t\textends: IsRelatedTo,\n\t\t\n\t\tsingular: \"pulls into type definition\",\n\t\tplural:   \"pull into type definition\",\n\t\t\n\t\t1: [Template, '0..*'],\n\t\t2: [Template, '0..*']\n\t\t\n\t});\n\t\n\t\n\tconst Has = M.RELATIONSHIP({\n\t\t\n\t\tname: 'Has',\n\t\t\n\t\tabstract: true,\n\t\t\n\t\textends: PullsIntoTypeDefinition,\n\t\t\n\t\tsingular: \"has\",\n\t\tplural:   \"have\",\n\t\t\n\t\t1: [Template, '0..*', { key: 'children' }],\n\t\t2: [Template, '0..*', { key: 'parents'  }],\n\t\t\n\t\tnoCycles: true\n\t\t\n\t});\n\t\n\t\n});\n",
    "static": true,
    "longname": "src/modules/typed.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 138,
    "kind": "variable",
    "name": "_extends",
    "memberof": "src/modules/typed.js",
    "static": true,
    "longname": "src/modules/typed.js~_extends",
    "access": null,
    "export": false,
    "importPath": "open-physiology-manifest/src/modules/typed.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 139,
    "kind": "file",
    "name": "src/scripts/produce-grouped-descriptions.js",
    "content": "import M from '../index';\n\nimport padEnd   from 'lodash-bound/padEnd';\nimport entries from 'lodash-bound/entries';\nimport size     from 'lodash-bound/size';\n\n////////////////////////////////////////////////////////////////////////////////\n\nlet output = \"\";\nconst o = (...t) => {\n\tfor (let t1 of t) {\n\t\toutput += t1;\n\t}\n};\nfor (let [,cls] of M.classes) {\n\tif (cls.isResource) {\n\t\tlet fields = [];\n\t\tfields.largestKeySize = 0;\n\t\t\n\t\t/* properties */\n\t\tfor (let [key, desc] of cls.properties::entries()) {\n\t\t\t\n\t\t\tfields.largestKeySize = Math.max(key.length, fields.largestKeySize);\n\t\t\tlet entry = { key };\n\t\t\tfields.push(entry);\n\t\t\t\n\t\t\tif (typeof desc.value !== 'undefined') {\n\t\t\t\tentry.op = '=';\n\t\t\t\tentry.desc = `${JSON.stringify(desc.value)}`;\n\t\t\t} else {\n\t\t\t\tentry.op = ':';\n\t\t\t\tentry.desc = `${JSON.stringify(desc)}`;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t/* relationships */\n\t\tfor (let [key, desc] of (cls.relationships || {})::entries()) {\n\t\t\t\n\t\t\tfields.largestKeySize = Math.max(key.length, fields.largestKeySize);\n\t\t\tlet entry = { key, op: ':' };\n\t\t\tfields.push(entry);\n\t\t\t\n\t\t\tlet cardinality = (desc) => stringifyCardinality(desc.cardinality, {abbreviate: true});\n\t\t\tlet arrow = (desc === desc.relationshipClass[1] ? '-->' : '<--');\n\t\t\t\n\t\t\tentry.desc = `(${cardinality(desc.codomain)})${arrow}(${cardinality(desc)})  ${desc.codomain.resourceClass.name}`;\n\t\t\t\n\t\t\tif (desc.options.anchors  ) { entry.desc += ' [anchors]'                   }\n\t\t\tif (desc.options.sustains ) { entry.desc += ' [sustains]'                  }\n\t\t\tif (desc.options.covariant) { entry.desc += ' [covariant]'                 }\n\t\t\tif (desc.shortcutKey      ) { entry.desc += ` [key='${desc.shortcutKey}']` }\n\t\t\tif (desc.properties && desc.properties::size() > 0) {\n\t\t\t\tentry.sub = [];\n\t\t\t\tentry.sub.largestKeySize = 0;\n\t\t\t\t\n\t\t\t\tfor (let [pKey, pDesc] of desc.properties::entries()) {\n\t\t\t\t\t\n\t\t\t\t\tentry.sub.largestKeySize = Math.max(pKey.length, entry.sub.largestKeySize);\n\t\t\t\t\tlet sub = { key: pKey };\n\t\t\t\t\tentry.sub.push(sub);\n\t\t\t\t\t\n\t\t\t\t\tif (typeof pDesc.value !== 'undefined') {\n\t\t\t\t\t\tsub.op = '=';\n\t\t\t\t\t\tsub.desc = `${JSON.stringify(pDesc.value)}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsub.op = ':';\n\t\t\t\t\t\tsub.desc = `${JSON.stringify(pDesc)}`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* generating the output */\n\t\to('========================================\\n');\n\t\to(cls.name);\n\t\tif (cls.abstract) { o(' [abstract]') }\n\t\tlet aClassesIn = [...M.classes.verticesTo(cls.name)].map(pair=>pair[1]);\n\t\tif (aClassesIn.length > 0) { o(` [extends ${aClassesIn.map(c=>c.name).join(', ')}]`) }\n\t\to('\\n');\n\t\to('----------------------------------------\\n');\n\t\tfor (let entry of fields || []) {\n\t\t\tentry.key = entry.key::padEnd(fields.largestKeySize);\n\t\t\to(entry.key, ' ', entry.op, '  ', entry.desc, ' ', '\\n');\n\t\t\tfor (let sub of entry.sub || []) {\n\t\t\t\tsub.key = sub.key::padEnd(entry.sub.largestKeySize);\n\t\t\t\to(''::padEnd(fields.largestKeySize+4), sub.key, ' ', sub.op, '  ', sub.desc, '\\n');\n\t\t\t}\n\t\t}\n\t\to('\\n');\n\t\t\n\t\t\n\t}\n}\n\n\nimport fs from 'fs';\nimport {stringifyCardinality} from \"../util/misc\";\nfs.writeFile('grouped-descriptions.txt', output, (err) => {\n\tif(err) { return console.log(err) }\n\tconsole.log(\"File saved: grouped-descriptions.txt\");\n});\n",
    "static": true,
    "longname": "src/scripts/produce-grouped-descriptions.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 140,
    "kind": "variable",
    "name": "output",
    "memberof": "src/scripts/produce-grouped-descriptions.js",
    "static": true,
    "longname": "src/scripts/produce-grouped-descriptions.js~output",
    "access": null,
    "export": false,
    "importPath": "open-physiology-manifest/src/scripts/produce-grouped-descriptions.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 141,
    "kind": "function",
    "name": "o",
    "memberof": "src/scripts/produce-grouped-descriptions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/scripts/produce-grouped-descriptions.js~o",
    "access": null,
    "export": false,
    "importPath": "open-physiology-manifest/src/scripts/produce-grouped-descriptions.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "t",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ]
  },
  {
    "__docId__": 142,
    "kind": "file",
    "name": "src/util/ObservableSet.js",
    "content": "import {BehaviorSubject, Subject, Observable} from '../libs/rxjs.js';\nimport assert                                 from 'power-assert';\nimport {humanMsg}                             from 'utilities';\nimport {constraint}                           from './misc.js';\n\ntype Iterator<T> = {\n\tnext: () => ({\n\t\tdone: boolean,\n\t\tvalue: T\n\t})\n}\ntype Iterable<T> = {\n\t// [Symbol.iterator: Symbol]: () => Iterator<T> // Flow does not accept this\n}\n\nconst $$set               = Symbol('$$set');\nconst $$addSubject        = Symbol('$$addSubject');\nconst $$deleteSubject     = Symbol('$$deleteSubject');\nconst $$valueObservable   = Symbol('$$valueObservable');\nconst $$disableNextReplay = Symbol('$$disableNextReplay');\n\nclass AddReplaySubject extends Subject {\n\tconstructor(initialSet) {\n\t\tsuper();\n\t\tassert(initialSet[Symbol.iterator]);\n\t\tthis._setReference = initialSet;\n\t}\n\tnormalSubscribe(...args) {\n\t\tthis[$$disableNextReplay] = true;\n\t\treturn this.subscribe(...args);\n\t}\n\t// noinspection JSDuplicatedDeclaration\n\t_subscribe(subscriber) {\n\t\tconst subscription = super._subscribe(subscriber);\n\t\tif (subscription && !subscription.isUnsubscribed && !this[$$disableNextReplay]) {\n\t\t\tthis._setReference.forEach(::subscriber.next);\n\t\t}\n\t\tthis[$$disableNextReplay] = false;\n\t\treturn subscription;\n\t}\n}\n\n/**\n * A data-structure with the same interface as `Set`,\n * and emits mutation events from rxjs streams.\n */\nexport default class ObservableSet<T> {\n\t\n\t/**\n\t * Create a new instance of `ObservableSet`.\n\t * @param {Iterable<T>} [initialContent] - initial elements to put in this set object\n\t */\n\tconstructor(initialContent: Iterable<T> = []) {\n\t\t/* define private fields */\n\t\t/** @private */ this[$$set]             = new Set();\n\t\t/** @private */ this[$$addSubject]      = new AddReplaySubject(this);\n\t\t/** @private */ this[$$deleteSubject]   = new Subject();\n\t\t\n\t\tconst valueSubject = new BehaviorSubject(new Set(this));\n\t\t\n\t\t/** @private */ this[$$valueObservable] = valueSubject.asObservable();\n\t\t\n\t\t/* link streams */\n\t\tthis[$$addSubject]   .normalSubscribe(::this.add);\n\t\tthis[$$deleteSubject].subscribe      (::this.delete);\n\t\tthis[$$addSubject]   .normalSubscribe(() => { valueSubject.next(new Set(this)) });\n\t\tthis[$$deleteSubject].subscribe      (() => { valueSubject.next(new Set(this)) });\n\t\t\n\t\t/* add initial content */\n\t\tinitialContent.forEach(::this.add);\n\t}\n\t\n\t/**\n\t * Get an event stream associated with this set object.\n\t * @param {string} op - the name of the event stream you want: `\"add\"` or `\"delete\"`\n\t * @returns {Subject} - the rxjs event stream\n\t */\n\te(op: string): Observable {\n\t\tswitch (op) {\n\t\t\tcase 'add':    return this[$$addSubject];\n\t\t\tcase 'delete': return this[$$deleteSubject];\n\t\t\tdefault: constraint(false, humanMsg`\n\t\t\t\tThe ${op} event does not exist.\n\t\t\t`);\n\t\t}\n\t}\n\t\n\t/**\n\t * Get an event stream associated with this set object.\n\t * @param {string} name  - the name of the property you want; the\n\t *                         only one available at the moment is `\"value\"`\n\t * @returns {Observable} - the rxjs event stream (based on the `BehaviorSubject` class)\n\t */\n\tp(name: string): Observable {\n\t\tswitch (name) {\n\t\t\tcase 'value': return this[$$valueObservable];\n\t\t\tdefault: constraint(false, humanMsg`\n\t\t\t\tThe ${name} property does not exist.\n\t\t\t`);\n\t\t}\n\t}\n\t\n\t/**\n\t * Add a new element with the given value to this set object.\n\t * @param   {T} val         - the value to add to the set\n\t * @returns {ObservableSet} - this observable set object\n\t */\n\tadd(val: T): this {\n\t\tif (!this[$$set].has(val)) {\n\t\t\tthis[$$set].add(val);\n\t\t\tthis[$$addSubject].next(val);\n\t\t}\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Remove all elements from this set object.\n\t * @returns {void}\n\t */\n\tclear(): void {\n\t\tfor (let value of this[$$set]) {\n\t\t\tthis.delete(value);\n\t\t}\n\t}\n\t\n\t/**\n\t * Removes the element with the value and returns the value that `has(val)` would have previously returned.\n\t * @param   {T} val   - the value to remove\n\t * @returns {boolean} - the element that was removed, if it existed; `false` otherwise\n\t */\n\tdelete(val: T): boolean {\n\t\tif (this[$$set].has(val)) {\n\t\t\tthis[$$set].delete(val);\n\t\t\tthis[$$deleteSubject].next(val);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\t\n\t/**\n\t * @returns {Iterator<T[]>} - a new Iterator object that yields an array of\n\t *                              `[value, value]` for each element in this set object.\n\t */\n\tentries(): Iterator<[T, T]> {\n\t\treturn this[$$set].entries();\n\t}\n\t\n\t/**\n\t * Run a function for each element in this set object.\n\t * @param {function(:T, :T)} callbackFn - the function to invoke for each element\n\t * @param {Object} [thisArg]            - the object that will be `this` inside the `callbackFn`\n\t * @returns {void}\n\t */\n\tforEach(callbackFn: (T, T)=>void, thisArg?: Object): void {\n\t\treturn this[$$set].forEach(callbackFn, thisArg);\n\t}\n\t\n\t/**\n\t * Test whether this set object contains a certain value.\n\t * @param {T} val - the value to test for\n\t * @returns {boolean} `true`, if `val` is an element in this set object; `false` otherwise\n\t */\n\thas(val: T): boolean {\n\t\treturn this[$$set].has(val);\n\t}\n\t\n\t/**\n\t * @returns {Iterator<T>} - a new Iterator object that contains the values for each element in this set object\n\t */\n\tvalues(): Iterator<T> {\n\t\treturn this[$$set].values();\n\t}\n\t\n\t/**\n\t * The presence of this method makes an observable set object iterable through `for...of` loops.\n\t * @returns {Iterator<T>} - a new Iterator object that contains the values for each element in this set object\n\t */\n\t[Symbol.iterator](): Iterator<T> {\n\t\treturn this[$$set][Symbol.iterator]();\n\t}\n\t\n\t/**\n\t * @returns {number} - the number of values in this set object\n\t */\n\tget size(): number {\n\t\treturn this[$$set].size;\n\t}\n\t\n\t/**\n\t * Overwrite the content of this set object,\n\t * emitting the proper `delete` and `add` signals (in that order).\n\t * @param {Iterable<T>} newContent - the new elements of the set\n\t * @returns {ObservableSet} - this observable set object\n\t */\n\toverwrite(newContent: Iterable<T>) {\n\t\tnewContent = new Set(newContent);\n\t\tfor (let e of this.values()) {\n\t\t\tif (!newContent.has(e)) {\n\t\t\t\tthis.delete(e);\n\t\t\t}\n\t\t}\n\t\tfor (let e of newContent) {\n\t\t\tif (!this.has(e)) {\n\t\t\t\tthis.add(e);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n}\n",
    "static": true,
    "longname": "src/util/ObservableSet.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 143,
    "kind": "variable",
    "name": "$$set",
    "memberof": "src/util/ObservableSet.js",
    "static": true,
    "longname": "src/util/ObservableSet.js~$$set",
    "access": null,
    "export": false,
    "importPath": "open-physiology-manifest/src/util/ObservableSet.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 144,
    "kind": "variable",
    "name": "$$addSubject",
    "memberof": "src/util/ObservableSet.js",
    "static": true,
    "longname": "src/util/ObservableSet.js~$$addSubject",
    "access": null,
    "export": false,
    "importPath": "open-physiology-manifest/src/util/ObservableSet.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 145,
    "kind": "variable",
    "name": "$$deleteSubject",
    "memberof": "src/util/ObservableSet.js",
    "static": true,
    "longname": "src/util/ObservableSet.js~$$deleteSubject",
    "access": null,
    "export": false,
    "importPath": "open-physiology-manifest/src/util/ObservableSet.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 146,
    "kind": "variable",
    "name": "$$valueObservable",
    "memberof": "src/util/ObservableSet.js",
    "static": true,
    "longname": "src/util/ObservableSet.js~$$valueObservable",
    "access": null,
    "export": false,
    "importPath": "open-physiology-manifest/src/util/ObservableSet.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 147,
    "kind": "variable",
    "name": "$$disableNextReplay",
    "memberof": "src/util/ObservableSet.js",
    "static": true,
    "longname": "src/util/ObservableSet.js~$$disableNextReplay",
    "access": null,
    "export": false,
    "importPath": "open-physiology-manifest/src/util/ObservableSet.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 148,
    "kind": "class",
    "name": "AddReplaySubject",
    "memberof": "src/util/ObservableSet.js",
    "static": true,
    "longname": "src/util/ObservableSet.js~AddReplaySubject",
    "access": null,
    "export": false,
    "importPath": "open-physiology-manifest/src/util/ObservableSet.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "src/libs/rxjs.js~Subject"
    ]
  },
  {
    "__docId__": 149,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/util/ObservableSet.js~AddReplaySubject",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/ObservableSet.js~AddReplaySubject#constructor",
    "access": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "initialSet",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 150,
    "kind": "member",
    "name": "_setReference",
    "memberof": "src/util/ObservableSet.js~AddReplaySubject",
    "static": false,
    "longname": "src/util/ObservableSet.js~AddReplaySubject#_setReference",
    "access": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 151,
    "kind": "method",
    "name": "normalSubscribe",
    "memberof": "src/util/ObservableSet.js~AddReplaySubject",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/ObservableSet.js~AddReplaySubject#normalSubscribe",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 152,
    "kind": "member",
    "name": "[$$disableNextReplay]",
    "memberof": "src/util/ObservableSet.js~AddReplaySubject",
    "static": false,
    "longname": "src/util/ObservableSet.js~AddReplaySubject#[$$disableNextReplay]",
    "access": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 153,
    "kind": "method",
    "name": "_subscribe",
    "memberof": "src/util/ObservableSet.js~AddReplaySubject",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/ObservableSet.js~AddReplaySubject#_subscribe",
    "access": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "subscriber",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 154,
    "kind": "member",
    "name": "[$$disableNextReplay]",
    "memberof": "src/util/ObservableSet.js~AddReplaySubject",
    "static": false,
    "longname": "src/util/ObservableSet.js~AddReplaySubject#[$$disableNextReplay]",
    "access": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 155,
    "kind": "class",
    "name": "ObservableSet",
    "memberof": "src/util/ObservableSet.js",
    "static": true,
    "longname": "src/util/ObservableSet.js~ObservableSet",
    "access": null,
    "export": true,
    "importPath": "open-physiology-manifest/src/util/ObservableSet.js",
    "importStyle": "ObservableSet",
    "description": "A data-structure with the same interface as `Set`,\nand emits mutation events from rxjs streams.",
    "lineNumber": 37,
    "interface": false
  },
  {
    "__docId__": 156,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/util/ObservableSet.js~ObservableSet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/ObservableSet.js~ObservableSet#constructor",
    "access": null,
    "description": "Create a new instance of `ObservableSet`.",
    "lineNumber": 43,
    "params": [
      {
        "nullable": null,
        "types": [
          "Iterable<T>"
        ],
        "spread": false,
        "optional": true,
        "name": "initialContent",
        "description": "initial elements to put in this set object"
      }
    ]
  },
  {
    "__docId__": 157,
    "kind": "member",
    "name": "[$$set]",
    "memberof": "src/util/ObservableSet.js~ObservableSet",
    "static": false,
    "longname": "src/util/ObservableSet.js~ObservableSet#[$$set]",
    "access": "private",
    "description": null,
    "lineNumber": 45,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 158,
    "kind": "member",
    "name": "[$$addSubject]",
    "memberof": "src/util/ObservableSet.js~ObservableSet",
    "static": false,
    "longname": "src/util/ObservableSet.js~ObservableSet#[$$addSubject]",
    "access": "private",
    "description": null,
    "lineNumber": 46,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 159,
    "kind": "member",
    "name": "[$$deleteSubject]",
    "memberof": "src/util/ObservableSet.js~ObservableSet",
    "static": false,
    "longname": "src/util/ObservableSet.js~ObservableSet#[$$deleteSubject]",
    "access": "private",
    "description": null,
    "lineNumber": 47,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 160,
    "kind": "member",
    "name": "[$$valueObservable]",
    "memberof": "src/util/ObservableSet.js~ObservableSet",
    "static": false,
    "longname": "src/util/ObservableSet.js~ObservableSet#[$$valueObservable]",
    "access": "private",
    "description": null,
    "lineNumber": 51,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 161,
    "kind": "method",
    "name": "e",
    "memberof": "src/util/ObservableSet.js~ObservableSet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/ObservableSet.js~ObservableSet#e",
    "access": null,
    "description": "Get an event stream associated with this set object.",
    "lineNumber": 72,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Subject} - the rxjs event stream"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "op",
        "description": "the name of the event stream you want: `\"add\"` or `\"delete\"`"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Subject"
      ],
      "spread": false,
      "description": "the rxjs event stream"
    }
  },
  {
    "__docId__": 162,
    "kind": "method",
    "name": "p",
    "memberof": "src/util/ObservableSet.js~ObservableSet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/ObservableSet.js~ObservableSet#p",
    "access": null,
    "description": "Get an event stream associated with this set object.",
    "lineNumber": 91,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Observable} - the rxjs event stream (based on the `BehaviorSubject` class)"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the name of the property you want; the\n                        only one available at the moment is `\"value\"`"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Observable"
      ],
      "spread": false,
      "description": "the rxjs event stream (based on the `BehaviorSubject` class)"
    }
  },
  {
    "__docId__": 163,
    "kind": "method",
    "name": "add",
    "memberof": "src/util/ObservableSet.js~ObservableSet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/ObservableSet.js~ObservableSet#add",
    "access": null,
    "description": "Add a new element with the given value to this set object.",
    "lineNumber": 107,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ObservableSet} - this observable set object"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "T"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": "the value to add to the set"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ObservableSet"
      ],
      "spread": false,
      "description": "this observable set object"
    }
  },
  {
    "__docId__": 164,
    "kind": "method",
    "name": "clear",
    "memberof": "src/util/ObservableSet.js~ObservableSet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/ObservableSet.js~ObservableSet#clear",
    "access": null,
    "description": "Remove all elements from this set object.",
    "lineNumber": 119,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 165,
    "kind": "method",
    "name": "delete",
    "memberof": "src/util/ObservableSet.js~ObservableSet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/ObservableSet.js~ObservableSet#delete",
    "access": null,
    "description": "Removes the element with the value and returns the value that `has(val)` would have previously returned.",
    "lineNumber": 130,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} - the element that was removed, if it existed; `false` otherwise"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "T"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": "the value to remove"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "the element that was removed, if it existed; `false` otherwise"
    }
  },
  {
    "__docId__": 166,
    "kind": "method",
    "name": "entries",
    "memberof": "src/util/ObservableSet.js~ObservableSet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/ObservableSet.js~ObservableSet#entries",
    "access": null,
    "description": "",
    "lineNumber": 143,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Iterator<T[]>} - a new Iterator object that yields an array of\n                             `[value, value]` for each element in this set object."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Iterator<T[]>"
      ],
      "spread": false,
      "description": "a new Iterator object that yields an array of\n                             `[value, value]` for each element in this set object."
    }
  },
  {
    "__docId__": 167,
    "kind": "method",
    "name": "forEach",
    "memberof": "src/util/ObservableSet.js~ObservableSet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/ObservableSet.js~ObservableSet#forEach",
    "access": null,
    "description": "Run a function for each element in this set object.",
    "lineNumber": 153,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "function(:T, :T)"
        ],
        "spread": false,
        "optional": false,
        "name": "callbackFn",
        "description": "the function to invoke for each element"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "thisArg",
        "description": "the object that will be `this` inside the `callbackFn`"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 168,
    "kind": "method",
    "name": "has",
    "memberof": "src/util/ObservableSet.js~ObservableSet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/ObservableSet.js~ObservableSet#has",
    "access": null,
    "description": "Test whether this set object contains a certain value.",
    "lineNumber": 162,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} `true`, if `val` is an element in this set object; `false` otherwise"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "T"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": "the value to test for"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "`true`, if `val` is an element in this set object; `false` otherwise"
    }
  },
  {
    "__docId__": 169,
    "kind": "method",
    "name": "values",
    "memberof": "src/util/ObservableSet.js~ObservableSet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/ObservableSet.js~ObservableSet#values",
    "access": null,
    "description": "",
    "lineNumber": 169,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Iterator<T>} - a new Iterator object that contains the values for each element in this set object"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Iterator<T>"
      ],
      "spread": false,
      "description": "a new Iterator object that contains the values for each element in this set object"
    }
  },
  {
    "__docId__": 170,
    "kind": "method",
    "name": "[Symbol.iterator]",
    "memberof": "src/util/ObservableSet.js~ObservableSet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/ObservableSet.js~ObservableSet#[Symbol.iterator]",
    "access": null,
    "description": "The presence of this method makes an observable set object iterable through `for...of` loops.",
    "lineNumber": 177,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Iterator<T>} - a new Iterator object that contains the values for each element in this set object"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Iterator<T>"
      ],
      "spread": false,
      "description": "a new Iterator object that contains the values for each element in this set object"
    }
  },
  {
    "__docId__": 171,
    "kind": "get",
    "name": "size",
    "memberof": "src/util/ObservableSet.js~ObservableSet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/ObservableSet.js~ObservableSet#size",
    "access": null,
    "description": "",
    "lineNumber": 184,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} - the number of values in this set object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "the number of values in this set object"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 172,
    "kind": "method",
    "name": "overwrite",
    "memberof": "src/util/ObservableSet.js~ObservableSet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/ObservableSet.js~ObservableSet#overwrite",
    "access": null,
    "description": "Overwrite the content of this set object,\nemitting the proper `delete` and `add` signals (in that order).",
    "lineNumber": 194,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ObservableSet} - this observable set object"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Iterable<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "newContent",
        "description": "the new elements of the set"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ObservableSet"
      ],
      "spread": false,
      "description": "this observable set object"
    }
  },
  {
    "__docId__": 173,
    "kind": "file",
    "name": "src/util/misc.js",
    "content": "////////////////////////////////////////////////////////////////////////////////\n\nimport {isString} from 'lodash-bound';\n\nimport assert from 'power-assert';\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Transform a string representation of a cardinality range into an object.\n * @param cardinality {string} a string representation of minimum and maximum cardinality `\"min..max\"`,\n *                     where `min` is a natural number and `max` is a natural number greater or\n *                     equal to `min` or an asterisk symbol `*` to represent an unbounded maximum\n * @returns {{min: number, max: number}} an object with `min` and `max` fields\n */\nexport function parseCardinality(cardinality) {\n\tassert(cardinality::isString(), `\n\t\tA cardinality range has to be a string,\n\t\tbut a value ${JSON.stringify(cardinality)} was given.\n\t`);\n\tlet match = cardinality.match(/^(\\d+)\\.\\.(\\d+|\\*)$/);\n\tassert(match && match.length === 3, `\n\t\tA cardinality range has to be in the form \"min..max\",\n\t\tbut a value ${JSON.stringify(cardinality)} was given.\n\t`);\n\tlet [,min,max] = match;\n\tif (max === '*') { max = Infinity }\n\telse { max = parseInt(max, 10) }\n\tmin = parseInt(min, 10);\n\treturn {min, max};\n}\n\n/**\n * Transform an object representation of a cardinality range into a representative string.\n * @param cardinality {{min: number, max: number}} an object representation of minimum and maximum cardinality `{min, max}`\n * @param abbreviate  {boolean} whether or not to collapse the resulting string if `min === max`\n * @returns {string} a string representing the given cardinality range, possibly collapsed if `min === max` and `abbreviate === true`\n */\nexport function stringifyCardinality(cardinality, {abbreviate} = {}) {\n\treturn (cardinality.min === cardinality.max && abbreviate)\n\t\t? `   ${cardinality.min}`\n\t\t: `${cardinality.min}..${cardinality.max === Infinity ? '*' : cardinality.max}`;\n}\n\n/**\n * Compare two sets for equality.\n * @param setA {Iterable<T>}\n * @param setB {Iterable<T>}\n * @returns {boolean} `true`, if both sets have the same elements; `false`, otherwise\n */\nexport function setEquals<T>(setA: Iterable<T>, setB: Iterable<T>): boolean {\n\tsetA = new Set(setA);\n\tsetB = new Set(setB);\n\tif (setA.size !== setB.size) return false;\n\tfor (let a of setA) if (!setB.has(a)) return false;\n\treturn true;\n}\n\n/**\n * Express an assertion that's tied to outside input.\n * We may later replace this with a more sophisticated mechanism.\n * @param {boolean} constraint - the condition to check\n * @param {string}  message    - the message to display if the condition fails\n */\nexport function constraint(constraint, message) {\n\tif (!constraint) {\n\t\tthrow new Error('Constraint Failure: ' + (message || '(no message)'));\n\t}\n}\n",
    "static": true,
    "longname": "src/util/misc.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 174,
    "kind": "function",
    "name": "parseCardinality",
    "memberof": "src/util/misc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/misc.js~parseCardinality",
    "access": null,
    "export": true,
    "importPath": "open-physiology-manifest/src/util/misc.js",
    "importStyle": "{parseCardinality}",
    "description": "Transform a string representation of a cardinality range into an object.",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{min: number, max: number}} an object with `min` and `max` fields"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "cardinality",
        "description": "{string} a string representation of minimum and maximum cardinality `\"min..max\"`,\n                    where `min` is a natural number and `max` is a natural number greater or\n                    equal to `min` or an asterisk symbol `*` to represent an unbounded maximum"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{min: number, max: number}"
      ],
      "spread": false,
      "description": "an object with `min` and `max` fields"
    }
  },
  {
    "__docId__": 175,
    "kind": "function",
    "name": "stringifyCardinality",
    "memberof": "src/util/misc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/misc.js~stringifyCardinality",
    "access": null,
    "export": true,
    "importPath": "open-physiology-manifest/src/util/misc.js",
    "importStyle": "{stringifyCardinality}",
    "description": "Transform an object representation of a cardinality range into a representative string.",
    "lineNumber": 42,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} a string representing the given cardinality range, possibly collapsed if `min === max` and `abbreviate === true`"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "cardinality",
        "description": "{{min: number, max: number}} an object representation of minimum and maximum cardinality `{min, max}`"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "abbreviate",
        "description": "{boolean} whether or not to collapse the resulting string if `min === max`"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "a string representing the given cardinality range, possibly collapsed if `min === max` and `abbreviate === true`"
    }
  },
  {
    "__docId__": 176,
    "kind": "function",
    "name": "setEquals",
    "memberof": "src/util/misc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/misc.js~setEquals",
    "access": null,
    "export": true,
    "importPath": "open-physiology-manifest/src/util/misc.js",
    "importStyle": "{setEquals}",
    "description": "Compare two sets for equality.",
    "lineNumber": 52,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} `true`, if both sets have the same elements; `false`, otherwise"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "setA",
        "description": "{Iterable<T>}"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "setB",
        "description": "{Iterable<T>}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "`true`, if both sets have the same elements; `false`, otherwise"
    }
  },
  {
    "__docId__": 177,
    "kind": "function",
    "name": "constraint",
    "memberof": "src/util/misc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/misc.js~constraint",
    "access": null,
    "export": true,
    "importPath": "open-physiology-manifest/src/util/misc.js",
    "importStyle": "{constraint}",
    "description": "Express an assertion that's tied to outside input.\nWe may later replace this with a more sophisticated mechanism.",
    "lineNumber": 66,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "constraint",
        "description": "the condition to check"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": "the message to display if the condition fails"
      }
    ]
  },
  {
    "__docId__": 178,
    "kind": "file",
    "name": "src/util/schemas.js",
    "content": "/** @private */\nexport const identifierRegex = `^[a-zA-Z_][a-zA-Z0-9_]*$`;\n\n/** @private */\nexport const qualitySchema = {\n\ttype: 'string'\n};\n\n/** @private */\nexport const identifierSchema = {\n\ttype:    'string',\n\tpattern: '^[a-zA-Z_][a-zA-Z0-9_]*$'\n};\n\n/** @private */\nexport const uriSchema = {\n\ttype: 'string',\n\tformat: 'uri'\n};\n\n/** @private */\nexport const idSchema = {\n\ttype: 'integer'\n};\n\n/** @private */\nexport const enumSchema = (...candidates) => ({\n\ttype: 'string',\n\tenum: candidates\n});\n\n/** @private */\nexport const enumArraySchema = (...candidates) => ({\n\ttype       : 'array',\n\titems      : { ...enumSchema(...candidates) },\n\tuniqueItems: true,\n\tmaxItems   : candidates.length\n});\n\n/** @private */\nexport const oneOf = (...schemas) => ({ oneOf: schemas });\n\n/** @private */\nexport const typedDistributionSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\t'value': { type: 'number' },\n\t\t'min':   { type: 'number' },\n\t\t'max':   { type: 'number' },\n\t\t'mean':  { type: 'number' },\n\t\t'std':   { type: 'number' },\n\t\t'class': { type: 'string', required: true }\n\t\t// 'UniformDistribution' | 'BoundedNormalDistribution' | 'Number' | 'NumberRange'\n\t}\n};\n\n/** @private */\nexport const rangeSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\t'min':  { type: 'number', required: true },\n\t\t'max':  { type: 'number', required: true }\n\t}\n};\n\n/** @private */\nexport const universalDistanceRange = {\n\t'min': 0,\n\t'max': Infinity\n};\n\n/** @private */\nexport const normalDistributionSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\t'distribution': { value: 'normal' },\n\t\t'mean': { type: 'number', required: true },\n\t\t'std':  { type: 'number', required: true }\n\t}\n};\n\n/** @private */\nexport const boundedNormalDistributionSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\t'distribution': { value: 'bounded-normal' },\n\t\t'mean': { type: 'number', required: true },\n\t\t'std':  { type: 'number', required: true },\n\t\t'min':  { type: 'number', required: true },\n\t\t'max':  { type: 'number', required: true }\n\t}\n};\n\n/** @private */\nexport const uniformDistributionSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\t'distribution': { value: 'uniform' },\n\t\t'min':  { type: 'number', required: true },\n\t\t'max':  { type: 'number', required: true }\n\t}\n};\n\n// export const distributionSchema = {\n// \toneOf: [\n// \t\t{ ...normalDistributionSchema        },\n// \t\t{ ...boundedNormalDistributionSchema },\n// \t\t{ ...uniformDistributionSchema       }\n// \t]\n// };\n\n/** @private */\nexport const distributionSchemaOr = (otherSchema) => ({\n\toneOf: [\n\t\tboundedNormalDistributionSchema,\n\t\tuniformDistributionSchema,\n\t\totherSchema\n\t]\n});\n\n/** @private */\nexport const dimensionalitySchema = {\n\ttype: 'object',\n\tpatternProperties: {\n\t\t'[a-zA-Z0-9 ]+': { type: 'integer' }\n\t}\n};\n",
    "static": true,
    "longname": "src/util/schemas.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 179,
    "kind": "variable",
    "name": "_extends",
    "memberof": "src/util/schemas.js",
    "static": true,
    "longname": "src/util/schemas.js~_extends",
    "access": null,
    "export": false,
    "importPath": "open-physiology-manifest/src/util/schemas.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 180,
    "kind": "variable",
    "name": "identifierRegex",
    "memberof": "src/util/schemas.js",
    "static": true,
    "longname": "src/util/schemas.js~identifierRegex",
    "access": "private",
    "export": true,
    "importPath": "open-physiology-manifest/src/util/schemas.js",
    "importStyle": "{identifierRegex}",
    "description": null,
    "lineNumber": 4,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 181,
    "kind": "variable",
    "name": "qualitySchema",
    "memberof": "src/util/schemas.js",
    "static": true,
    "longname": "src/util/schemas.js~qualitySchema",
    "access": "private",
    "export": true,
    "importPath": "open-physiology-manifest/src/util/schemas.js",
    "importStyle": "{qualitySchema}",
    "description": null,
    "lineNumber": 7,
    "type": {
      "types": [
        "{\"type\": string}"
      ]
    }
  },
  {
    "__docId__": 182,
    "kind": "variable",
    "name": "identifierSchema",
    "memberof": "src/util/schemas.js",
    "static": true,
    "longname": "src/util/schemas.js~identifierSchema",
    "access": "private",
    "export": true,
    "importPath": "open-physiology-manifest/src/util/schemas.js",
    "importStyle": "{identifierSchema}",
    "description": null,
    "lineNumber": 12,
    "type": {
      "types": [
        "{\"type\": string, \"pattern\": string}"
      ]
    }
  },
  {
    "__docId__": 183,
    "kind": "variable",
    "name": "uriSchema",
    "memberof": "src/util/schemas.js",
    "static": true,
    "longname": "src/util/schemas.js~uriSchema",
    "access": "private",
    "export": true,
    "importPath": "open-physiology-manifest/src/util/schemas.js",
    "importStyle": "{uriSchema}",
    "description": null,
    "lineNumber": 18,
    "type": {
      "types": [
        "{\"type\": string, \"format\": string}"
      ]
    }
  },
  {
    "__docId__": 184,
    "kind": "variable",
    "name": "idSchema",
    "memberof": "src/util/schemas.js",
    "static": true,
    "longname": "src/util/schemas.js~idSchema",
    "access": "private",
    "export": true,
    "importPath": "open-physiology-manifest/src/util/schemas.js",
    "importStyle": "{idSchema}",
    "description": null,
    "lineNumber": 24,
    "type": {
      "types": [
        "{\"type\": string}"
      ]
    }
  },
  {
    "__docId__": 185,
    "kind": "function",
    "name": "enumSchema",
    "memberof": "src/util/schemas.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/schemas.js~enumSchema",
    "access": "private",
    "export": true,
    "importPath": "open-physiology-manifest/src/util/schemas.js",
    "importStyle": "{enumSchema}",
    "description": null,
    "lineNumber": 29,
    "params": [
      {
        "name": "candidates",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ]
  },
  {
    "__docId__": 186,
    "kind": "function",
    "name": "enumArraySchema",
    "memberof": "src/util/schemas.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/schemas.js~enumArraySchema",
    "access": "private",
    "export": true,
    "importPath": "open-physiology-manifest/src/util/schemas.js",
    "importStyle": "{enumArraySchema}",
    "description": null,
    "lineNumber": 35,
    "params": [
      {
        "name": "candidates",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ]
  },
  {
    "__docId__": 187,
    "kind": "function",
    "name": "oneOf",
    "memberof": "src/util/schemas.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/schemas.js~oneOf",
    "access": "private",
    "export": true,
    "importPath": "open-physiology-manifest/src/util/schemas.js",
    "importStyle": "{oneOf}",
    "description": null,
    "lineNumber": 43,
    "params": [
      {
        "name": "schemas",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ]
  },
  {
    "__docId__": 188,
    "kind": "variable",
    "name": "typedDistributionSchema",
    "memberof": "src/util/schemas.js",
    "static": true,
    "longname": "src/util/schemas.js~typedDistributionSchema",
    "access": "private",
    "export": true,
    "importPath": "open-physiology-manifest/src/util/schemas.js",
    "importStyle": "{typedDistributionSchema}",
    "description": null,
    "lineNumber": 46,
    "type": {
      "types": [
        "{\"type\": string, \"properties\": *}"
      ]
    }
  },
  {
    "__docId__": 189,
    "kind": "variable",
    "name": "rangeSchema",
    "memberof": "src/util/schemas.js",
    "static": true,
    "longname": "src/util/schemas.js~rangeSchema",
    "access": "private",
    "export": true,
    "importPath": "open-physiology-manifest/src/util/schemas.js",
    "importStyle": "{rangeSchema}",
    "description": null,
    "lineNumber": 60,
    "type": {
      "types": [
        "{\"type\": string, \"properties\": *}"
      ]
    }
  },
  {
    "__docId__": 190,
    "kind": "variable",
    "name": "universalDistanceRange",
    "memberof": "src/util/schemas.js",
    "static": true,
    "longname": "src/util/schemas.js~universalDistanceRange",
    "access": "private",
    "export": true,
    "importPath": "open-physiology-manifest/src/util/schemas.js",
    "importStyle": "{universalDistanceRange}",
    "description": null,
    "lineNumber": 69,
    "type": {
      "types": [
        "{\"min\": *, \"max\": *}"
      ]
    }
  },
  {
    "__docId__": 191,
    "kind": "variable",
    "name": "normalDistributionSchema",
    "memberof": "src/util/schemas.js",
    "static": true,
    "longname": "src/util/schemas.js~normalDistributionSchema",
    "access": "private",
    "export": true,
    "importPath": "open-physiology-manifest/src/util/schemas.js",
    "importStyle": "{normalDistributionSchema}",
    "description": null,
    "lineNumber": 75,
    "type": {
      "types": [
        "{\"type\": string, \"properties\": *}"
      ]
    }
  },
  {
    "__docId__": 192,
    "kind": "variable",
    "name": "boundedNormalDistributionSchema",
    "memberof": "src/util/schemas.js",
    "static": true,
    "longname": "src/util/schemas.js~boundedNormalDistributionSchema",
    "access": "private",
    "export": true,
    "importPath": "open-physiology-manifest/src/util/schemas.js",
    "importStyle": "{boundedNormalDistributionSchema}",
    "description": null,
    "lineNumber": 85,
    "type": {
      "types": [
        "{\"type\": string, \"properties\": *}"
      ]
    }
  },
  {
    "__docId__": 193,
    "kind": "variable",
    "name": "uniformDistributionSchema",
    "memberof": "src/util/schemas.js",
    "static": true,
    "longname": "src/util/schemas.js~uniformDistributionSchema",
    "access": "private",
    "export": true,
    "importPath": "open-physiology-manifest/src/util/schemas.js",
    "importStyle": "{uniformDistributionSchema}",
    "description": null,
    "lineNumber": 97,
    "type": {
      "types": [
        "{\"type\": string, \"properties\": *}"
      ]
    }
  },
  {
    "__docId__": 194,
    "kind": "function",
    "name": "distributionSchemaOr",
    "memberof": "src/util/schemas.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/schemas.js~distributionSchemaOr",
    "access": "private",
    "export": true,
    "importPath": "open-physiology-manifest/src/util/schemas.js",
    "importStyle": "{distributionSchemaOr}",
    "description": null,
    "lineNumber": 115,
    "params": [
      {
        "name": "otherSchema",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 195,
    "kind": "variable",
    "name": "dimensionalitySchema",
    "memberof": "src/util/schemas.js",
    "static": true,
    "longname": "src/util/schemas.js~dimensionalitySchema",
    "access": "private",
    "export": true,
    "importPath": "open-physiology-manifest/src/util/schemas.js",
    "importStyle": "{dimensionalitySchema}",
    "description": null,
    "lineNumber": 120,
    "type": {
      "types": [
        "{\"type\": string, \"patternProperties\": *}"
      ]
    }
  },
  {
    "__docId__": 197,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 198,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 199,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 200,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 201,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 202,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 203,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 204,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 205,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 206,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 207,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 208,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 209,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 210,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 211,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 212,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 213,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 214,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 215,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 216,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 217,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 218,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 219,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 220,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 221,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 222,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 223,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 224,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 225,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 226,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 227,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 228,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 229,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 230,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 231,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 232,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 233,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 234,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 235,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 236,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 237,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 238,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 239,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 240,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 241,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 242,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 243,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": "",
    "lineNumber": 193,
    "builtinExternal": true
  },
  {
    "__docId__": 245,
    "kind": "external",
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 246,
    "kind": "external",
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 247,
    "kind": "external",
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 248,
    "kind": "external",
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 249,
    "kind": "external",
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 250,
    "kind": "external",
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 251,
    "kind": "external",
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 252,
    "kind": "external",
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": "",
    "lineNumber": 34,
    "builtinExternal": true
  },
  {
    "__docId__": 253,
    "kind": "testFile",
    "name": "test/Entity.spec.js",
    "content": "import {describe, it, expect, beforeEach} from './test.helper';\nimport moduleFactory from '../src/index';\nimport {simpleMockHandlers}   from \"./mock-handlers.helper\";\n\ndescribe(\"Entity classes\", () => {\n\t\n\tlet environment;\n\tbeforeEach(() => { environment = moduleFactory() });\n\t\n\tit(\"can list its possible subclasses\", () => {\n\t\tconst {Resource, ExternalResource, Type, Lyph} = environment.classes;\n\t\t\n\t\tconst resourceSubclasses = Resource.allSubclasses();\n\t\t\n\t\texpect([...resourceSubclasses]).to.contain(Resource);\n\t\texpect([...resourceSubclasses]).to.contain(ExternalResource);\n\t\texpect([...resourceSubclasses]).to.contain(Type);\n\t\texpect([...resourceSubclasses]).to.contain(Lyph);\n\t});\n\t\n\tit(\"can be used as a base to instantiate subclasses\", () => {\n\t\tconst {Entity, Material, Lyph} = environment.classes;\n\t\n\t\tlet materialFromEntity = Entity.new({ class: 'Material' });\n\t\texpect(materialFromEntity).to.be.an.instanceOf(Material);\n\t\t\n\t\tlet lyphFromEntity = Entity.new({ class: 'Lyph' });\n\t\texpect(lyphFromEntity).to.be.an.instanceOf(Lyph);\n\t\t\n\t\tlet lyphFromMaterial = Material.new({ class: 'Lyph' });\n\t\texpect(lyphFromMaterial).to.be.an.instanceOf(Lyph);\n\t\t\n\t\texpect(() => Lyph.new({ class: Material })).to.throw();\n\t});\n\t\n\tit(\"has resources that can be deleted\", () => {\n\t\tconst {Lyph} = environment.classes;\n\t\t\n\t\tlet lyph = Lyph.new({ name: \"A Lyph!\" });\n\t\t\n\t\texpect(lyph.deleted).to.be.false;\n\t\texpect(lyph.name).to.equal(\"A Lyph!\");\n\t\t\n\t\tlyph.delete();\n\t\texpect(lyph.deleted).to.be.true;\n\t\t\n\t\t/* still sending signals after a deletion */\n\t\tlyph.p('name').next(\"A deleted lyph!\");\n\t\texpect(lyph.name).to.equal(\"A deleted lyph!\");\n\t\t\n\t\t/* can undelete */\n\t\tlyph.undelete();\n\t\texpect(lyph.deleted).to.be.false;\n\t});\n\t\n\tit(\"has resources that can be silenced\", async () => {\n\t\tconst {Lyph} = environment.classes;\n\t\t\n\t\tlet lyph = Lyph.new({ name: \"A Lyph!\" });\n\t\t\n\t\texpect(lyph.silent).to.be.false;\n\t\texpect(lyph.name).to.equal(\"A Lyph!\");\n\t\t\n\t\tlyph.silence();\n\t\texpect(lyph.silent).to.be.true;\n\t\t\n\t\t/* no longer sending signals after silencing */\n\t\tlyph.p('name').next(\"A silent lyph!\");\n\t\t\n\t\texpect(lyph.name).to.equal(\"A Lyph!\");\n\t});\n\t\n\tit(\"has resources that can be placeholders\", () => {\n\t\tconst {Lyph} = environment.classes;\n\t\t\n\t\tlet lyph = Lyph.new({ id: 1234 }, { isPlaceholder: true });\n\t\t\n\t\texpect(lyph.isPlaceholder).to.be.true;\n\t\texpect(lyph.id).to.equal(1234);\n\t\texpect(lyph.name).to.be.undefined;\n\t\t\n\t\tlyph.loadIntoPlaceholder({ name: \"New Lyph\" });\n\t\t\n\t\texpect(lyph.isPlaceholder).to.be.false;\n\t\texpect(lyph.id).to.equal(1234);\n\t\texpect(lyph.name).to.equal(\"New Lyph\");\n\t});\n\t\n});\n",
    "static": true,
    "longname": "test/Entity.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 254,
    "kind": "testDescribe",
    "name": "describe0",
    "testId": 0,
    "memberof": "test/Entity.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/Entity.spec.js~describe0",
    "access": null,
    "description": "Entity classes",
    "lineNumber": 5
  },
  {
    "__docId__": 255,
    "kind": "testIt",
    "name": "it1",
    "testId": 1,
    "memberof": "test/Entity.spec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/Entity.spec.js~describe0.it1",
    "access": null,
    "description": "can list its possible subclasses",
    "lineNumber": 12
  },
  {
    "__docId__": 256,
    "kind": "testIt",
    "name": "it2",
    "testId": 2,
    "memberof": "test/Entity.spec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/Entity.spec.js~describe0.it2",
    "access": null,
    "description": "can be used as a base to instantiate subclasses",
    "lineNumber": 23
  },
  {
    "__docId__": 257,
    "kind": "testIt",
    "name": "it3",
    "testId": 3,
    "memberof": "test/Entity.spec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/Entity.spec.js~describe0.it3",
    "access": null,
    "description": "has resources that can be deleted",
    "lineNumber": 38
  },
  {
    "__docId__": 258,
    "kind": "testIt",
    "name": "it4",
    "testId": 4,
    "memberof": "test/Entity.spec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/Entity.spec.js~describe0.it4",
    "access": null,
    "description": "has resources that can be silenced",
    "lineNumber": 58
  },
  {
    "__docId__": 259,
    "kind": "testIt",
    "name": "it5",
    "testId": 5,
    "memberof": "test/Entity.spec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/Entity.spec.js~describe0.it5",
    "access": null,
    "description": "has resources that can be placeholders",
    "lineNumber": 75
  },
  {
    "__docId__": 260,
    "kind": "testFile",
    "name": "test/index.spec.js",
    "content": "import {\n\tchai,\n\tsinon,\n\tdescribe,\n\tit,\n\tbeforeEach,\n\tafterEach,\n\texpect,\n} from './test.helper';\n\nimport moduleFactory from '../src/index.js';\n\n\ndescribe(\"the open-physiology-manifest\", () => {\n\t\n\tlet environment;\n\tbeforeEach(() => { environment = moduleFactory() });\n\t\n\tit(\"provides access to all Field classes\", () => {\n\t\tconst {Field, RelField, Rel$Field, Rel1Field, PropertyField} = environment;\n\t\texpect(Field).to.be.instanceOf(Function); // constructor\n\t\texpect(RelField).to.be.a.subclassOf(Field);\n\t\texpect(Rel1Field).to.be.a.subclassOf(Field, RelField);\n\t\texpect(Rel$Field).to.be.a.subclassOf(Field, RelField);\n\t\texpect(PropertyField).to.be.a.subclassOf(Field);\n\t});\n\t\n});\n",
    "static": true,
    "longname": "test/index.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 261,
    "kind": "testDescribe",
    "name": "describe6",
    "testId": 6,
    "memberof": "test/index.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/index.spec.js~describe6",
    "access": null,
    "description": "the open-physiology-manifest",
    "lineNumber": 5
  },
  {
    "__docId__": 262,
    "kind": "testIt",
    "name": "it7",
    "testId": 7,
    "memberof": "test/index.spec.js~describe6",
    "testDepth": 1,
    "static": true,
    "longname": "test/index.spec.js~describe6.it7",
    "access": null,
    "description": "provides access to all Field classes",
    "lineNumber": 12
  },
  {
    "__docId__": 263,
    "kind": "testFile",
    "name": "test/integration.spec.js",
    "content": "import {beforeEach, describe, it, expect} from './test.helper';\nimport moduleFactory          from '../src/index';\nimport {simpleMockHandlers}   from './mock-handlers.helper';\nimport {map} from 'utilities';\nimport at    from 'lodash-bound/at';\nimport keyBy from 'lodash-bound/keyBy';\n\n\ndescribe(\"integrated workflow\", () => {\n\t\n\tlet environment;\n\tbeforeEach(() => { environment = moduleFactory() });\n\t\n\tit(\"can create new Materials and link them\", async () => {\n\t\tconst {Material, Type} = environment.classes;\n\n\t\tlet water1 = Material.new({ name: \"Water 1\" });\n\t\t\n\t\tlet waterType = Type.new({ definition: water1 });\n\t\t\n\t\tlet water2 = Material.new({ name: \"Water 2\" });\n\t\t\n\t\twaterType.definition = water2;\n\t\t\n\t\texpect(water2.definedType).to.equal (waterType);\n\t\texpect([...water2.types]).to.include(waterType);\n\t});\n\t\n});\n",
    "static": true,
    "longname": "test/integration.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 264,
    "kind": "testDescribe",
    "name": "describe8",
    "testId": 8,
    "memberof": "test/integration.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/integration.spec.js~describe8",
    "access": null,
    "description": "integrated workflow",
    "lineNumber": 8
  },
  {
    "__docId__": 265,
    "kind": "testIt",
    "name": "it9",
    "testId": 9,
    "memberof": "test/integration.spec.js~describe8",
    "testDepth": 1,
    "static": true,
    "longname": "test/integration.spec.js~describe8.it9",
    "access": null,
    "description": "can create new Materials and link them",
    "lineNumber": 15
  },
  {
    "__docId__": 266,
    "kind": "testFile",
    "name": "test/modules/canonicalTrees.spec.js",
    "content": "import {describe, it, expect, beforeEach} from '../test.helper';\n\nimport moduleFactory from '../../src/modules/canonicalTrees';\nimport {simpleMockHandlers} from \"../mock-handlers.helper\";\n\n\ndescribe(\"'canonicalTrees' Module\", () => {\n\t\n\tlet environment;\n\tbeforeEach(() => { environment = moduleFactory() });\n\t\n\tit(\"exports the expected classes\", () => {\n\t\t\n\t\texpect(environment.classes).to.contain.resources(\n\t\t\t'CanonicalTree',\n\t\t\t'CanonicalTreeBranch'\n\t\t);\n\t\texpect(environment.classes).to.contain.relationships(\n\t\t\t'HasBranch',\n\t\t\t'BranchesTo',\n\t\t\t'IsConveyedBy'\n\t\t);\n\t\t\n\t});\n\n});\n",
    "static": true,
    "longname": "test/modules/canonicalTrees.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 267,
    "kind": "testDescribe",
    "name": "describe10",
    "testId": 10,
    "memberof": "test/modules/canonicalTrees.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/modules/canonicalTrees.spec.js~describe10",
    "access": null,
    "description": "'canonicalTrees' Module",
    "lineNumber": 6
  },
  {
    "__docId__": 268,
    "kind": "testIt",
    "name": "it11",
    "testId": 11,
    "memberof": "test/modules/canonicalTrees.spec.js~describe10",
    "testDepth": 1,
    "static": true,
    "longname": "test/modules/canonicalTrees.spec.js~describe10.it11",
    "access": null,
    "description": "exports the expected classes",
    "lineNumber": 13
  },
  {
    "__docId__": 269,
    "kind": "testFile",
    "name": "test/modules/groups.spec.js",
    "content": "import {describe, it, expect, beforeEach} from '../test.helper';\nimport moduleFactory from '../../src/modules/groups';\nimport {simpleMockHandlers} from \"../mock-handlers.helper\";\n\n\ndescribe(\"'groups' Module\", () => {\n\t\n\tlet environment;\n\tbeforeEach(() => { environment = moduleFactory() });\n\t\n\tit(\"exports the expected classes\", () => {\n\n\t\texpect(environment.classes).to.contain.resources(\n\t\t\t'Group'\n\t\t);\n\t\texpect(environment.classes).to.contain.relationships(\n\t\t\t'IncludesElement'\n\t\t);\n\n\t});\n\n});\n",
    "static": true,
    "longname": "test/modules/groups.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 270,
    "kind": "testDescribe",
    "name": "describe12",
    "testId": 12,
    "memberof": "test/modules/groups.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/modules/groups.spec.js~describe12",
    "access": null,
    "description": "'groups' Module",
    "lineNumber": 5
  },
  {
    "__docId__": 271,
    "kind": "testIt",
    "name": "it13",
    "testId": 13,
    "memberof": "test/modules/groups.spec.js~describe12",
    "testDepth": 1,
    "static": true,
    "longname": "test/modules/groups.spec.js~describe12.it13",
    "access": null,
    "description": "exports the expected classes",
    "lineNumber": 12
  },
  {
    "__docId__": 272,
    "kind": "testFile",
    "name": "test/modules/lyphs.spec.js",
    "content": "import {describe, it, expect, beforeEach} from '../test.helper';\n\nimport moduleFactory from '../../src/modules/lyphs';\n\ndescribe(\"'lyphs' Module\", () => {\n\t\n\tlet environment;\n\tbeforeEach(() => { environment = moduleFactory() });\n\t\n\tit(\"exports the expected classes\", () => {\n\t\t\n\t\texpect(environment.classes).to.contain.resources(\n\t\t\t'Material',\n\t\t\t'Lyph',\n\t\t\t'Border',\n\t\t\t'Node',\n\t\t\t'CoalescenceScenario',\n\t\t\t'Coalescence'\n\t\t);\n\t\texpect(environment.classes).to.contain.relationships(\n\t\t\t'ContainsMaterial',\n\t\t\t'HasPart',\n\t\t\t'HasLayer',\n\t\t\t'HasPatch',\n\t\t\t'HasSegment',\n\t\t\t'HasBorder',\n\t\t\t'HasRadialBorder',\n\t\t\t'HasLongitudinalBorder',\n\t\t\t'ContainsNode',\n\t\t\t'JoinsLyph',\n\t\t\t'Coalesces',\n\t\t\t'CoalescesLike'\n\t\t);\n\n\t});\n\n\tit(\"exports classes that can be instantiated\", () => {\n\t\t\n\t\tconst {Material, Lyph} = environment.classes;\n\t\t\n\t\tlet material = Material.new();\n\t\tlet lyph     = Lyph.new();\n\t\texpect(material).to.be.an.instanceOf(Material);\n\t\texpect(lyph    ).to.be.an.instanceOf(Material, Lyph);\n\t\t\n\t});\n\t\n\tit(\"exports lyph type that can be given custom borders and axes\", async () => {\n\t\t\n\t\tconst {\n\t\t\tLyph,\n\t\t\tBorder,\n\t\t\tHas,\n\t\t\tHasBorder,\n\t\t\tHasLongitudinalBorder\n\t\t} = environment.classes;\n\t\t\n\t\tlet lyph1 = Lyph.new({\n\t\t\tradialBorders: [ Border.new() ]\n\t\t});\n\t\t\n\t\texpect([...lyph1['-->HasBorder']])            .to.have.a.lengthOf(1);\n\t\texpect([...lyph1['-->HasRadialBorder']])      .to.have.a.lengthOf(1);\n\t\texpect([...lyph1['-->HasLongitudinalBorder']]).to.have.a.lengthOf(0);\n\t\texpect([...lyph1.radialBorders])              .to.have.a.lengthOf(1);\n\t\t\n\t\texpect([...lyph1.radialBorders][0]).to.be.an.instanceOf(Border);\n\t\t\n\t\tlet lyph2 = Lyph.new({\n\t\t\tradialBorders: [ Border.new(), Border.new() ],\n\t\t\taxis:            Border.new()\n\t\t});\n\n\t\texpect([...lyph2['-->HasBorder']]).to.have.a.lengthOf(3);\n\t\texpect([...lyph2.radialBorders])  .to.have.a.lengthOf(2);\n\t\texpect([...lyph2.radialBorders][0]).to.be.an.instanceOf(Border);\n\t\texpect([...lyph2.radialBorders][1]).to.be.an.instanceOf(Border);\n\t\texpect(lyph2.axis)                 .to.be.an.instanceOf(Border);\n\t\t\n\t});\n\t\n\tit(\"exports classes that have the properties and relationships of their superclasses\", () => {\n\t\t\n\t\tconst {Lyph} = environment.classes;\n\t\t\n\t\texpect(Lyph.properties   )        .to.have.property('id');\n\t\texpect(Lyph.relationships)        .to.have.property('-->ContainsMaterial');\n\t\texpect(Lyph.relationshipShortcuts).to.have.property('materials');\n\t\t\n\t});\n\t\n\tit(\"exports lyph classes that can have layers\", () => {\n\t\t\n\t\tconst {Lyph} = environment.classes;\n\t\t\n\t\tlet lyph = Lyph.new();\n\t\t\n\t\tlet layer1 = Lyph.new();\n\t\tlet layer2 = Lyph.new();\n\t\tlet layer3 = Lyph.new();\n\t\t\n\t\tlyph.layers.add(layer1);\n\t\tlyph.layers.add(layer2);\n\t\tlyph.layers.add(layer3);\n\t\t\n\t\tconst layers = [...lyph['-->HasLayer']];\n\t\texpect(layers.length).to.equal(3);\n\t\texpect(layers[0]).to.be.instanceOf(Lyph);\n\t\texpect(layers[1]).to.be.instanceOf(Lyph);\n\t\texpect(layers[2]).to.be.instanceOf(Lyph);\n\t\t\n\t});\n\t\n\tit(\"exports lyph classes that can have segments\", () => {\n\t\t\n\t\tconst {Lyph} = environment.classes;\n\t\t\n\t\tlet lyph = Lyph.new();\n\t\t\n\t\tlet segment1 = Lyph.new();\n\t\tlet segment2 = Lyph.new();\n\t\tlet segment3 = Lyph.new();\n\t\t\n\t\tlyph.segments.add(segment1);\n\t\tlyph.segments.add(segment2);\n\t\tlyph.segments.add(segment3);\n\t\t\n\t\tconst segments = [...lyph['-->HasSegment']];\n\t\texpect(segments.length).to.equal(3);\n\t\texpect(segments[0]).to.be.instanceOf(Lyph);\n\t\texpect(segments[1]).to.be.instanceOf(Lyph);\n\t\texpect(segments[2]).to.be.instanceOf(Lyph);\n\t\t\n\t});\n\t\n\tit(\"exports lyph classes that have icons\", () => {\n\t\tconst {Lyph} = environment.classes;\n\t\texpect(Lyph.icon).to.be.a('string');\n\t});\n\t\n});\n",
    "static": true,
    "longname": "test/modules/lyphs.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 273,
    "kind": "testDescribe",
    "name": "describe14",
    "testId": 14,
    "memberof": "test/modules/lyphs.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/modules/lyphs.spec.js~describe14",
    "access": null,
    "description": "'lyphs' Module",
    "lineNumber": 5
  },
  {
    "__docId__": 274,
    "kind": "testIt",
    "name": "it15",
    "testId": 15,
    "memberof": "test/modules/lyphs.spec.js~describe14",
    "testDepth": 1,
    "static": true,
    "longname": "test/modules/lyphs.spec.js~describe14.it15",
    "access": null,
    "description": "exports the expected classes",
    "lineNumber": 12
  },
  {
    "__docId__": 275,
    "kind": "testIt",
    "name": "it16",
    "testId": 16,
    "memberof": "test/modules/lyphs.spec.js~describe14",
    "testDepth": 1,
    "static": true,
    "longname": "test/modules/lyphs.spec.js~describe14.it16",
    "access": null,
    "description": "exports classes that can be instantiated",
    "lineNumber": 18
  },
  {
    "__docId__": 276,
    "kind": "testIt",
    "name": "it17",
    "testId": 17,
    "memberof": "test/modules/lyphs.spec.js~describe14",
    "testDepth": 1,
    "static": true,
    "longname": "test/modules/lyphs.spec.js~describe14.it17",
    "access": null,
    "description": "exports lyph type that can be given custom borders and axes",
    "lineNumber": 28
  },
  {
    "__docId__": 277,
    "kind": "testIt",
    "name": "it18",
    "testId": 18,
    "memberof": "test/modules/lyphs.spec.js~describe14",
    "testDepth": 1,
    "static": true,
    "longname": "test/modules/lyphs.spec.js~describe14.it18",
    "access": null,
    "description": "exports classes that have the properties and relationships of their superclasses",
    "lineNumber": 61
  },
  {
    "__docId__": 278,
    "kind": "testIt",
    "name": "it19",
    "testId": 19,
    "memberof": "test/modules/lyphs.spec.js~describe14",
    "testDepth": 1,
    "static": true,
    "longname": "test/modules/lyphs.spec.js~describe14.it19",
    "access": null,
    "description": "exports lyph classes that can have layers",
    "lineNumber": 70
  },
  {
    "__docId__": 279,
    "kind": "testIt",
    "name": "it20",
    "testId": 20,
    "memberof": "test/modules/lyphs.spec.js~describe14",
    "testDepth": 1,
    "static": true,
    "longname": "test/modules/lyphs.spec.js~describe14.it20",
    "access": null,
    "description": "exports lyph classes that can have segments",
    "lineNumber": 91
  },
  {
    "__docId__": 280,
    "kind": "testIt",
    "name": "it21",
    "testId": 21,
    "memberof": "test/modules/lyphs.spec.js~describe14",
    "testDepth": 1,
    "static": true,
    "longname": "test/modules/lyphs.spec.js~describe14.it21",
    "access": null,
    "description": "exports lyph classes that have icons",
    "lineNumber": 112
  },
  {
    "__docId__": 281,
    "kind": "testFile",
    "name": "test/modules/measurables.spec.js",
    "content": "import { describe, it, expect, beforeEach} from '../test.helper';\n\nimport moduleFactory from '../../src/modules/measurables';\nimport {simpleMockHandlers} from \"../mock-handlers.helper\";\n\ndescribe(\"'measurables' Module\", () => {\n\t\n\tlet environment;\n\tbeforeEach(() => { environment = moduleFactory() });\n\t\n\tit(\"exports the expected classes\", () => {\n\n\t\texpect(environment.classes).to.contain.resources(\n\t\t\t'MeasurableLocation',\n\t\t\t'Measurable',\n\t\t\t'Causality'\n\t\t);\n\t\texpect(environment.classes).to.contain.relationships(\n\t\t\t'MeasuresMaterial',\n\t\t\t'HasMeasurable',\n\t\t\t'IsCauseOf',\n\t\t\t'HasEffect'\n\t\t);\n\n\t});\n \n\tit(\"exports an abstract MeasurableLocation class\", () => {\n\t\tconst {MeasurableLocation, Measurable} = environment.classes;\n\t\texpect(MeasurableLocation.abstract).to.be.true;\n\t\texpect(Measurable.abstract).to.be.false;\n\t});\n\t\n});\n",
    "static": true,
    "longname": "test/modules/measurables.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 282,
    "kind": "testDescribe",
    "name": "describe22",
    "testId": 22,
    "memberof": "test/modules/measurables.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/modules/measurables.spec.js~describe22",
    "access": null,
    "description": "'measurables' Module",
    "lineNumber": 6
  },
  {
    "__docId__": 283,
    "kind": "testIt",
    "name": "it23",
    "testId": 23,
    "memberof": "test/modules/measurables.spec.js~describe22",
    "testDepth": 1,
    "static": true,
    "longname": "test/modules/measurables.spec.js~describe22.it23",
    "access": null,
    "description": "exports the expected classes",
    "lineNumber": 13
  },
  {
    "__docId__": 284,
    "kind": "testIt",
    "name": "it24",
    "testId": 24,
    "memberof": "test/modules/measurables.spec.js~describe22",
    "testDepth": 1,
    "static": true,
    "longname": "test/modules/measurables.spec.js~describe22.it24",
    "access": null,
    "description": "exports an abstract MeasurableLocation class",
    "lineNumber": 19
  },
  {
    "__docId__": 285,
    "kind": "testFile",
    "name": "test/modules/processes.spec.js",
    "content": "import {describe, it, expect, beforeEach} from '../test.helper';\n\nimport moduleFactory from '../../src/modules/processes';\nimport {simpleMockHandlers} from \"../mock-handlers.helper\";\n\n\ndescribe(\"'processes' Module\", () => {\n\t\n\tlet environment;\n\tbeforeEach(() => { environment = moduleFactory() });\n\t\n\tit(\"exports the expected classes\", () => {\n\n\t\texpect(environment.classes).to.contain.resources(\n\t\t\t'Process'\n\t\t);\n\t\texpect(environment.classes).to.contain.relationships(\n\t\t\t'IsSourceFor',\n\t\t\t'HasTarget',\n\t\t\t'ConveysProcess',\n\t\t\t'TransportsMaterial',\n\t\t\t'HasSegment',\n\t\t\t'HasProcessChannel',\n\t\t\t'HasNodeChannel'\n\t\t);\n\n\t});\n\n});\n",
    "static": true,
    "longname": "test/modules/processes.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 286,
    "kind": "testDescribe",
    "name": "describe25",
    "testId": 25,
    "memberof": "test/modules/processes.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/modules/processes.spec.js~describe25",
    "access": null,
    "description": "'processes' Module",
    "lineNumber": 6
  },
  {
    "__docId__": 287,
    "kind": "testIt",
    "name": "it26",
    "testId": 26,
    "memberof": "test/modules/processes.spec.js~describe25",
    "testDepth": 1,
    "static": true,
    "longname": "test/modules/processes.spec.js~describe25.it26",
    "access": null,
    "description": "exports the expected classes",
    "lineNumber": 13
  },
  {
    "__docId__": 288,
    "kind": "testFile",
    "name": "test/modules/research.spec.js",
    "content": "import {describe, it, expect, beforeEach} from '../test.helper';\nimport moduleFactory from '../../src/modules/research';\nimport {simpleMockHandlers} from \"../mock-handlers.helper\";\n\n\ndescribe(\"'research' Module\", () => {\n\t\n\tlet environment;\n\tbeforeEach(() => { environment = moduleFactory() });\n\t\n\tit(\"exports the expected classes\", () => {\n\n\t\texpect(environment.classes).to.contain.resources(\n\t\t\t'Correlation',\n\t\t\t'ClinicalIndex',\n\t\t\t'Publication'\n\t\t);\n\t\texpect(environment.classes).to.contain.relationships(\n\t\t\t'InvolvesMeasurable',\n\t\t\t'EncompassesClinicalIndex',\n\t\t\t'InvolvesClinicalIndex',\n\t\t\t'InvolvesPublication'\n\t\t);\n\n\t});\n\n});\n",
    "static": true,
    "longname": "test/modules/research.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 289,
    "kind": "testDescribe",
    "name": "describe27",
    "testId": 27,
    "memberof": "test/modules/research.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/modules/research.spec.js~describe27",
    "access": null,
    "description": "'research' Module",
    "lineNumber": 5
  },
  {
    "__docId__": 290,
    "kind": "testIt",
    "name": "it28",
    "testId": 28,
    "memberof": "test/modules/research.spec.js~describe27",
    "testDepth": 1,
    "static": true,
    "longname": "test/modules/research.spec.js~describe27.it28",
    "access": null,
    "description": "exports the expected classes",
    "lineNumber": 12
  },
  {
    "__docId__": 291,
    "kind": "testFile",
    "name": "test/modules/resources.spec.js",
    "content": "import {describe, it, expect, beforeEach} from '../test.helper';\n\nimport moduleFactory from '../../src/modules/resources';\nimport {simpleMockHandlers} from \"../mock-handlers.helper\";\n\n\ndescribe(\"'resources' Module\", () => {\n\t\n\tlet environment;\n\tbeforeEach(() => { environment = moduleFactory() });\n\t\n\tit(\"exports the expected classes\", () => {\n\n\t\texpect(environment.classes).to.contain.resources(\n\t\t\t'Resource',\n\t\t\t'ExternalResource'\n\t\t);\n\t\texpect(environment.classes).to.contain.relationships(\n\t\t\t'IsRelatedTo',\n\t\t\t'CorrespondsTo'\n\t\t);\n\t\t\n\t});\n\t\n\tit(\"has abstract classes\", () => {\n\t\t\n\t\tconst {Resource, IsRelatedTo} = environment.classes;\n\t\t\n\t\texpect(Resource)   .to.have.property('abstract', true);\n\t\texpect(IsRelatedTo).to.have.property('abstract', true);\n\t});\n\t\n});\n",
    "static": true,
    "longname": "test/modules/resources.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 292,
    "kind": "testDescribe",
    "name": "describe29",
    "testId": 29,
    "memberof": "test/modules/resources.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/modules/resources.spec.js~describe29",
    "access": null,
    "description": "'resources' Module",
    "lineNumber": 6
  },
  {
    "__docId__": 293,
    "kind": "testIt",
    "name": "it30",
    "testId": 30,
    "memberof": "test/modules/resources.spec.js~describe29",
    "testDepth": 1,
    "static": true,
    "longname": "test/modules/resources.spec.js~describe29.it30",
    "access": null,
    "description": "exports the expected classes",
    "lineNumber": 13
  },
  {
    "__docId__": 294,
    "kind": "testIt",
    "name": "it31",
    "testId": 31,
    "memberof": "test/modules/resources.spec.js~describe29",
    "testDepth": 1,
    "static": true,
    "longname": "test/modules/resources.spec.js~describe29.it31",
    "access": null,
    "description": "has abstract classes",
    "lineNumber": 19
  },
  {
    "__docId__": 295,
    "kind": "testFile",
    "name": "test/modules/typed.spec.js",
    "content": "import {describe, it, expect, beforeEach} from '../test.helper';\n\nimport moduleFactory from '../../src/modules/typed';\nimport {simpleMockHandlers} from \"../mock-handlers.helper\";\n\n\ndescribe(\"'typed' Module\", () => {\n\t\n\tlet environment;\n\tbeforeEach(() => { environment = moduleFactory() });\n\t\n\tit(\"exports the expected classes\", () => {\n\n\t\texpect(environment.classes).to.contain.resources(\n\t\t\t'Type',\n\t\t\t'Template'\n\t\t);\n\t\texpect(environment.classes).to.contain.relationships(\n\t\t\t'IsSubtypeOf',\n\t\t\t'HasCardinalityMultipliedByThatOf',\n\t\t\t'HasType',\n\t\t\t'DefinesType'\n\t\t);\n\n\t});\n\n});\n",
    "static": true,
    "longname": "test/modules/typed.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 296,
    "kind": "testDescribe",
    "name": "describe32",
    "testId": 32,
    "memberof": "test/modules/typed.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/modules/typed.spec.js~describe32",
    "access": null,
    "description": "'typed' Module",
    "lineNumber": 6
  },
  {
    "__docId__": 297,
    "kind": "testIt",
    "name": "it33",
    "testId": 33,
    "memberof": "test/modules/typed.spec.js~describe32",
    "testDepth": 1,
    "static": true,
    "longname": "test/modules/typed.spec.js~describe32.it33",
    "access": null,
    "description": "exports the expected classes",
    "lineNumber": 13
  },
  {
    "__docId__": 298,
    "kind": "testFile",
    "name": "test/regression.spec.js",
    "content": "import {describe, expect, it, beforeEach} from './test.helper';\nimport moduleFactory from '../src/index';\n\n\ndescribe(\"regression tests\", () => {\n\n    let environment;\n   \tbeforeEach(() => { environment = moduleFactory() });\n\n    it(\"HasType[2] set to null? (pre-manifest-separation)\", () => {\n        const {Group, Lyph} = environment.classes;\n\n        let lyph1 = Lyph .new();\n        let lyph2 = Lyph .new();\n        let group = Group.new();\n\n        group.elements.add(lyph1);\n        group.elements.add(lyph2);\n\n        expect([...group.elements]).to.eql([lyph1, lyph2]);\n    });\n\n    it(\"trying to instantiate abstract class Has\", () => {\n        const {Lyph, HasPart} = environment.classes;\n\n        let subLyph = Lyph.new({ name: 'Sublyph' });\n\n        let layer1 = Lyph.new({ name: 'Vessel Wall' });\n\n        let layer2 = Lyph.new({\n            name: 'Blood Layer',\n            parts: [ subLyph ]\n        });\n\n        let bloodVessel = Lyph.new({\n            name: 'Blood Vessel',\n            layers: [ layer1, layer2 ]\n        });\n        \n        expect(() => { layer1.parts.add(subLyph) }).not.to.throw();\n        \n        expect([...layer1.parts])   .to.include(subLyph);\n        expect([...layer1.children]).to.include(subLyph);\n        expect([...subLyph.parents]).to.include(layer1);\n        expect([...subLyph.parents]).to.include(layer2);\n        expect(subLyph['<--HasPart'].size).to.equal(2);\n        expect([...subLyph['<--HasPart']][0]).to.be.instanceOf(Lyph);\n        expect([...subLyph['<--Has']][0])    .to.be.instanceOf(Lyph);\n\n    });\n\n    it(\"relationship mismatch\", () => {\n        const {Lyph, Type} = environment.classes;\n\n        let blood = Lyph.new({ name: \"Blood\" });\n        let bloodType = Type.new({ name: blood.name, definition: blood });\n        blood.types.add(bloodType);\n\n        expect(blood.types.size).to.equal(1);\n        expect([...blood.types][0]).to.equal(bloodType);\n    });\n    \n    it(\"export manually defined plural\", () => {\n        const {Process, Causality} = environment.classes;\n\n        let process   = Process.new({ name: \"Blood advection\" });\n        let causality = Causality.new({});\n\n        expect(process.constructor).to.have.a.property('plural', \"processes\");\n        expect(causality.constructor).to.have.a.property('plural', \"causalities\");\n    });\n\n    it(\"auto-synchronized border-natures?\", async () => {\n\n        const {Lyph, Border} = environment.classes;\n\n        let lyph = Lyph.new({\n            longitudinalBorders: [\n                Border.new(),\n                Border.new()\n            ]\n        });\n\n        await new Promise((resolve) => { setTimeout(resolve, 10) });\n\n        expect(new Set([\n            [...lyph.longitudinalBorders][0].nature,\n            [...lyph.longitudinalBorders][1].nature\n        ]).size).to.equal(2);\n\n        // To compare, this was the nature of the original bug.\n        // The default value of properties was shared among entities:\n        let singleArray = [];\n        expect(new Set([\n            singleArray,\n            singleArray\n        ]).size).to.equal(1);\n\n    });\n    \n});\n",
    "static": true,
    "longname": "test/regression.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 299,
    "kind": "testDescribe",
    "name": "describe34",
    "testId": 34,
    "memberof": "test/regression.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/regression.spec.js~describe34",
    "access": null,
    "description": "regression tests",
    "lineNumber": 4
  },
  {
    "__docId__": 300,
    "kind": "testIt",
    "name": "it35",
    "testId": 35,
    "memberof": "test/regression.spec.js~describe34",
    "testDepth": 1,
    "static": true,
    "longname": "test/regression.spec.js~describe34.it35",
    "access": null,
    "description": "HasType[2] set to null? (pre-manifest-separation)",
    "lineNumber": 11
  },
  {
    "__docId__": 301,
    "kind": "testIt",
    "name": "it36",
    "testId": 36,
    "memberof": "test/regression.spec.js~describe34",
    "testDepth": 1,
    "static": true,
    "longname": "test/regression.spec.js~describe34.it36",
    "access": null,
    "description": "trying to instantiate abstract class Has",
    "lineNumber": 24
  },
  {
    "__docId__": 302,
    "kind": "testIt",
    "name": "it37",
    "testId": 37,
    "memberof": "test/regression.spec.js~describe34",
    "testDepth": 1,
    "static": true,
    "longname": "test/regression.spec.js~describe34.it37",
    "access": null,
    "description": "relationship mismatch",
    "lineNumber": 54
  },
  {
    "__docId__": 303,
    "kind": "testIt",
    "name": "it38",
    "testId": 38,
    "memberof": "test/regression.spec.js~describe34",
    "testDepth": 1,
    "static": true,
    "longname": "test/regression.spec.js~describe34.it38",
    "access": null,
    "description": "export manually defined plural",
    "lineNumber": 65
  },
  {
    "__docId__": 304,
    "kind": "testIt",
    "name": "it39",
    "testId": 39,
    "memberof": "test/regression.spec.js~describe34",
    "testDepth": 1,
    "static": true,
    "longname": "test/regression.spec.js~describe34.it39",
    "access": null,
    "description": "auto-synchronized border-natures?",
    "lineNumber": 75
  },
  {
    "__docId__": 305,
    "kind": "testFile",
    "name": "test/util/ObservableSet.spec.js",
    "content": "import {describe, it, expect, beforeEach} from '../test.helper';\n\nimport ObservableSet, {setEquals} from '../../src/util/ObservableSet';\n\ndescribe(\"ObservableSet\", () => {\n\t\n\tlet s;\n\tbeforeEach(() => {\n\t\ts = new ObservableSet();\n\t});\n\t\n\tit(\"can replay the current set on a new 'add' subscription\", () => {\n\t\t\n\t\tlet added   = new Set();\n\t\tlet deleted = new Set();\n\t\t\n\t\ts.e('add')   .subscribe((v) => { added  .add(v) });\n\t\ts.e('delete').subscribe((v) => { deleted.add(v) });\n\t\t\n\t\ts.add(1);\n\t\ts.add(2);\n\t\ts.delete(1);\n\t\t\n\t\texpect([...added])    .to.include(1);\n\t\texpect([...added])    .to.include(2);\n\t\texpect([...added]).not.to.include(3);\n\t\texpect([...deleted])  .to.include(1);\n\t\t\n\t});\n\t\n\tit(\"can replay the current set on a new 'add' subscription\", () => {\n\t\t\n\t\tlet added = new Set();\n\t\t\n\t\ts.add(1);\n\t\ts.add(2);\n\t\ts.add(3);\n\t\ts.delete(1);\n\t\t\n\t\ts.e('add').subscribe((v) => { added.add(v) });\n\t\t\n\t\ts.add(4);\n\t\ts.add(5);\n\t\ts.delete(2);\n\t\t\n\t\texpect([...added]).to.include(2);\n\t\texpect([...added]).to.include(3);\n\t\texpect([...added]).to.include(4);\n\t\texpect([...added]).to.include(5);\n\t\texpect([...added]).to.not.include(1);\n\t\t\n\t});\n\t\n\tit(\"can use replay to synchronize the entire set through the 'add' and 'delete' subjects\", () => {\n\t\t\n\t\tlet syncedSet = new Set();\n\t\t\n\t\ts.add(1);\n\t\ts.add(2);\n\t\ts.add(3);\n\t\ts.delete(1);\n\t\t\n\t\ts.e('add'   ).subscribe(::syncedSet.add);\n\t\ts.e('delete').subscribe(::syncedSet.delete);\n\t\t\n\t\ts.add(4);\n\t\ts.add(5);\n\t\ts.delete(2);\n\t\t\n\t\texpect([...syncedSet]).to.include(3);\n\t\texpect([...syncedSet]).to.include(4);\n\t\texpect([...syncedSet]).to.include(5);\n\t\texpect([...syncedSet]).to.not.include(1);\n\t\texpect([...syncedSet]).to.not.include(2);\n\n\t\texpect([...s]).to.eql([...syncedSet]);\n\t\t\n\t});\n\t\n\tit(\"can emit a copy of the current set every time something is added or deleted\", () => {\n\t\t\n\t\tlet values = [];\n\t\t\n\t\ts.p('value').subscribe((v) => { values.push(v) });\n\t\t\n\t\ts.add(1);\n\t\ts.add(2);\n\t\ts.delete(1);\n\t\t\n\t\texpect([...values[0]]).to.eql([    ]);\n\t\texpect([...values[1]]).to.eql([1   ]);\n\t\texpect([...values[2]]).to.eql([1, 2]);\n\t\texpect([...values[3]]).to.eql([   2]);\n\t\t\n\t});\n\t\n});\n",
    "static": true,
    "longname": "test/util/ObservableSet.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 306,
    "kind": "testDescribe",
    "name": "describe40",
    "testId": 40,
    "memberof": "test/util/ObservableSet.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/util/ObservableSet.spec.js~describe40",
    "access": null,
    "description": "ObservableSet",
    "lineNumber": 5
  },
  {
    "__docId__": 307,
    "kind": "testIt",
    "name": "it41",
    "testId": 41,
    "memberof": "test/util/ObservableSet.spec.js~describe40",
    "testDepth": 1,
    "static": true,
    "longname": "test/util/ObservableSet.spec.js~describe40.it41",
    "access": null,
    "description": "can replay the current set on a new 'add' subscription",
    "lineNumber": 12
  },
  {
    "__docId__": 308,
    "kind": "testIt",
    "name": "it42",
    "testId": 42,
    "memberof": "test/util/ObservableSet.spec.js~describe40",
    "testDepth": 1,
    "static": true,
    "longname": "test/util/ObservableSet.spec.js~describe40.it42",
    "access": null,
    "description": "can replay the current set on a new 'add' subscription",
    "lineNumber": 34
  },
  {
    "__docId__": 309,
    "kind": "testIt",
    "name": "it43",
    "testId": 43,
    "memberof": "test/util/ObservableSet.spec.js~describe40",
    "testDepth": 1,
    "static": true,
    "longname": "test/util/ObservableSet.spec.js~describe40.it43",
    "access": null,
    "description": "can use replay to synchronize the entire set through the 'add' and 'delete' subjects",
    "lineNumber": 58
  },
  {
    "__docId__": 310,
    "kind": "testIt",
    "name": "it44",
    "testId": 44,
    "memberof": "test/util/ObservableSet.spec.js~describe40",
    "testDepth": 1,
    "static": true,
    "longname": "test/util/ObservableSet.spec.js~describe40.it44",
    "access": null,
    "description": "can emit a copy of the current set every time something is added or deleted",
    "lineNumber": 83
  }
]